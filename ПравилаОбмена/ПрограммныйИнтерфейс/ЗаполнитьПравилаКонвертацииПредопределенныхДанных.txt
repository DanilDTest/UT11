// Заполняет таблицу правил конвертации предопределенных данных.
//
// Параметры:
//  НаправлениеОбмена - Cтрока - "Отправка" либо "Получение".
//  ПравилаКонвертации - ТаблицаЗначений - таблица значений, в которую будут добавлены правила. 
Процедура ЗаполнитьПравилаКонвертацииПредопределенныхДанных(НаправлениеОбмена, ПравилаКонвертации) Экспорт
	Если НаправлениеОбмена = "Отправка" Тогда
		// ВариантыДействийПоРасхождениямВАктеПослеОтгрузки_О.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ВариантыДействийПоРасхождениямВАктеПослеОтгрузки_О";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки;
		ПравилоКонвертации.ТипXDTO   = "ВариантыДействийПоРасхождениямВАктеПослеОтгрузки";
	
		ЗначенияДляОтправки = Новый Соответствие;
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ОформитьДополнительнымПТ, "ДопоставкаНеТребуется");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ОформитьКорректировкой, "RM_ОформитьКорректировкой");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ОформитьОбратнымПОнТ, "RM_ОформитьКорректировкой");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ОформитьПересчетом, "RM_ОформитьПересчетом");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ОформитьСписанием, "RM_ОформитьСписанием");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ПокупкаПерепоставленного_ЗнП, "RM_ПокупкаПерепоставленного_ЗнП");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ВозвратПерепоставленного, "ВозвратПерепоставленного");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ДопоставкаНеТребуется, "ДопоставкаНеТребуется");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.НедостачаНеПризнана, "НедостачаНеПризнана");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ОприходоватьСейчас, "ОприходоватьСейчас");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ОтгрузитьСейчас, "ОтгрузитьСейчас");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПерепоставленноеДарится, "ПерепоставленноеДарится");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПокупкаПерепоставленного, "ПокупкаПерепоставленного");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ТребуетсяДопоставка, "ТребуетсяДопоставка");
		ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	
		// ВидыКИ_Отправка.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ВидыКИ_Отправка";
		ПравилоКонвертации.ТипДанных = Метаданные.Справочники.ВидыКонтактнойИнформации;
		ПравилоКонвертации.ТипXDTO   = "ВидыКИ";
	
		ЗначенияДляОтправки = Новый Соответствие;
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица, "АдресЭлектроннойПочты");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.EmailКонтрагента, "АдресЭлектроннойПочты");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.EmailОрганизации, "АдресЭлектроннойПочты");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.EmailПартнера, "АдресЭлектроннойПочты");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.EmailПользователя, "АдресЭлектроннойПочты");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица, "АдресЭлектроннойПочты");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.АдресДляИнформированияФизическиеЛица, "ПочтовыйАдрес");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица, "ФактическийАдрес");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.АдресНалоговогоОргана, "ЮридическийАдрес");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.АдресПартнера, "ЮридическийАдрес");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица, "ЮридическийАдрес");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.АдресСклада, "ФактическийАдрес");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.МеждународныйАдресКонтрагента, "ПочтовыйАдрес");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.МеждународныйАдресОрганизации, "ПочтовыйАдрес");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента, "ПочтовыйАдрес");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации, "ПочтовыйАдрес");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ТелефонДомашнийФизическиеЛица, "ТелефонДомашний");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента, "Телефон");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица, "Телефон");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ТелефонНалоговогоОргана, "Телефон");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации, "Телефон");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ТелефонПартнера, "Телефон");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ТелефонПользователя, "Телефон");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица, "ТелефонРабочий");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ТелефонСклада, "Телефон");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ФаксКонтрагенты, "Факс");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ФаксОрганизации, "Факс");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента, "ФактическийАдрес");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации, "ФактическийАдрес");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, "ЮридическийАдрес");
		ЗначенияДляОтправки.Вставить(Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, "ЮридическийАдрес");
		ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	
		// ВидыОпераций_ПТиУ.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ВидыОпераций_ПТиУ";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
		ПравилоКонвертации.ТипXDTO   = "ВидыОперацийПоступленияТоваров";
	
		ЗначенияДляОтправки = Новый Соответствие;
		ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту, "ЗакупкаПоИмпорту");
		ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика, "ПокупкаУПоставщика");
		ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет, "ПокупкаУПоставщика");
		ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПриемНаКомиссию, "ПриемНаКомиссию");
		ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	
		// ВидыОперацийВыпускаПродукции.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ВидыОперацийВыпускаПродукции";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
		ПравилоКонвертации.ТипXDTO   = "ВидыОперацийВыпускаПродукции";
	
		ЗначенияДляОтправки = Новый Соответствие;
		ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыпускПродукцииВПодразделение, "ВыпускПродукцииВПодразделение");
		ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыпускПродукцииНаСклад, "ВыпускПродукцииНаСклад");
		ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой, "ВыпускПродукцииНаСклад");
		ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства, "ВыпускПродукцииНаСклад");
		ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию, "ВыпускПродукцииНаСклад");
		ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	
		// ВидыОперацийРеализацияТоваров_Отправка.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ВидыОперацийРеализацияТоваров_Отправка";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
		ПравилоКонвертации.ТипXDTO   = "ВидыОперацийРеализацияТоваровУслуг";
	
		ЗначенияДляОтправки = Новый Соответствие;
		ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию, "ПередачаНаКомиссию");
		ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияКлиенту, "РеализацияКлиенту");
		ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет, "РеализацияКлиенту");
		ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	
		// ВидыЭД_Реализация_Отправка.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ВидыЭД_Реализация_Отправка";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВариантыОформленияПродажи;
		ПравилоКонвертации.ТипXDTO   = "ВидыЭД";
	
		ЗначенияДляОтправки = Новый Соответствие;
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОформленияПродажи.АктВыполненныхРабот, "АктНаПередачуПрав");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОформленияПродажи.АктНаПередачуПрав, "АктНаПередачуПрав");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг, "ТОРГ12");
		ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	
		// Перечисление_ВариантОтраженияРасхождений_Излишки.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "Перечисление_ВариантОтраженияРасхождений_Излишки";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВариантыОтраженияРасхождений;
		ПравилоКонвертации.ТипXDTO   = "ВариантыОтраженияИзлишковПриПоступлении";
	
		ЗначенияДляОтправки = Новый Соответствие;
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОтраженияРасхождений.ИзлишкиВПользуПоставщика, "ВПользуПоставщика");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОтраженияРасхождений.ИзлишкиНаПрочиеДоходы, "НаПрочиеДоходы");
		ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	
		// Перечисление_ВариантОтраженияРасхождений_Недостачи.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "Перечисление_ВариантОтраженияРасхождений_Недостачи";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВариантыОтраженияРасхождений;
		ПравилоКонвертации.ТипXDTO   = "ВариантыОтраженияНедостачиПриПоступлении";
	
		ЗначенияДляОтправки = Новый Соответствие;
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОтраженияРасхождений.НедостачиЗаСчетПоставщика, "ЗаСчетПоставщика");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОтраженияРасхождений.НедостачиЗаСчетСтороннейКомпании, "ЗаСчетСтороннейКомпании");
		ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОтраженияРасхождений.НедостачиНаПрочиеРасходы, "НаПрочиеРасходы");
		ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	
		// Перечисление_ТипыДоговоров_Отправка.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "Перечисление_ТипыДоговоров_Отправка";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыДоговоров;
		ПравилоКонвертации.ТипXDTO   = "ВидыДоговоров";
	
		ЗначенияДляОтправки = Новый Соответствие;
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыДоговоров.ВвозИзЕАЭС, "СПоставщиком");
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыДоговоров.Импорт, "СПоставщиком");
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыДоговоров.СДавальцем, "СПокупателем");
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыДоговоров.СКомиссионером, "СКомиссионером");
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыДоговоров.СКомитентом, "СКомитентом");
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыДоговоров.СПереработчиком, "СПоставщиком");
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыДоговоров.СПоклажедателем, "СПоставщиком");
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыДоговоров.СПокупателем, "СПокупателем");
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыДоговоров.СПоставщиком, "СПоставщиком");
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыДоговоров.СХранителем, "СПокупателем");
		ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	
		// Перечисление_ТипыЗапасов.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "Перечисление_ТипыЗапасов";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыЗапасов;
		ПравилоКонвертации.ТипXDTO   = "ТипыЗапасов";
	
		ЗначенияДляОтправки = Новый Соответствие;
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыЗапасов.КомиссионныйТовар, "КомиссионныеТовары");
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыЗапасов.МатериалДавальца, "ДавальческиеСырьеИМатериалы");
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыЗапасов.Товар, "СобственныеТовары");
		ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	
		// СтатусыЧековККМ.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "СтатусыЧековККМ";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыЧековККМ;
		ПравилоКонвертации.ТипXDTO   = "СтатусыЧековККМ";
	
		ЗначенияДляОтправки = Новый Соответствие;
		ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЧековККМ.Отложен, "Отложенный");
		ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЧековККМ.Пробит, "Пробитый");
		ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЧековККМ.ТоварЗарезервирован, "Отложенный");
		ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	
		// ТипыСкладов_Отправка.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ТипыСкладов_Отправка";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыСкладов;
		ПравилоКонвертации.ТипXDTO   = "ТипыСкладов";
	
		ЗначенияДляОтправки = Новый Соответствие;
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыСкладов.ОптовыйСклад, "Оптовый");
		ЗначенияДляОтправки.Вставить(Перечисления.ТипыСкладов.РозничныйМагазин, "Розничный");
		ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	КонецЕсли;
	Если НаправлениеОбмена = "Получение" Тогда
		// ВидыОпераций_ПТиУ_Получение.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ВидыОпераций_ПТиУ_Получение";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
		ПравилоКонвертации.ТипXDTO   = "ВидыОперацийПоступленияТоваров";
	
		ЗначенияДляПолучения = Новый Соответствие;
		ЗначенияДляПолучения.Вставить("ЗакупкаПоИмпорту", Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
		ЗначенияДляПолучения.Вставить("ПокупкаУПоставщика", Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
		ЗначенияДляПолучения.Вставить("ПриемНаКомиссию", Перечисления.ХозяйственныеОперации.ПриемНаКомиссию);
		ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;
	
		// ВидыОперацийВыпускаПродукции_Получение.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ВидыОперацийВыпускаПродукции_Получение";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
		ПравилоКонвертации.ТипXDTO   = "ВидыОперацийВыпускаПродукции";
	
		ЗначенияДляПолучения = Новый Соответствие;
		ЗначенияДляПолучения.Вставить("ВыпускПродукцииВПодразделение", Перечисления.ХозяйственныеОперации.ВыпускПродукцииВПодразделение);
		ЗначенияДляПолучения.Вставить("ВыпускПродукцииНаСклад", Перечисления.ХозяйственныеОперации.ВыпускПродукцииНаСклад);
		ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;
	
		// ВидыОперацийРеализацияТоваров_Получение.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ВидыОперацийРеализацияТоваров_Получение";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
		ПравилоКонвертации.ТипXDTO   = "ВидыОперацийРеализацияТоваровУслуг";
	
		ЗначенияДляПолучения = Новый Соответствие;
		ЗначенияДляПолучения.Вставить("ПередачаНаКомиссию", Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
		ЗначенияДляПолучения.Вставить("ОтгрузкаБезПереходаПравСобственности_ВПути", Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности);
		ЗначенияДляПолучения.Вставить("ОтгрузкаБезПереходаПравСобственности_Реализовано", Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности);
		ЗначенияДляПолучения.Вставить("РеализацияКлиенту", Перечисления.ХозяйственныеОперации.РеализацияКлиенту);
		ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;
	
		// ВидыОперацийСБДСПрочее_Получение.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ВидыОперацийСБДСПрочее_Получение";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
		ПравилоКонвертации.ТипXDTO   = "ВидыОперацийСБДСПрочее";
	
		ЗначенияДляПолучения = Новый Соответствие;
		ЗначенияДляПолучения.Вставить("ВнутренняяПередача", Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
		ЗначенияДляПолучения.Вставить("ПрочееСписание", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
		ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;
	
		// ВидыЭД_Реализация_Получение.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ВидыЭД_Реализация_Получение";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВариантыОформленияПродажи;
		ПравилоКонвертации.ТипXDTO   = "ВидыЭД";
	
		ЗначенияДляПолучения = Новый Соответствие;
		ЗначенияДляПолучения.Вставить("АктНаПередачуПрав", Перечисления.ВариантыОформленияПродажи.АктНаПередачуПрав);
		ЗначенияДляПолучения.Вставить("ТОРГ12", Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг);
		ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;
	
		// Перечисление_ТипыДоговоров_Получение.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "Перечисление_ТипыДоговоров_Получение";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыДоговоров;
		ПравилоКонвертации.ТипXDTO   = "ВидыДоговоров";
	
		ЗначенияДляПолучения = Новый Соответствие;
		ЗначенияДляПолучения.Вставить("СКомиссионером", Перечисления.ТипыДоговоров.СКомиссионером);
		ЗначенияДляПолучения.Вставить("СКомиссионеромНаЗакупку", Перечисления.ТипыДоговоров.СКомиссионером);
		ЗначенияДляПолучения.Вставить("СКомитентом", Перечисления.ТипыДоговоров.СКомитентом);
		ЗначенияДляПолучения.Вставить("СКомитентомНаЗакупку", Перечисления.ТипыДоговоров.СКомитентом);
		ЗначенияДляПолучения.Вставить("СПокупателем", Перечисления.ТипыДоговоров.СПокупателем);
		ЗначенияДляПолучения.Вставить("Прочее", Перечисления.ТипыДоговоров.СПоставщиком);
		ЗначенияДляПолучения.Вставить("СПоставщиком", Перечисления.ТипыДоговоров.СПоставщиком);
		ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;
	
		// Перечисление_ЮрФизЛицо_Получение.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "Перечисление_ЮрФизЛицо_Получение";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ЮрФизЛицо;
		ПравилоКонвертации.ТипXDTO   = "ЮридическоеФизическоеЛицо";
	
		ЗначенияДляПолучения = Новый Соответствие;
		ЗначенияДляПолучения.Вставить("ФизическоеЛицо", Перечисления.ЮрФизЛицо.ФизЛицо);
		ЗначенияДляПолучения.Вставить("ЮридическоеЛицо", Перечисления.ЮрФизЛицо.ЮрЛицо);
		ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;
	
		// ТипыСкладов_Получение.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ТипыСкладов_Получение";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыСкладов;
		ПравилоКонвертации.ТипXDTO   = "ТипыСкладов";
	
		ЗначенияДляПолучения = Новый Соответствие;
		ЗначенияДляПолучения.Вставить("Оптовый", Перечисления.ТипыСкладов.ОптовыйСклад);
		ЗначенияДляПолучения.Вставить("НеавтоматизированнаяТорговаяТочка", Перечисления.ТипыСкладов.РозничныйМагазин);
		ЗначенияДляПолучения.Вставить("Розничный", Перечисления.ТипыСкладов.РозничныйМагазин);
		ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;
	
		// ХозОперации_ПБДСРасчетыСКонтрагентами.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ХозОперации_ПБДСРасчетыСКонтрагентами";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
		ПравилоКонвертации.ТипXDTO   = "ВидыРасчетовСКонтрагентами";
	
		ЗначенияДляПолучения = Новый Соответствие;
		ЗначенияДляПолучения.Вставить("СПоставщиком", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика);
		ЗначенияДляПолучения.Вставить("СПокупателем", Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
		ЗначенияДляПолучения.Вставить("КредитыИЗаймы", Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
		ЗначенияДляПолучения.Вставить("Прочее", Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
		ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;
	
		// ХозОперации_ПБДСРасчетыССотрудниками.
		ПравилоКонвертации           = ПравилаКонвертации.Добавить();
		ПравилоКонвертации.ИмяПКПД   = "ХозОперации_ПБДСРасчетыССотрудниками";
		ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
		ПравилоКонвертации.ТипXDTO   = "ВидыРасчетовССотрудниками";
	
		ЗначенияДляПолучения = Новый Соответствие;
		ЗначенияДляПолучения.Вставить("Подотчет", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника);
		ЗначенияДляПолучения.Вставить("Займы", Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
		ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;
	КонецЕсли;

	// RM_ВидыЭкспертизы.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "RM_ВидыЭкспертизы";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_ВидыЭкспертизы;
	ПравилоКонвертации.ТипXDTO   = "RM_ВидыЭкспертизы";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыЭкспертизы.Выбытие, "Выбытие");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыЭкспертизы.Поступление, "Поступление");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Выбытие", Перечисления.RM_ВидыЭкспертизы.Выбытие);
	ЗначенияДляПолучения.Вставить("Поступление", Перечисления.RM_ВидыЭкспертизы.Поступление);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// RM_СтатусыКодовМаркировкиИСМПРасширенный.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "RM_СтатусыКодовМаркировкиИСМПРасширенный";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный;
	ПравилоКонвертации.ТипXDTO   = "СтатусыКодовМаркировкиИСМПРасширенный";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВведенВОборотПриВозврате, "ВведенВОборотПриВозврате");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВведенВОборотПриМаркировкеОстатков, "ВведенВОборотПриМаркировкеОстатков");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВведенВОборотПриПеремаркировке, "ВведенВОборотПриПеремаркировке");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВведенВОборотПриПокупке, "ВведенВОборотПриПокупке");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВыведенИзОборотаВРезультатеСписания, "ВыведенИзОборотаВРезультатеСписания");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВыведенИзОборотаПриПеремаркировке, "ВыведенИзОборотаПриПеремаркировке");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВыведенИзОборотаПриПродаже, "ВыведенИзОборотаПриПродаже");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.Нанесен, "Нанесен");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.Неопределен, "Неопределен");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ОжидаетсяОтгрузка, "ОжидаетсяОтгрузка");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ОтгруженПриПеремещении, "ОтгруженПриПеремещении");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ПринятПриПеремещении, "ПринятПриПеремещении");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.Списан, "Списан");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.Эмитирован, "Эмитирован");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ВведенВОборотПриВозврате", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВведенВОборотПриВозврате);
	ЗначенияДляПолучения.Вставить("ВведенВОборотПриМаркировкеОстатков", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВведенВОборотПриМаркировкеОстатков);
	ЗначенияДляПолучения.Вставить("ВведенВОборотПриПеремаркировке", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВведенВОборотПриПеремаркировке);
	ЗначенияДляПолучения.Вставить("ВведенВОборотПриПокупке", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВведенВОборотПриПокупке);
	ЗначенияДляПолучения.Вставить("ВыведенИзОборотаВРезультатеСписания", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВыведенИзОборотаВРезультатеСписания);
	ЗначенияДляПолучения.Вставить("ВыведенИзОборотаПриПеремаркировке", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВыведенИзОборотаПриПеремаркировке);
	ЗначенияДляПолучения.Вставить("ВыведенИзОборотаПриПродаже", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ВыведенИзОборотаПриПродаже);
	ЗначенияДляПолучения.Вставить("Нанесен", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.Нанесен);
	ЗначенияДляПолучения.Вставить("Неопределен", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.Неопределен);
	ЗначенияДляПолучения.Вставить("ОжидаетсяОтгрузка", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ОжидаетсяОтгрузка);
	ЗначенияДляПолучения.Вставить("ОтгруженПриПеремещении", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ОтгруженПриПеремещении);
	ЗначенияДляПолучения.Вставить("ПринятПриПеремещении", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.ПринятПриПеремещении);
	ЗначенияДляПолучения.Вставить("Списан", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.Списан);
	ЗначенияДляПолучения.Вставить("Эмитирован", Перечисления.RM_СтатусыКодовМаркировкиИСМПРасширенный.Эмитирован);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ВариантыДействийПоРасхождениямВАктеПослеОтгрузки";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки;
	ПравилоКонвертации.ТипXDTO   = "ВариантыДействийПоРасхождениямВАктеПослеОтгрузки";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ОформитьКорректировкой, "RM_ОформитьКорректировкой");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ОформитьПересчетом, "RM_ОформитьПересчетом");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ОформитьСписанием, "RM_ОформитьСписанием");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ПокупкаПерепоставленного_ЗнП, "RM_ПокупкаПерепоставленного_ЗнП");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ВозвратПерепоставленного, "ВозвратПерепоставленного");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ДопоставкаНеТребуется, "ДопоставкаНеТребуется");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.НедостачаНеПризнана, "НедостачаНеПризнана");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ОприходоватьСейчас, "ОприходоватьСейчас");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ОтгрузитьСейчас, "ОтгрузитьСейчас");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПерепоставленноеДарится, "ПерепоставленноеДарится");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПокупкаПерепоставленного, "ПокупкаПерепоставленного");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ТребуетсяДопоставка, "ТребуетсяДопоставка");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("RM_ОформитьКорректировкой", Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ОформитьКорректировкой);
	ЗначенияДляПолучения.Вставить("RM_ОформитьПересчетом", Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ОформитьПересчетом);
	ЗначенияДляПолучения.Вставить("RM_ОформитьСписанием", Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ОформитьСписанием);
	ЗначенияДляПолучения.Вставить("RM_ПокупкаПерепоставленного_ЗнП", Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.RM_ПокупкаПерепоставленного_ЗнП);
	ЗначенияДляПолучения.Вставить("ВозвратПерепоставленного", Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ВозвратПерепоставленного);
	ЗначенияДляПолучения.Вставить("ДопоставкаНеТребуется", Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ДопоставкаНеТребуется);
	ЗначенияДляПолучения.Вставить("НедостачаНеПризнана", Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.НедостачаНеПризнана);
	ЗначенияДляПолучения.Вставить("ОприходоватьСейчас", Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ОприходоватьСейчас);
	ЗначенияДляПолучения.Вставить("ОтгрузитьСейчас", Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ОтгрузитьСейчас);
	ЗначенияДляПолучения.Вставить("ПерепоставленноеДарится", Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПерепоставленноеДарится);
	ЗначенияДляПолучения.Вставить("ПокупкаПерепоставленного", Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПокупкаПерепоставленного);
	ЗначенияДляПолучения.Вставить("ТребуетсяДопоставка", Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ТребуетсяДопоставка);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ВариантыПредставленияНаборовВПечатныхФормах.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ВариантыПредставленияНаборовВПечатныхФормах";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВариантыПредставленияНаборовВПечатныхФормах;
	ПравилоКонвертации.ТипXDTO   = "ВариантыПредставленияНаборовВПечатныхФормах";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие, "НаборИКомплектующие");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие, "ТолькоКомплектующие");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор, "ТолькоНабор");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("НаборИКомплектующие", Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие);
	ЗначенияДляПолучения.Вставить("ТолькоКомплектующие", Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие);
	ЗначенияДляПолучения.Вставить("ТолькоНабор", Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ВариантыПриемкиТоваров.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ВариантыПриемкиТоваров";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВариантыПриемкиТоваров;
	ПравилоКонвертации.ТипXDTO   = "ВариантыПриемкиТоваров";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыПриемкиТоваров.МожетПроисходитьБезЗаказовИНакладных, "МожетПроисходитьБезЗаказовИНакладных");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыПриемкиТоваров.НеРазделенаПоЗаказамИНакладным, "НеРазделенаПоЗаказамИНакладным");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыПриемкиТоваров.НеРазделенаПоНакладным, "НеРазделенаПоНакладным");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыПриемкиТоваров.ПоДоговорамБезЗаказовИНакладных, "ПоДоговорамБезЗаказовИНакладных");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыПриемкиТоваров.ПоДоговорамПослеЗаказовИлиНакладных, "ПоДоговорамПослеЗаказовИлиНакладных");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыПриемкиТоваров.ПоДоговорамПослеНакладных, "ПоДоговорамПослеНакладных");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным, "РазделенаПоЗаказамИНакладным");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным, "РазделенаТолькоПоНакладным");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("МожетПроисходитьБезЗаказовИНакладных", Перечисления.ВариантыПриемкиТоваров.МожетПроисходитьБезЗаказовИНакладных);
	ЗначенияДляПолучения.Вставить("НеРазделенаПоЗаказамИНакладным", Перечисления.ВариантыПриемкиТоваров.НеРазделенаПоЗаказамИНакладным);
	ЗначенияДляПолучения.Вставить("НеРазделенаПоНакладным", Перечисления.ВариантыПриемкиТоваров.НеРазделенаПоНакладным);
	ЗначенияДляПолучения.Вставить("ПоДоговорамБезЗаказовИНакладных", Перечисления.ВариантыПриемкиТоваров.ПоДоговорамБезЗаказовИНакладных);
	ЗначенияДляПолучения.Вставить("ПоДоговорамПослеЗаказовИлиНакладных", Перечисления.ВариантыПриемкиТоваров.ПоДоговорамПослеЗаказовИлиНакладных);
	ЗначенияДляПолучения.Вставить("ПоДоговорамПослеНакладных", Перечисления.ВариантыПриемкиТоваров.ПоДоговорамПослеНакладных);
	ЗначенияДляПолучения.Вставить("РазделенаПоЗаказамИНакладным", Перечисления.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным);
	ЗначенияДляПолучения.Вставить("РазделенаТолькоПоНакладным", Перечисления.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ВариантыРасчетаЦенНаборов.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ВариантыРасчетаЦенНаборов";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВариантыРасчетаЦенНаборов;
	ПравилоКонвертации.ТипXDTO   = "ВариантыРасчетаЦенНаборов";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих, "РассчитываетсяИзЦенКомплектующих");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям, "ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам, "ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("РассчитываетсяИзЦенКомплектующих", Перечисления.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих);
	ЗначенияДляПолучения.Вставить("ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям", Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям);
	ЗначенияДляПолучения.Вставить("ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам", Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ВидДеятельностиРаздельногоУчетаНДС.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ВидДеятельностиРаздельногоУчетаНДС";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыНалогообложенияНДС;
	ПравилоКонвертации.ТипXDTO   = "ВидДеятельностиРаздельногоУчетаНДС";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию, "ПоФактическомуИспользованию");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением, "ОпределяетсяРаспределением");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию, "ПоФактическомуИспользованию");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС, "НеОблагаетсяНДС");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД, "ОблагаетсяЕНВД");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, "ОблагаетсяНДС");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров, "ЭкспортНеСырьевыхТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг, "ЭкспортСырьевыхТоваров");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ПоФактическомуИспользованию", Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию);
	ЗначенияДляПолучения.Вставить("ОпределяетсяРаспределением", Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
	ЗначенияДляПолучения.Вставить("ПоФактическомуИспользованию", Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
	ЗначенияДляПолучения.Вставить("НеОблагаетсяНДС", Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	ЗначенияДляПолучения.Вставить("ОблагаетсяЕНВД", Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	ЗначенияДляПолучения.Вставить("ОблагаетсяНДС", Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	ЗначенияДляПолучения.Вставить("ЭкспортНеСырьевыхТоваров", Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
	ЗначенияДляПолучения.Вставить("ЭкспортСырьевыхТоваров", Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ВидыДоставки.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ВидыДоставки";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВидыДоставки;
	ПравилоКонвертации.ТипXDTO   = "ВидыДоставки";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыДоставки.НаСклад, "НаСклад");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыДоставки.СоСклада, "СоСклада");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("НаСклад", Перечисления.ВидыДоставки.НаСклад);
	ЗначенияДляПолучения.Вставить("СоСклада", Перечисления.ВидыДоставки.СоСклада);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ВидыОперацийВозвратОтПокупателя.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ВидыОперацийВозвратОтПокупателя";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
	ПравилоКонвертации.ТипXDTO   = "ВидыОперацийВозвратОтПокупателя";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера, "ВозвратОтКомиссионера");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя, "ВозвратОтРозничногоПокупателя");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента, "ВозвратОтКлиента");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ВозвратОтКомиссионера", Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера);
	ЗначенияДляПолучения.Вставить("ВозвратОтРозничногоПокупателя", Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя);
	ЗначенияДляПолучения.Вставить("ВозвратОтКлиента", Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ВидыОперацийВозвратПоставщику.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ВидыОперацийВозвратПоставщику";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
	ПравилоКонвертации.ТипXDTO   = "ВидыОперацийВозвратПоставщику";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту, "ВозвратКомитенту");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику, "ВозвратПоставщику");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ВозвратКомитенту", Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту);
	ЗначенияДляПолучения.Вставить("ВозвратПоставщику", Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ВидыОперацийРКОНаБанковскийСчет.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ВидыОперацийРКОНаБанковскийСчет";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
	ПравилоКонвертации.ТипXDTO   = "ВидыОперацийРКОНаБанковскийСчет";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк, "Инкассация");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СдачаДенежныхСредствВБанк, "ВзносНаличными");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Инкассация", Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк);
	ЗначенияДляПолучения.Вставить("ВзносНаличными", Перечисления.ХозяйственныеОперации.СдачаДенежныхСредствВБанк);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ВидыОтветственныхЛиц.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ВидыОтветственныхЛиц";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ОтветственныеЛицаОрганизаций;
	ПравилоКонвертации.ТипXDTO   = "ВидыОтветственныхЛиц";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер, "ГлавныйБухгалтер");
	ЗначенияДляОтправки.Вставить(Перечисления.ОтветственныеЛицаОрганизаций.Исполнитель, "Исполнитель");
	ЗначенияДляОтправки.Вставить(Перечисления.ОтветственныеЛицаОрганизаций.Кассир, "Кассир");
	ЗначенияДляОтправки.Вставить(Перечисления.ОтветственныеЛицаОрганизаций.ОтветственныйЗаБухгалтерскиеРегистры, "ОтветственныйЗаБухгалтерскиеРегистры");
	ЗначенияДляОтправки.Вставить(Перечисления.ОтветственныеЛицаОрганизаций.ОтветственныйЗаНалоговыеРегистры, "ОтветственныйЗаНалоговыеРегистры");
	ЗначенияДляОтправки.Вставить(Перечисления.ОтветственныеЛицаОрганизаций.Руководитель, "Руководитель");
	ЗначенияДляОтправки.Вставить(Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы, "РуководительКадровойСлужбы");
	ЗначенияДляОтправки.Вставить(Перечисления.ОтветственныеЛицаОрганизаций.УполномоченныйПредставитель, "УполномоченныйПредставитель");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ГлавныйБухгалтер", Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
	ЗначенияДляПолучения.Вставить("Исполнитель", Перечисления.ОтветственныеЛицаОрганизаций.Исполнитель);
	ЗначенияДляПолучения.Вставить("Кассир", Перечисления.ОтветственныеЛицаОрганизаций.Кассир);
	ЗначенияДляПолучения.Вставить("ОтветственныйЗаБухгалтерскиеРегистры", Перечисления.ОтветственныеЛицаОрганизаций.ОтветственныйЗаБухгалтерскиеРегистры);
	ЗначенияДляПолучения.Вставить("ОтветственныйЗаНалоговыеРегистры", Перечисления.ОтветственныеЛицаОрганизаций.ОтветственныйЗаНалоговыеРегистры);
	ЗначенияДляПолучения.Вставить("Руководитель", Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	ЗначенияДляПолучения.Вставить("РуководительКадровойСлужбы", Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы);
	ЗначенияДляПолучения.Вставить("УполномоченныйПредставитель", Перечисления.ОтветственныеЛицаОрганизаций.УполномоченныйПредставитель);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ВидыПродукцииИС.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ВидыПродукцииИС";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ОсобенностиУчетаНоменклатуры;
	ПравилоКонвертации.ТипXDTO   = "ВидыПродукцииИС";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.RM_Антисептики, "RM_Антисептики");
	ЗначенияДляОтправки.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.RM_ПарфюмерныеИКосметическиеСредстваИБытоваяХимия, "ПарфюмерныеИКосметическиеСредстваИБытоваяХимия");
	ЗначенияДляОтправки.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция, "Алкогольная");
	ЗначенияДляОтправки.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.Велосипеды, "Велосипеды");
	ЗначенияДляОтправки.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.Духи, "Духи");
	ЗначенияДляОтправки.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.КреслаКоляски, "КреслаКоляски");
	ЗначенияДляОтправки.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.ЛегкаяПромышленность, "ЛегкаяПромышленность");
	ЗначенияДляОтправки.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС, "МолочнаяПродукция");
	ЗначенияДляОтправки.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция, "Обувь");
	ЗначенияДляОтправки.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция, "Табак");
	ЗначенияДляОтправки.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.Фотоаппараты, "Фотоаппараты");
	ЗначенияДляОтправки.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.Шины, "Шины");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("RM_Антисептики", Перечисления.ОсобенностиУчетаНоменклатуры.RM_Антисептики);
	ЗначенияДляПолучения.Вставить("ПарфюмерныеИКосметическиеСредстваИБытоваяХимия", Перечисления.ОсобенностиУчетаНоменклатуры.RM_ПарфюмерныеИКосметическиеСредстваИБытоваяХимия);
	ЗначенияДляПолучения.Вставить("Алкогольная", Перечисления.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция);
	ЗначенияДляПолучения.Вставить("Велосипеды", Перечисления.ОсобенностиУчетаНоменклатуры.Велосипеды);
	ЗначенияДляПолучения.Вставить("Духи", Перечисления.ОсобенностиУчетаНоменклатуры.Духи);
	ЗначенияДляПолучения.Вставить("КреслаКоляски", Перечисления.ОсобенностиУчетаНоменклатуры.КреслаКоляски);
	ЗначенияДляПолучения.Вставить("ЛегкаяПромышленность", Перечисления.ОсобенностиУчетаНоменклатуры.ЛегкаяПромышленность);
	ЗначенияДляПолучения.Вставить("МолочнаяПродукция", Перечисления.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС);
	ЗначенияДляПолучения.Вставить("Обувь", Перечисления.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция);
	ЗначенияДляПолучения.Вставить("Табак", Перечисления.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция);
	ЗначенияДляПолучения.Вставить("Фотоаппараты", Перечисления.ОсобенностиУчетаНоменклатуры.Фотоаппараты);
	ЗначенияДляПолучения.Вставить("Шины", Перечисления.ОсобенностиУчетаНоменклатуры.Шины);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ВидыУпаковочныхЛистов.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ВидыУпаковочныхЛистов";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВидыУпаковочныхЛистов;
	ПравилоКонвертации.ТипXDTO   = "ВидыУпаковочныхЛистов";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыУпаковочныхЛистов.Входящий, "Входящий");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыУпаковочныхЛистов.Исходящий, "Исходящий");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Входящий", Перечисления.ВидыУпаковочныхЛистов.Входящий);
	ЗначенияДляПолучения.Вставить("Исходящий", Перечисления.ВидыУпаковочныхЛистов.Исходящий);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// КомпанияЧастноеЛицо_ЮридическоеФизическоеЛицо.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "КомпанияЧастноеЛицо_ЮридическоеФизическоеЛицо";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.КомпанияЧастноеЛицо;
	ПравилоКонвертации.ТипXDTO   = "ЮридическоеФизическоеЛицо";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.КомпанияЧастноеЛицо.Компания, "ЮридическоеЛицо");
	ЗначенияДляОтправки.Вставить(Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо, "ФизическоеЛицо");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ЮридическоеЛицо", Перечисления.КомпанияЧастноеЛицо.Компания);
	ЗначенияДляПолучения.Вставить("ФизическоеЛицо", Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// НалогообложениеНДС.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "НалогообложениеНДС";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыНалогообложенияНДС;
	ПравилоКонвертации.ТипXDTO   = "НалогообложениеНДС";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя, "ОблагаетсяНДСУПокупателя");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт, "ПродажаНаЭкспорт");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС, "ПродажаНеОблагаетсяНДС");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД, "ПродажаОблагаетсяЕНВД");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, "ПродажаОблагаетсяНДС");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ОблагаетсяНДСУПокупателя", Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	ЗначенияДляПолучения.Вставить("ПродажаНаЭкспорт", Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	ЗначенияДляПолучения.Вставить("ПродажаНеОблагаетсяНДС", Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	ЗначенияДляПолучения.Вставить("ПродажаОблагаетсяЕНВД", Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	ЗначенияДляПолучения.Вставить("ПродажаОблагаетсяНДС", Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// НалогообложениеНДСПродавца.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "НалогообложениеНДСПродавца";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыНалогообложенияНДС;
	ПравилоКонвертации.ТипXDTO   = "НалогообложениеНДСПродавца";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС, "НалоговыйАгентПоНДС");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя, "НДСИсчисляетсяПокупателем");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС, "НеОблагаетсяНДС");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД, "ОблагаетсяЕНВД");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, "ОблагаетсяНДС");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги, "ЭлектронныеУслуги");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("НалоговыйАгентПоНДС", Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
	ЗначенияДляПолучения.Вставить("НДСИсчисляетсяПокупателем", Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	ЗначенияДляПолучения.Вставить("НеОблагаетсяНДС", Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	ЗначенияДляПолучения.Вставить("ОблагаетсяЕНВД", Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	ЗначенияДляПолучения.Вставить("ОблагаетсяНДС", Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	ЗначенияДляПолучения.Вставить("ЭлектронныеУслуги", Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// НастройкаИспользованияСерий.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "НастройкаИспользованияСерий";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.НастройкиИспользованияСерийНоменклатуры;
	ПравилоКонвертации.ТипXDTO   = "НастройкиИспользованияСерийНоменклатуры";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.НастройкиИспользованияСерийНоменклатуры.ПартияТоваров, "ПартияТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара, "ЭкземплярТовара");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ПартияТоваров", Перечисления.НастройкиИспользованияСерийНоменклатуры.ПартияТоваров);
	ЗначенияДляПолучения.Вставить("ЭкземплярТовара", Перечисления.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_ВариантыОформленияБрака.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_ВариантыОформленияБрака";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_ВариантыОформленияБрака;
	ПравилоКонвертации.ТипXDTO   = "RM_ВариантыОформленияБрака";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВариантыОформленияБрака.ВМагазине, "ВМагазине");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВариантыОформленияБрака.НаСкладе, "НаСкладе");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ВМагазине", Перечисления.RM_ВариантыОформленияБрака.ВМагазине);
	ЗначенияДляПолучения.Вставить("НаСкладе", Перечисления.RM_ВариантыОформленияБрака.НаСкладе);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_ВидыДоставки.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_ВидыДоставки";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_ВидыДоставки;
	ПравилоКонвертации.ТипXDTO   = "RM_ВидыДоставки";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыДоставки.БезДоставки, "БезДоставки");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыДоставки.ДоставкаКурьерскойСлужбой, "ДоставкаКурьерскойСлужбой");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыДоставки.ДоставкаМаркетплейсом, "ДоставкаМаркетплейсом");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыДоставки.ЗабратьВМагазине, "ЗабратьВМагазине");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыДоставки.ПривезтиВМагазин, "ПривезтиВМагазин");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("БезДоставки", Перечисления.RM_ВидыДоставки.БезДоставки);
	ЗначенияДляПолучения.Вставить("ДоставкаКурьерскойСлужбой", Перечисления.RM_ВидыДоставки.ДоставкаКурьерскойСлужбой);
	ЗначенияДляПолучения.Вставить("ДоставкаМаркетплейсом", Перечисления.RM_ВидыДоставки.ДоставкаМаркетплейсом);
	ЗначенияДляПолучения.Вставить("ЗабратьВМагазине", Перечисления.RM_ВидыДоставки.ЗабратьВМагазине);
	ЗначенияДляПолучения.Вставить("ПривезтиВМагазин", Перечисления.RM_ВидыДоставки.ПривезтиВМагазин);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_ВидыИнтернетЗаказов.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_ВидыИнтернетЗаказов";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_ВидыИнтернетЗаказов;
	ПравилоКонвертации.ТипXDTO   = "RM_ВидыИнтернетЗаказов";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыИнтернетЗаказов.Amazon, "Амазон");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыИнтернетЗаказов.Lamoda, "Lamoda");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыИнтернетЗаказов.Ozon, "Ozon");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыИнтернетЗаказов.ИнтернетМагазин, "ИнтернетМагазин");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыИнтернетЗаказов.Мегамаркет, "Мегамаркет");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыИнтернетЗаказов.ЯндексМаркет, "ЯндексМаркет");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Амазон", Перечисления.RM_ВидыИнтернетЗаказов.Amazon);
	ЗначенияДляПолучения.Вставить("Lamoda", Перечисления.RM_ВидыИнтернетЗаказов.Lamoda);
	ЗначенияДляПолучения.Вставить("Ozon", Перечисления.RM_ВидыИнтернетЗаказов.Ozon);
	ЗначенияДляПолучения.Вставить("ИнтернетМагазин", Перечисления.RM_ВидыИнтернетЗаказов.ИнтернетМагазин);
	ЗначенияДляПолучения.Вставить("Мегамаркет", Перечисления.RM_ВидыИнтернетЗаказов.Мегамаркет);
	ЗначенияДляПолучения.Вставить("ЯндексМаркет", Перечисления.RM_ВидыИнтернетЗаказов.ЯндексМаркет);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_ВидыКатегорийБрака.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_ВидыКатегорийБрака";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_ВидыКатегорийБрака;
	ПравилоКонвертации.ТипXDTO   = "RM_ВидыКатегорийБрака";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыКатегорийБрака.BR1, "BR1");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыКатегорийБрака.BR2, "BR2");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыКатегорийБрака.BR3, "BR3");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыКатегорийБрака.Разукомплект, "Разукомплект");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыКатегорийБрака.Утиль, "Утиль");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("BR1", Перечисления.RM_ВидыКатегорийБрака.BR1);
	ЗначенияДляПолучения.Вставить("BR2", Перечисления.RM_ВидыКатегорийБрака.BR2);
	ЗначенияДляПолучения.Вставить("BR3", Перечисления.RM_ВидыКатегорийБрака.BR3);
	ЗначенияДляПолучения.Вставить("Разукомплект", Перечисления.RM_ВидыКатегорийБрака.Разукомплект);
	ЗначенияДляПолучения.Вставить("Утиль", Перечисления.RM_ВидыКатегорийБрака.Утиль);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_ВидыОперацийАктаБрака.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_ВидыОперацийАктаБрака";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_ВидыОперацийАктаБрака;
	ПравилоКонвертации.ТипXDTO   = "RM_ВидыОперацийАктаБрака";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыОперацийАктаБрака.Брак, "Брак");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыОперацийАктаБрака.Утиль, "Утиль");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Брак", Перечисления.RM_ВидыОперацийАктаБрака.Брак);
	ЗначенияДляПолучения.Вставить("Утиль", Перечисления.RM_ВидыОперацийАктаБрака.Утиль);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_ВидыСкладскихГруппУпаковок.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_ВидыСкладскихГруппУпаковок";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_ВидыСкладскихГруппУпаковок;
	ПравилоКонвертации.ТипXDTO   = "RM_ВидыСкладскихГруппУпаковок";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыСкладскихГруппУпаковок.МастерКартон, "МастерКартон");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ВидыСкладскихГруппУпаковок.Штуки, "Штуки");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("МастерКартон", Перечисления.RM_ВидыСкладскихГруппУпаковок.МастерКартон);
	ЗначенияДляПолучения.Вставить("Штуки", Перечисления.RM_ВидыСкладскихГруппУпаковок.Штуки);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_ПричиныВозникновенияБрака.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_ПричиныВозникновенияБрака";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_ПричиныВозникновенияБрака;
	ПравилоКонвертации.ТипXDTO   = "RM_ПричиныВозникновенияБрака";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ПричиныВозникновенияБрака.БойПоставки, "БойПоставки");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ПричиныВозникновенияБрака.БракВПроцессеТорговли, "БракВПроцессеТорговли");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ПричиныВозникновенияБрака.БракПоставки, "БракПоставки");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ПричиныВозникновенияБрака.БракПроизводственный, "БракПроизводственный");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ПричиныВозникновенияБрака.ВозвратОтПокупателя, "ВозвратОтПокупателя");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ПричиныВозникновенияБрака.ЧастичнаяКража, "ЧастичнаяКража");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("БойПоставки", Перечисления.RM_ПричиныВозникновенияБрака.БойПоставки);
	ЗначенияДляПолучения.Вставить("БракВПроцессеТорговли", Перечисления.RM_ПричиныВозникновенияБрака.БракВПроцессеТорговли);
	ЗначенияДляПолучения.Вставить("БракПоставки", Перечисления.RM_ПричиныВозникновенияБрака.БракПоставки);
	ЗначенияДляПолучения.Вставить("БракПроизводственный", Перечисления.RM_ПричиныВозникновенияБрака.БракПроизводственный);
	ЗначенияДляПолучения.Вставить("ВозвратОтПокупателя", Перечисления.RM_ПричиныВозникновенияБрака.ВозвратОтПокупателя);
	ЗначенияДляПолучения.Вставить("ЧастичнаяКража", Перечисления.RM_ПричиныВозникновенияБрака.ЧастичнаяКража);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_СтатусыАктаБрака.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_СтатусыАктаБрака";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_СтатусыАктаБрака;
	ПравилоКонвертации.ТипXDTO   = "RM_СтатусыАктаБрака";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыАктаБрака.ВОбработке, "ВОбработке");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыАктаБрака.Обработан, "Обработан");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыАктаБрака.ОжидаетПереводаТовара, "ОжидаетПереводаТовара");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ВОбработке", Перечисления.RM_СтатусыАктаБрака.ВОбработке);
	ЗначенияДляПолучения.Вставить("Обработан", Перечисления.RM_СтатусыАктаБрака.Обработан);
	ЗначенияДляПолучения.Вставить("ОжидаетПереводаТовара", Перечисления.RM_СтатусыАктаБрака.ОжидаетПереводаТовара);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_СтатусыИнтернетЗаказов.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_СтатусыИнтернетЗаказов";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_СтатусыИнтернетЗаказов;
	ПравилоКонвертации.ТипXDTO   = "RM_СтатусыИнтернетЗаказов";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.ГотовКВыдаче, "ГотовКВыдаче");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.Доставлен, "Доставлен");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.ДоставленЧастично, "ДоставленЧастично");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.Доставляется, "Доставляется");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.ДоукомплектоватьСобранныйЗаказ, "ДоукомплектоватьСобранныйЗаказ");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.ДоукомплектоватьСоСкладаМагазина, "ДоукомплектоватьСоСкладаМагазина");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.Закрыт, "Закрыт");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.ИстекСрокРезерва, "ИстекСрокРезерва");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.Корректировка, "Корректировка");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.НаСборке, "НаСборке");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.Отменен, "Отменен");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.ПереданВСлужбуДоставки, "ПереданВСлужбуДоставки");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.Принят, "Принят");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.Проверен, "Проверен");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.РасформироватьЗаказ, "РасформироватьЗаказ");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыИнтернетЗаказов.Уводителя, "Уводителя");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ГотовКВыдаче", Перечисления.RM_СтатусыИнтернетЗаказов.ГотовКВыдаче);
	ЗначенияДляПолучения.Вставить("Доставлен", Перечисления.RM_СтатусыИнтернетЗаказов.Доставлен);
	ЗначенияДляПолучения.Вставить("ДоставленЧастично", Перечисления.RM_СтатусыИнтернетЗаказов.ДоставленЧастично);
	ЗначенияДляПолучения.Вставить("Доставляется", Перечисления.RM_СтатусыИнтернетЗаказов.Доставляется);
	ЗначенияДляПолучения.Вставить("ДоукомплектоватьСобранныйЗаказ", Перечисления.RM_СтатусыИнтернетЗаказов.ДоукомплектоватьСобранныйЗаказ);
	ЗначенияДляПолучения.Вставить("ДоукомплектоватьСоСкладаМагазина", Перечисления.RM_СтатусыИнтернетЗаказов.ДоукомплектоватьСоСкладаМагазина);
	ЗначенияДляПолучения.Вставить("Закрыт", Перечисления.RM_СтатусыИнтернетЗаказов.Закрыт);
	ЗначенияДляПолучения.Вставить("ИстекСрокРезерва", Перечисления.RM_СтатусыИнтернетЗаказов.ИстекСрокРезерва);
	ЗначенияДляПолучения.Вставить("Корректировка", Перечисления.RM_СтатусыИнтернетЗаказов.Корректировка);
	ЗначенияДляПолучения.Вставить("НаСборке", Перечисления.RM_СтатусыИнтернетЗаказов.НаСборке);
	ЗначенияДляПолучения.Вставить("Отменен", Перечисления.RM_СтатусыИнтернетЗаказов.Отменен);
	ЗначенияДляПолучения.Вставить("ПереданВСлужбуДоставки", Перечисления.RM_СтатусыИнтернетЗаказов.ПереданВСлужбуДоставки);
	ЗначенияДляПолучения.Вставить("Принят", Перечисления.RM_СтатусыИнтернетЗаказов.Принят);
	ЗначенияДляПолучения.Вставить("Проверен", Перечисления.RM_СтатусыИнтернетЗаказов.Проверен);
	ЗначенияДляПолучения.Вставить("РасформироватьЗаказ", Перечисления.RM_СтатусыИнтернетЗаказов.РасформироватьЗаказ);
	ЗначенияДляПолучения.Вставить("Уводителя", Перечисления.RM_СтатусыИнтернетЗаказов.Уводителя);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_СтатусыОтправленийOZON.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_СтатусыОтправленийOZON";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_СтатусыОтправленийOZON;
	ПравилоКонвертации.ТипXDTO   = "RM_СтатусыОтправленийOZON";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыОтправленийOZON.Отменено, "Отменено");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыОтправленийOZON.Собрано, "Собрано");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Отменено", Перечисления.RM_СтатусыОтправленийOZON.Отменено);
	ЗначенияДляПолучения.Вставить("Собрано", Перечисления.RM_СтатусыОтправленийOZON.Собрано);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_СтатусыПриемкиВозвратовОтКС.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_СтатусыПриемкиВозвратовОтКС";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_СтатусыПриемкиВозвратовОтКС;
	ПравилоКонвертации.ТипXDTO   = "RM_СтатусыПриемкиВозвратовОтКС";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыПриемкиВозвратовОтКС.Закрыт, "Закрыт");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыПриемкиВозвратовОтКС.ОжидаетИдентификацииВозврата, "ОжидаетИдентификацииВозврата");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыПриемкиВозвратовОтКС.ОжидаетИдентификацииПересорта, "ОжидаетИдентификацииПересорта");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыПриемкиВозвратовОтКС.ОжидаетПриемкиПослеИдентификациВозврата, "ОжидаетПриемкиПослеИдентификациВозврата");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыПриемкиВозвратовОтКС.ОшибкаЗакрытияДокумента, "ОшибкаЗакрытияДокумента");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыПриемкиВозвратовОтКС.ПересортПодтвержден, "ПересортПодтвержден");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Закрыт", Перечисления.RM_СтатусыПриемкиВозвратовОтКС.Закрыт);
	ЗначенияДляПолучения.Вставить("ОжидаетИдентификацииВозврата", Перечисления.RM_СтатусыПриемкиВозвратовОтКС.ОжидаетИдентификацииВозврата);
	ЗначенияДляПолучения.Вставить("ОжидаетИдентификацииПересорта", Перечисления.RM_СтатусыПриемкиВозвратовОтКС.ОжидаетИдентификацииПересорта);
	ЗначенияДляПолучения.Вставить("ОжидаетПриемкиПослеИдентификациВозврата", Перечисления.RM_СтатусыПриемкиВозвратовОтКС.ОжидаетПриемкиПослеИдентификациВозврата);
	ЗначенияДляПолучения.Вставить("ОшибкаЗакрытияДокумента", Перечисления.RM_СтатусыПриемкиВозвратовОтКС.ОшибкаЗакрытияДокумента);
	ЗначенияДляПолучения.Вставить("ПересортПодтвержден", Перечисления.RM_СтатусыПриемкиВозвратовОтКС.ПересортПодтвержден);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_СтатусыПриказаНаПроведениеМаркиров.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_СтатусыПриказаНаПроведениеМаркиров";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_СтатусыПриказаНаПроведениеМаркировкиОстатков;
	ПравилоКонвертации.ТипXDTO   = "RM_СтатусыПриказаНаПроведениеМаркировкиОстатков";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыПриказаНаПроведениеМаркировкиОстатков.ВРаботеКонтрольКМПриОтгрузкеПриемке, "ВРаботеКонтрольКМПриОтгрузкеПриемке");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыПриказаНаПроведениеМаркировкиОстатков.МаркировкаОстатковЗавершена, "МаркировкаОстатковЗавершена");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ВРаботеКонтрольКМПриОтгрузкеПриемке", Перечисления.RM_СтатусыПриказаНаПроведениеМаркировкиОстатков.ВРаботеКонтрольКМПриОтгрузкеПриемке);
	ЗначенияДляПолучения.Вставить("МаркировкаОстатковЗавершена", Перечисления.RM_СтатусыПриказаНаПроведениеМаркировкиОстатков.МаркировкаОстатковЗавершена);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_ТипыЗаказа.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_ТипыЗаказа";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_ТипыЗаказа;
	ПравилоКонвертации.ТипXDTO   = "ТипыЗаказов";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыЗаказа.ОПТ, "ОПТ");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыЗаказа.ОРТ, "ОРТ");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыЗаказа.Смешанный, "Смешанный");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ОПТ", Перечисления.RM_ТипыЗаказа.ОПТ);
	ЗначенияДляПолучения.Вставить("ОРТ", Перечисления.RM_ТипыЗаказа.ОРТ);
	ЗначенияДляПолучения.Вставить("Смешанный", Перечисления.RM_ТипыЗаказа.Смешанный);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_ТипыМедиафайлов.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_ТипыМедиафайлов";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_ТипыМедиафайлов;
	ПравилоКонвертации.ТипXDTO   = "RM_ТипыМедиафайлов";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыМедиафайлов.Видео, "Видео");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыМедиафайлов.Фотография, "Фотография");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Видео", Перечисления.RM_ТипыМедиафайлов.Видео);
	ЗначенияДляПолучения.Вставить("Фотография", Перечисления.RM_ТипыМедиафайлов.Фотография);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_ТипыНоминаловПодарочныхСертификато.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_ТипыНоминаловПодарочныхСертификато";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_ТипыНоминаловПодарочныхСертификатов;
	ПравилоКонвертации.ТипXDTO   = "RM_ТипыНоминаловПодарочныхСертификатов";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыНоминаловПодарочныхСертификатов.Произвольный, "Произвольный");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыНоминаловПодарочныхСертификатов.Фиксированный, "Фиксированный");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Произвольный", Перечисления.RM_ТипыНоминаловПодарочныхСертификатов.Произвольный);
	ЗначенияДляПолучения.Вставить("Фиксированный", Перечисления.RM_ТипыНоминаловПодарочныхСертификатов.Фиксированный);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_RM_ТипыПодарочныхСертификатов.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_RM_ТипыПодарочныхСертификатов";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_ТипыПодарочныхСертификатов;
	ПравилоКонвертации.ТипXDTO   = "RM_ТипыПодарочныхСертификатов";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыПодарочныхСертификатов.ФизическийПодарочныйСертификат, "ФизическийПодарочныйСертификат");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыПодарочныхСертификатов.ЭлектронныйПодарочныйСертификат, "ЭлектронныйПодарочныйСертификат");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ФизическийПодарочныйСертификат", Перечисления.RM_ТипыПодарочныхСертификатов.ФизическийПодарочныйСертификат);
	ЗначенияДляПолучения.Вставить("ЭлектронныйПодарочныйСертификат", Перечисления.RM_ТипыПодарочныхСертификатов.ЭлектронныйПодарочныйСертификат);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_ВариантыОбеспечения.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_ВариантыОбеспечения";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВариантыОбеспечения;
	ПравилоКонвертации.ТипXDTO   = "ВариантыОбеспечения";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОбеспечения.ИзЗаказов, "ИзЗаказов");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОбеспечения.НеТребуется, "НеТребуется");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОбеспечения.Обособленно, "Обособленно");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОбеспечения.Отгрузить, "Отгрузить");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно, "ОтгрузитьОбособленно");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОбеспечения.СоСклада, "СоСклада");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОбеспечения.Требуется, "Требуется");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ИзЗаказов", Перечисления.ВариантыОбеспечения.ИзЗаказов);
	ЗначенияДляПолучения.Вставить("НеТребуется", Перечисления.ВариантыОбеспечения.НеТребуется);
	ЗначенияДляПолучения.Вставить("Обособленно", Перечисления.ВариантыОбеспечения.Обособленно);
	ЗначенияДляПолучения.Вставить("Отгрузить", Перечисления.ВариантыОбеспечения.Отгрузить);
	ЗначенияДляПолучения.Вставить("ОтгрузитьОбособленно", Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно);
	ЗначенияДляПолучения.Вставить("СоСклада", Перечисления.ВариантыОбеспечения.СоСклада);
	ЗначенияДляПолучения.Вставить("Требуется", Перечисления.ВариантыОбеспечения.Требуется);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_ВариантыОплатыКлиентом.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_ВариантыОплатыКлиентом";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВариантыОплатыКлиентом;
	ПравилоКонвертации.ТипXDTO   = "ВариантыОплаты";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОплатыКлиентом.АвансДоОбеспечения, "Аванс");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОплатыКлиентом.КредитПослеОтгрузки, "Кредит");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОплатыКлиентом.КредитСдвиг, "ОтсрочкаПлатежа");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОплатыКлиентом.ПредоплатаДоОтгрузки, "Предоплата");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Аванс", Перечисления.ВариантыОплатыКлиентом.АвансДоОбеспечения);
	ЗначенияДляПолучения.Вставить("Кредит", Перечисления.ВариантыОплатыКлиентом.КредитПослеОтгрузки);
	ЗначенияДляПолучения.Вставить("ОтсрочкаПлатежа", Перечисления.ВариантыОплатыКлиентом.КредитСдвиг);
	ЗначенияДляПолучения.Вставить("Предоплата", Перечисления.ВариантыОплатыКлиентом.ПредоплатаДоОтгрузки);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_ВариантыОплатыПоставщику.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_ВариантыОплатыПоставщику";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВариантыОплатыПоставщику;
	ПравилоКонвертации.ТипXDTO   = "ВариантыОплаты";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОплатыПоставщику.АвансДоПодтверждения, "Аванс");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОплатыПоставщику.КредитПослеПоступления, "Кредит");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОплатыПоставщику.КредитСдвиг, "ОтсрочкаПлатежа");
	ЗначенияДляОтправки.Вставить(Перечисления.ВариантыОплатыПоставщику.ПредоплатаДоПоступления, "Предоплата");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Аванс", Перечисления.ВариантыОплатыПоставщику.АвансДоПодтверждения);
	ЗначенияДляПолучения.Вставить("Кредит", Перечисления.ВариантыОплатыПоставщику.КредитПослеПоступления);
	ЗначенияДляПолучения.Вставить("ОтсрочкаПлатежа", Перечисления.ВариантыОплатыПоставщику.КредитСдвиг);
	ЗначенияДляПолучения.Вставить("Предоплата", Перечисления.ВариантыОплатыПоставщику.ПредоплатаДоПоступления);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_ВидыЛицензийАлкогольнойПродукции.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_ВидыЛицензийАлкогольнойПродукции";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВидыЛицензийАлкогольнойПродукции;
	ПравилоКонвертации.ТипXDTO   = "ВидыЛицензийАлкогольнойПродукции";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыЛицензийАлкогольнойПродукции.АлкогольнаяПродукция, "АлкогольнаяПродукция");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыЛицензийАлкогольнойПродукции.Пиво, "Пиво");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыЛицензийАлкогольнойПродукции.СпиртосодержащаяНеПищеваяПродукция, "СпиртосодержащаяНеПищеваяПродукция");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыЛицензийАлкогольнойПродукции.СпиртосодержащаяПищеваяПродукция, "СпиртосодержащаяПищеваяПродукция");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("АлкогольнаяПродукция", Перечисления.ВидыЛицензийАлкогольнойПродукции.АлкогольнаяПродукция);
	ЗначенияДляПолучения.Вставить("Пиво", Перечисления.ВидыЛицензийАлкогольнойПродукции.Пиво);
	ЗначенияДляПолучения.Вставить("СпиртосодержащаяНеПищеваяПродукция", Перечисления.ВидыЛицензийАлкогольнойПродукции.СпиртосодержащаяНеПищеваяПродукция);
	ЗначенияДляПолучения.Вставить("СпиртосодержащаяПищеваяПродукция", Перечисления.ВидыЛицензийАлкогольнойПродукции.СпиртосодержащаяПищеваяПродукция);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_ВидыОперацийИСМП.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_ВидыОперацийИСМП";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ВидыОперацийИСМП;
	ПравилоКонвертации.ТипXDTO   = "ВидыОперацийИСМП";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.Агрегация, "Агрегация");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.АгрегацияИзменение, "АгрегацияИзменение");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.АгрегацияИзменениеРасчетСтатуса, "АгрегацияИзменениеРасчетСтатуса");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.АгрегацияПроверкаСтатусаОбработкиДокумента, "АгрегацияПроверкаСтатусаОбработкиДокумента");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.АгрегацияСоздание, "АгрегацияСоздание");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.АгрегацияУдаление, "АгрегацияУдаление");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.АТК, "АТК");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.АТКИзменение, "АТКИзменение");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.АТКСоздание, "АТКСоздание");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.АТКУдаление, "АТКУдаление");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВводВОборот, "ВводВОборот");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВводВОборотИмпортСФТС, "ВводВОборотИмпортСФТС");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВводВОборотКонтрактноеПроизводствоЕАЭС, "ВводВОборотКонтрактноеПроизводствоЕАЭС");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков, "ВводВОборотМаркировкаОстатков");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВводВОборотПолучениеПродукцииОтФизическихЛиц, "ВводВОборотПолучениеПродукцииОтФизическихЛиц");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС, "ВводВОборотПроизводствоВнеЕАЭС");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФ, "ВводВОборотПроизводствоРФ");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговору, "ВводВОборотПроизводствоРФПоДоговору");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговоруНаСторонеЗаказчика, "ВводВОборотПроизводствоРФПоДоговоруНаСторонеЗаказчика");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВводВОборотТрансграничнаяТорговля, "ВводВОборотТрансграничнаяТорговля");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВозвратВОборот, "ВозвратВОборот");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВозвратВОборотПриДистанционномСпособеПродажи, "ВозвратВОборотПриДистанционномСпособеПродажи");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВозвратВОборотПриРозничнойРеализации, "ВозвратВОборотПриРозничнойРеализации");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборота, "ВыводИзОборота");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаБезвозмезднаяПередача, "ВыводИзОборотаБезвозмезднаяПередача");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаБрак, "ВыводИзОборотаБрак");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаВозвратФизическомуЛицу, "ВыводИзОборотаВозвратФизическомуЛицу");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаВПроцессеРеализацииПоДоговоруРассрочки, "ВыводИзОборотаВПроцессеРеализацииПоДоговоруРассрочки");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаДругиеПричины, "ВыводИзОборотаДругиеПричины");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаИспользованиеДляСобственныхНуждПредприятия, "ВыводИзОборотаИспользованиеДляСобственныхНуждПредприятия");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаИстечениеСрокаГодности, "ВыводИзОборотаИстечениеСрокаГодности");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаКонфискацияТовара, "ВыводИзОборотаКонфискацияТовара");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаКредитныйДоговор, "ВыводИзОборотаКредитныйДоговор");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаЛабораторныеОбразцы, "ВыводИзОборотаЛабораторныеОбразцы");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаЛиквидацияПредприятия, "ВыводИзОборотаЛиквидацияПредприятия");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаОтзывСРынка, "ВыводИзОборотаОтзывСРынка");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРеализацияКонфискованныхТоваров, "ВыводИзОборотаРеализацияКонфискованныхТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРеализацияПоДоговоруРассрочки, "ВыводИзОборотаРеализацияПоДоговоруРассрочки");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРекламации, "ВыводИзОборотаРекламации");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа, "ВыводИзОборотаРозничнаяПродажа");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаТестированиеПродукта, "ВыводИзОборотаТестированиеПродукта");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаУничтожениеТовара, "ВыводИзОборотаУничтожениеТовара");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаУтратаПовреждениеТовара, "ВыводИзОборотаУтратаПовреждениеТовара");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаЭкспортВСтраныЕАЭС, "ВыводИзОборотаЭкспортВСтраныЕАЭС");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ВыводИзОборотаЭкспортЗаПределыСтранЕАЭС, "ВыводИзОборотаЭкспортЗаПределыСтранЕАЭС");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ЗагрузкаВходящихДокументов, "ЗагрузкаВходящихДокументов");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ЗаказНаЭмиссиюКодовМаркировки, "ЗаказНаЭмиссиюКодовМаркировки");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ЗаказНаЭмиссиюКодовМаркировкиЗапросGTINНаОстатки, "ЗаказНаЭмиссиюКодовМаркировкиЗапросGTINНаОстатки");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ЗаказНаЭмиссиюКодовМаркировкиРасчетСтатуса, "ЗаказНаЭмиссиюКодовМаркировкиРасчетСтатуса");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ЗакрытиеПодзаказаНаЭмиссиюКодовМаркировкиСУЗ, "ЗакрытиеПодзаказаНаЭмиссиюКодовМаркировкиСУЗ");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтгрузкаАгент, "ОтгрузкаАгент");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтгрузкаАннулирование, "ОтгрузкаАннулирование");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтгрузкаАннулировать, "ОтгрузкаАннулировать");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтгрузкаБезвозмезднаяПередача, "ОтгрузкаБезвозмезднаяПередача");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтгрузкаДляСобственныхНуждПокупателя, "ОтгрузкаДляСобственныхНуждПокупателя");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтгрузкаКомиссия, "ОтгрузкаКомиссия");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтгрузкаПриобретениеГосПредприятием, "ОтгрузкаПриобретениеГосПредприятием");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтгрузкаПродажа, "ОтгрузкаПродажа");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтгрузкаТрансграничнаяТорговля, "ОтгрузкаТрансграничнаяТорговля");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтгрузкаТрансграничнаяТорговляАннулирование, "ОтгрузкаТрансграничнаяТорговляАннулирование");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтчетОбИспользованииКодовМаркировки, "ОтчетОбИспользованииКодовМаркировки");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтчетОбИспользованииПроверкаСтатусаКодовМаркировки, "ОтчетОбИспользованииПроверкаСтатусаКодовМаркировки");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтчетОбИспользованииРасчетСтатуса, "ОтчетОбИспользованииРасчетСтатуса");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ОтчетОВерификацииНанесенныхКМ, "ОтчетОВерификацииНанесенныхКМ");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.Перемаркировка, "Перемаркировка");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПовторноеПолучениеКодовМаркировкиИзСУЗ, "ПовторноеПолучениеКодовМаркировкиИзСУЗ");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПолучениеКодовМаркировкиИзСУЗ, "ПолучениеКодовМаркировкиИзСУЗ");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПолучениеРезультатаОбработкиДокумента, "ПолучениеРезультатаОбработкиДокумента");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПолучениеРезультатаОбработкиЗаказаНаЭмиссиюКодовМаркировки, "ПолучениеРезультатаОбработкиЗаказаНаЭмиссиюКодовМаркировки");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПолучениеСтатусаПулаКодовМаркировкиИзСУЗ, "ПолучениеСтатусаПулаКодовМаркировкиИзСУЗ");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.Приемка, "Приемка");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПриемкаАгент, "ПриемкаАгент");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПриемкаБезвозмезднаяПередача, "ПриемкаБезвозмезднаяПередача");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПриемкаДляСобственныхНуждПокупателя, "ПриемкаДляСобственныхНуждПокупателя");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПриемкаКомиссия, "ПриемкаКомиссия");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПриемкаОтклонен, "ПриемкаОтклонен");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПриемкаОтклонить, "ПриемкаОтклонить");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПриемкаПриобретениеГосПредприятием, "ПриемкаПриобретениеГосПредприятием");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПриемкаПродажа, "ПриемкаПродажа");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.ПриемкаТрансграничнаяТорговля, "ПриемкаТрансграничнаяТорговля");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.СписаниеВведенныхВОборотКодовМаркировки, "СписаниеВведенныхВОборотКодовМаркировки");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.СписаниеПроверкаСтатусаОбработкиДокумента, "СписаниеПроверкаСтатусаОбработкиДокумента");
	ЗначенияДляОтправки.Вставить(Перечисления.ВидыОперацийИСМП.СписаниеЭмитированныхКодовМаркировки, "СписаниеЭмитированныхКодовМаркировки");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Агрегация", Перечисления.ВидыОперацийИСМП.Агрегация);
	ЗначенияДляПолучения.Вставить("АгрегацияИзменение", Перечисления.ВидыОперацийИСМП.АгрегацияИзменение);
	ЗначенияДляПолучения.Вставить("АгрегацияИзменениеРасчетСтатуса", Перечисления.ВидыОперацийИСМП.АгрегацияИзменениеРасчетСтатуса);
	ЗначенияДляПолучения.Вставить("АгрегацияПроверкаСтатусаОбработкиДокумента", Перечисления.ВидыОперацийИСМП.АгрегацияПроверкаСтатусаОбработкиДокумента);
	ЗначенияДляПолучения.Вставить("АгрегацияСоздание", Перечисления.ВидыОперацийИСМП.АгрегацияСоздание);
	ЗначенияДляПолучения.Вставить("АгрегацияУдаление", Перечисления.ВидыОперацийИСМП.АгрегацияУдаление);
	ЗначенияДляПолучения.Вставить("АТК", Перечисления.ВидыОперацийИСМП.АТК);
	ЗначенияДляПолучения.Вставить("АТКИзменение", Перечисления.ВидыОперацийИСМП.АТКИзменение);
	ЗначенияДляПолучения.Вставить("АТКСоздание", Перечисления.ВидыОперацийИСМП.АТКСоздание);
	ЗначенияДляПолучения.Вставить("АТКУдаление", Перечисления.ВидыОперацийИСМП.АТКУдаление);
	ЗначенияДляПолучения.Вставить("ВводВОборот", Перечисления.ВидыОперацийИСМП.ВводВОборот);
	ЗначенияДляПолучения.Вставить("ВводВОборотИмпортСФТС", Перечисления.ВидыОперацийИСМП.ВводВОборотИмпортСФТС);
	ЗначенияДляПолучения.Вставить("ВводВОборотКонтрактноеПроизводствоЕАЭС", Перечисления.ВидыОперацийИСМП.ВводВОборотКонтрактноеПроизводствоЕАЭС);
	ЗначенияДляПолучения.Вставить("ВводВОборотМаркировкаОстатков", Перечисления.ВидыОперацийИСМП.ВводВОборотМаркировкаОстатков);
	ЗначенияДляПолучения.Вставить("ВводВОборотПолучениеПродукцииОтФизическихЛиц", Перечисления.ВидыОперацийИСМП.ВводВОборотПолучениеПродукцииОтФизическихЛиц);
	ЗначенияДляПолучения.Вставить("ВводВОборотПроизводствоВнеЕАЭС", Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоВнеЕАЭС);
	ЗначенияДляПолучения.Вставить("ВводВОборотПроизводствоРФ", Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФ);
	ЗначенияДляПолучения.Вставить("ВводВОборотПроизводствоРФПоДоговору", Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговору);
	ЗначенияДляПолучения.Вставить("ВводВОборотПроизводствоРФПоДоговоруНаСторонеЗаказчика", Перечисления.ВидыОперацийИСМП.ВводВОборотПроизводствоРФПоДоговоруНаСторонеЗаказчика);
	ЗначенияДляПолучения.Вставить("ВводВОборотТрансграничнаяТорговля", Перечисления.ВидыОперацийИСМП.ВводВОборотТрансграничнаяТорговля);
	ЗначенияДляПолучения.Вставить("ВозвратВОборот", Перечисления.ВидыОперацийИСМП.ВозвратВОборот);
	ЗначенияДляПолучения.Вставить("ВозвратВОборотПриДистанционномСпособеПродажи", Перечисления.ВидыОперацийИСМП.ВозвратВОборотПриДистанционномСпособеПродажи);
	ЗначенияДляПолучения.Вставить("ВозвратВОборотПриРозничнойРеализации", Перечисления.ВидыОперацийИСМП.ВозвратВОборотПриРозничнойРеализации);
	ЗначенияДляПолучения.Вставить("ВыводИзОборота", Перечисления.ВидыОперацийИСМП.ВыводИзОборота);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаБезвозмезднаяПередача", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаБезвозмезднаяПередача);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаБрак", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаБрак);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаВозвратФизическомуЛицу", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаВозвратФизическомуЛицу);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаВПроцессеРеализацииПоДоговоруРассрочки", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаВПроцессеРеализацииПоДоговоруРассрочки);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаДругиеПричины", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаДругиеПричины);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаИспользованиеДляСобственныхНуждПредприятия", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаИспользованиеДляСобственныхНуждПредприятия);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаИстечениеСрокаГодности", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаИстечениеСрокаГодности);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаКонфискацияТовара", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаКонфискацияТовара);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаКредитныйДоговор", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаКредитныйДоговор);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаЛабораторныеОбразцы", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаЛабораторныеОбразцы);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаЛиквидацияПредприятия", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаЛиквидацияПредприятия);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаОтзывСРынка", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаОтзывСРынка);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаРеализацияКонфискованныхТоваров", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРеализацияКонфискованныхТоваров);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаРеализацияПоДоговоруРассрочки", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРеализацияПоДоговоруРассрочки);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаРекламации", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРекламации);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаРозничнаяПродажа", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаРозничнаяПродажа);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаТестированиеПродукта", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаТестированиеПродукта);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаУничтожениеТовара", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаУничтожениеТовара);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаУтратаПовреждениеТовара", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаУтратаПовреждениеТовара);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаЭкспортВСтраныЕАЭС", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаЭкспортВСтраныЕАЭС);
	ЗначенияДляПолучения.Вставить("ВыводИзОборотаЭкспортЗаПределыСтранЕАЭС", Перечисления.ВидыОперацийИСМП.ВыводИзОборотаЭкспортЗаПределыСтранЕАЭС);
	ЗначенияДляПолучения.Вставить("ЗагрузкаВходящихДокументов", Перечисления.ВидыОперацийИСМП.ЗагрузкаВходящихДокументов);
	ЗначенияДляПолучения.Вставить("ЗаказНаЭмиссиюКодовМаркировки", Перечисления.ВидыОперацийИСМП.ЗаказНаЭмиссиюКодовМаркировки);
	ЗначенияДляПолучения.Вставить("ЗаказНаЭмиссиюКодовМаркировкиЗапросGTINНаОстатки", Перечисления.ВидыОперацийИСМП.ЗаказНаЭмиссиюКодовМаркировкиЗапросGTINНаОстатки);
	ЗначенияДляПолучения.Вставить("ЗаказНаЭмиссиюКодовМаркировкиРасчетСтатуса", Перечисления.ВидыОперацийИСМП.ЗаказНаЭмиссиюКодовМаркировкиРасчетСтатуса);
	ЗначенияДляПолучения.Вставить("ЗакрытиеПодзаказаНаЭмиссиюКодовМаркировкиСУЗ", Перечисления.ВидыОперацийИСМП.ЗакрытиеПодзаказаНаЭмиссиюКодовМаркировкиСУЗ);
	ЗначенияДляПолучения.Вставить("ОтгрузкаАгент", Перечисления.ВидыОперацийИСМП.ОтгрузкаАгент);
	ЗначенияДляПолучения.Вставить("ОтгрузкаАннулирование", Перечисления.ВидыОперацийИСМП.ОтгрузкаАннулирование);
	ЗначенияДляПолучения.Вставить("ОтгрузкаАннулировать", Перечисления.ВидыОперацийИСМП.ОтгрузкаАннулировать);
	ЗначенияДляПолучения.Вставить("ОтгрузкаБезвозмезднаяПередача", Перечисления.ВидыОперацийИСМП.ОтгрузкаБезвозмезднаяПередача);
	ЗначенияДляПолучения.Вставить("ОтгрузкаДляСобственныхНуждПокупателя", Перечисления.ВидыОперацийИСМП.ОтгрузкаДляСобственныхНуждПокупателя);
	ЗначенияДляПолучения.Вставить("ОтгрузкаКомиссия", Перечисления.ВидыОперацийИСМП.ОтгрузкаКомиссия);
	ЗначенияДляПолучения.Вставить("ОтгрузкаПриобретениеГосПредприятием", Перечисления.ВидыОперацийИСМП.ОтгрузкаПриобретениеГосПредприятием);
	ЗначенияДляПолучения.Вставить("ОтгрузкаПродажа", Перечисления.ВидыОперацийИСМП.ОтгрузкаПродажа);
	ЗначенияДляПолучения.Вставить("ОтгрузкаТрансграничнаяТорговля", Перечисления.ВидыОперацийИСМП.ОтгрузкаТрансграничнаяТорговля);
	ЗначенияДляПолучения.Вставить("ОтгрузкаТрансграничнаяТорговляАннулирование", Перечисления.ВидыОперацийИСМП.ОтгрузкаТрансграничнаяТорговляАннулирование);
	ЗначенияДляПолучения.Вставить("ОтчетОбИспользованииКодовМаркировки", Перечисления.ВидыОперацийИСМП.ОтчетОбИспользованииКодовМаркировки);
	ЗначенияДляПолучения.Вставить("ОтчетОбИспользованииПроверкаСтатусаКодовМаркировки", Перечисления.ВидыОперацийИСМП.ОтчетОбИспользованииПроверкаСтатусаКодовМаркировки);
	ЗначенияДляПолучения.Вставить("ОтчетОбИспользованииРасчетСтатуса", Перечисления.ВидыОперацийИСМП.ОтчетОбИспользованииРасчетСтатуса);
	ЗначенияДляПолучения.Вставить("ОтчетОВерификацииНанесенныхКМ", Перечисления.ВидыОперацийИСМП.ОтчетОВерификацииНанесенныхКМ);
	ЗначенияДляПолучения.Вставить("Перемаркировка", Перечисления.ВидыОперацийИСМП.Перемаркировка);
	ЗначенияДляПолучения.Вставить("ПовторноеПолучениеКодовМаркировкиИзСУЗ", Перечисления.ВидыОперацийИСМП.ПовторноеПолучениеКодовМаркировкиИзСУЗ);
	ЗначенияДляПолучения.Вставить("ПолучениеКодовМаркировкиИзСУЗ", Перечисления.ВидыОперацийИСМП.ПолучениеКодовМаркировкиИзСУЗ);
	ЗначенияДляПолучения.Вставить("ПолучениеРезультатаОбработкиДокумента", Перечисления.ВидыОперацийИСМП.ПолучениеРезультатаОбработкиДокумента);
	ЗначенияДляПолучения.Вставить("ПолучениеРезультатаОбработкиЗаказаНаЭмиссиюКодовМаркировки", Перечисления.ВидыОперацийИСМП.ПолучениеРезультатаОбработкиЗаказаНаЭмиссиюКодовМаркировки);
	ЗначенияДляПолучения.Вставить("ПолучениеСтатусаПулаКодовМаркировкиИзСУЗ", Перечисления.ВидыОперацийИСМП.ПолучениеСтатусаПулаКодовМаркировкиИзСУЗ);
	ЗначенияДляПолучения.Вставить("Приемка", Перечисления.ВидыОперацийИСМП.Приемка);
	ЗначенияДляПолучения.Вставить("ПриемкаАгент", Перечисления.ВидыОперацийИСМП.ПриемкаАгент);
	ЗначенияДляПолучения.Вставить("ПриемкаБезвозмезднаяПередача", Перечисления.ВидыОперацийИСМП.ПриемкаБезвозмезднаяПередача);
	ЗначенияДляПолучения.Вставить("ПриемкаДляСобственныхНуждПокупателя", Перечисления.ВидыОперацийИСМП.ПриемкаДляСобственныхНуждПокупателя);
	ЗначенияДляПолучения.Вставить("ПриемкаКомиссия", Перечисления.ВидыОперацийИСМП.ПриемкаКомиссия);
	ЗначенияДляПолучения.Вставить("ПриемкаОтклонен", Перечисления.ВидыОперацийИСМП.ПриемкаОтклонен);
	ЗначенияДляПолучения.Вставить("ПриемкаОтклонить", Перечисления.ВидыОперацийИСМП.ПриемкаОтклонить);
	ЗначенияДляПолучения.Вставить("ПриемкаПриобретениеГосПредприятием", Перечисления.ВидыОперацийИСМП.ПриемкаПриобретениеГосПредприятием);
	ЗначенияДляПолучения.Вставить("ПриемкаПродажа", Перечисления.ВидыОперацийИСМП.ПриемкаПродажа);
	ЗначенияДляПолучения.Вставить("ПриемкаТрансграничнаяТорговля", Перечисления.ВидыОперацийИСМП.ПриемкаТрансграничнаяТорговля);
	ЗначенияДляПолучения.Вставить("СписаниеВведенныхВОборотКодовМаркировки", Перечисления.ВидыОперацийИСМП.СписаниеВведенныхВОборотКодовМаркировки);
	ЗначенияДляПолучения.Вставить("СписаниеПроверкаСтатусаОбработкиДокумента", Перечисления.ВидыОперацийИСМП.СписаниеПроверкаСтатусаОбработкиДокумента);
	ЗначенияДляПолучения.Вставить("СписаниеЭмитированныхКодовМаркировки", Перечисления.ВидыОперацийИСМП.СписаниеЭмитированныхКодовМаркировки);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_ОбъектыНалогообложенияПоУСН.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_ОбъектыНалогообложенияПоУСН";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ОбъектыНалогообложенияПоУСН;
	ПравилоКонвертации.ТипXDTO   = "ОбъектыНалогообложенияПоУСН";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ОбъектыНалогообложенияПоУСН.Доходы, "Доходы");
	ЗначенияДляОтправки.Вставить(Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы, "ДоходыМинусРасходы");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Доходы", Перечисления.ОбъектыНалогообложенияПоУСН.Доходы);
	ЗначенияДляПолучения.Вставить("ДоходыМинусРасходы", Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_ПорядокОплатыПоСоглашениям.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_ПорядокОплатыПоСоглашениям";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ПорядокОплатыПоСоглашениям;
	ПравилоКонвертации.ТипXDTO   = "ПорядокОплатыПоСоглашениям";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВВалюте, "РасчетыВВалютеОплатаВВалюте");
	ЗначенияДляОтправки.Вставить(Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях, "РасчетыВВалютеОплатаВРублях");
	ЗначенияДляОтправки.Вставить(Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВВалюте, "РасчетыВРубляхОплатаВВалюте");
	ЗначенияДляОтправки.Вставить(Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях, "РасчетыВРубляхОплатаВРублях");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("РасчетыВВалютеОплатаВВалюте", Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВВалюте);
	ЗначенияДляПолучения.Вставить("РасчетыВВалютеОплатаВРублях", Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях);
	ЗначенияДляПолучения.Вставить("РасчетыВРубляхОплатаВВалюте", Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВВалюте);
	ЗначенияДляПолучения.Вставить("РасчетыВРубляхОплатаВРублях", Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_ПорядокРасчетов.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_ПорядокРасчетов";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ПорядокРасчетов;
	ПравилоКонвертации.ТипXDTO   = "ПорядокРасчетов";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов, "ПоДоговорамКонтрагентов");
	ЗначенияДляОтправки.Вставить(Перечисления.ПорядокРасчетов.ПоЗаказамНакладным, "ПоЗаказамНакладным");
	ЗначенияДляОтправки.Вставить(Перечисления.ПорядокРасчетов.ПоНакладным, "ПоНакладным");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ПоДоговорамКонтрагентов", Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов);
	ЗначенияДляПолучения.Вставить("ПоЗаказамНакладным", Перечисления.ПорядокРасчетов.ПоЗаказамНакладным);
	ЗначенияДляПолучения.Вставить("ПоНакладным", Перечисления.ПорядокРасчетов.ПоНакладным);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_СистемыНалогообложения.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_СистемыНалогообложения";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СистемыНалогообложения;
	ПравилоКонвертации.ТипXDTO   = "СистемыНалогообложения";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СистемыНалогообложения.Общая, "Общая");
	ЗначенияДляОтправки.Вставить(Перечисления.СистемыНалогообложения.Упрощенная, "УпрощеннаяДоход");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Общая", Перечисления.СистемыНалогообложения.Общая);
	ЗначенияДляПолучения.Вставить("УпрощеннаяДоход", Перечисления.СистемыНалогообложения.Упрощенная);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_СпособыРасчетаКомиссионногоВознагражд.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_СпособыРасчетаКомиссионногоВознагражд";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СпособыРасчетаКомиссионногоВознаграждения;
	ПравилоКонвертации.ТипXDTO   = "СпособыРасчетаКомиссионногоВознаграждения";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается, "НеРассчитывается");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтРазностиСуммыПродажиИСуммыКомитента, "ПроцентОтРазницыСуммПродажиИПоступления");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтСуммыПродажи, "ПроцентОтСуммыПродажи");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("НеРассчитывается", Перечисления.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается);
	ЗначенияДляПолучения.Вставить("ПроцентОтРазницыСуммПродажиИПоступления", Перечисления.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтРазностиСуммыПродажиИСуммыКомитента);
	ЗначенияДляПолучения.Вставить("ПроцентОтСуммыПродажи", Перечисления.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтСуммыПродажи);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_СтавкиНДС.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_СтавкиНДС";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтавкиНДС;
	ПравилоКонвертации.ТипXDTO   = "СтавкиНДС";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтавкиНДС.БезНДС, "БезНДС");
	ЗначенияДляОтправки.Вставить(Перечисления.СтавкиНДС.НДС0, "НДС0");
	ЗначенияДляОтправки.Вставить(Перечисления.СтавкиНДС.НДС10, "НДС10");
	ЗначенияДляОтправки.Вставить(Перечисления.СтавкиНДС.НДС10_110, "НДС10_110");
	ЗначенияДляОтправки.Вставить(Перечисления.СтавкиНДС.НДС12, "НДС12");
	ЗначенияДляОтправки.Вставить(Перечисления.СтавкиНДС.НДС18, "НДС18");
	ЗначенияДляОтправки.Вставить(Перечисления.СтавкиНДС.НДС18_118, "НДС18_118");
	ЗначенияДляОтправки.Вставить(Перечисления.СтавкиНДС.НДС20, "НДС20");
	ЗначенияДляОтправки.Вставить(Перечисления.СтавкиНДС.НДС20_120, "НДС20_120");
	ЗначенияДляОтправки.Вставить(Перечисления.СтавкиНДС.НДС5, "НДС5");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("БезНДС", Перечисления.СтавкиНДС.БезНДС);
	ЗначенияДляПолучения.Вставить("НДС0", Перечисления.СтавкиНДС.НДС0);
	ЗначенияДляПолучения.Вставить("НДС10", Перечисления.СтавкиНДС.НДС10);
	ЗначенияДляПолучения.Вставить("НДС10_110", Перечисления.СтавкиНДС.НДС10_110);
	ЗначенияДляПолучения.Вставить("НДС12", Перечисления.СтавкиНДС.НДС12);
	ЗначенияДляПолучения.Вставить("НДС18", Перечисления.СтавкиНДС.НДС18);
	ЗначенияДляПолучения.Вставить("НДС18_118", Перечисления.СтавкиНДС.НДС18_118);
	ЗначенияДляПолучения.Вставить("НДС20", Перечисления.СтавкиНДС.НДС20);
	ЗначенияДляПолучения.Вставить("НДС20_120", Перечисления.СтавкиНДС.НДС20_120);
	ЗначенияДляПолучения.Вставить("НДС5", Перечисления.СтавкиНДС.НДС5);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_СтатусыВнутреннихЗаказов_ЗаказыНаСбор.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_СтатусыВнутреннихЗаказов_ЗаказыНаСбор";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыВнутреннихЗаказов;
	ПравилоКонвертации.ТипXDTO   = "СтатусыЗаказовНаСборку";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыВнутреннихЗаказов.Закрыт, "Закрыт");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыВнутреннихЗаказов.КВыполнению, "КВыполнению");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыВнутреннихЗаказов.КОбеспечению, "КОбеспечению");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Закрыт", Перечисления.СтатусыВнутреннихЗаказов.Закрыт);
	ЗначенияДляПолучения.Вставить("КВыполнению", Перечисления.СтатусыВнутреннихЗаказов.КВыполнению);
	ЗначенияДляПолучения.Вставить("КОбеспечению", Перечисления.СтатусыВнутреннихЗаказов.КОбеспечению);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_СтатусыЗаказовКлиентовУТ.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_СтатусыЗаказовКлиентовУТ";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыЗаказовКлиентов;
	ПравилоКонвертации.ТипXDTO   = "СтатусыЗаказовПокупателей";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовКлиентов.Закрыт, "Закрыт");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовКлиентов.КОбеспечению, "КОбеспечению");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовКлиентов.КОтгрузке, "КОтгрузке");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовКлиентов.НеСогласован, "НеСогласован");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовКлиентов.Согласован, "Согласован");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Закрыт", Перечисления.СтатусыЗаказовКлиентов.Закрыт);
	ЗначенияДляПолучения.Вставить("КОбеспечению", Перечисления.СтатусыЗаказовКлиентов.КОбеспечению);
	ЗначенияДляПолучения.Вставить("КОтгрузке", Перечисления.СтатусыЗаказовКлиентов.КОтгрузке);
	ЗначенияДляПолучения.Вставить("НеСогласован", Перечисления.СтатусыЗаказовКлиентов.НеСогласован);
	ЗначенияДляПолучения.Вставить("Согласован", Перечисления.СтатусыЗаказовКлиентов.Согласован);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_СтатусыЗаказовПоставщикам.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_СтатусыЗаказовПоставщикам";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыЗаказовПоставщикам;
	ПравилоКонвертации.ТипXDTO   = "СтатусыЗаказовПоставщикам";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовПоставщикам.Закрыт, "Закрыт");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовПоставщикам.НеСогласован, "НеСогласован");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовПоставщикам.Подтвержден, "Подтвержден");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовПоставщикам.Согласован, "Согласован");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Закрыт", Перечисления.СтатусыЗаказовПоставщикам.Закрыт);
	ЗначенияДляПолучения.Вставить("НеСогласован", Перечисления.СтатусыЗаказовПоставщикам.НеСогласован);
	ЗначенияДляПолучения.Вставить("Подтвержден", Перечисления.СтатусыЗаказовПоставщикам.Подтвержден);
	ЗначенияДляПолучения.Вставить("Согласован", Перечисления.СтатусыЗаказовПоставщикам.Согласован);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_СтатусыРасходныхОрдеров.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_СтатусыРасходныхОрдеров";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыРасходныхОрдеров;
	ПравилоКонвертации.ТипXDTO   = "СтатусыРасходныхОрдеров";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыРасходныхОрдеров.ВПроцессеПроверки, "ВПроцессеПроверки");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыРасходныхОрдеров.КОтбору, "КОтбору");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыРасходныхОрдеров.КОтгрузке, "КОтгрузке");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыРасходныхОрдеров.КПроверке, "КПроверке");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыРасходныхОрдеров.Отгружен, "Отгружен");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыРасходныхОрдеров.Подготовлено, "Подготовлено");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыРасходныхОрдеров.Проверен, "Проверен");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ВПроцессеПроверки", Перечисления.СтатусыРасходныхОрдеров.ВПроцессеПроверки);
	ЗначенияДляПолучения.Вставить("КОтбору", Перечисления.СтатусыРасходныхОрдеров.КОтбору);
	ЗначенияДляПолучения.Вставить("КОтгрузке", Перечисления.СтатусыРасходныхОрдеров.КОтгрузке);
	ЗначенияДляПолучения.Вставить("КПроверке", Перечисления.СтатусыРасходныхОрдеров.КПроверке);
	ЗначенияДляПолучения.Вставить("Отгружен", Перечисления.СтатусыРасходныхОрдеров.Отгружен);
	ЗначенияДляПолучения.Вставить("Подготовлено", Перечисления.СтатусыРасходныхОрдеров.Подготовлено);
	ЗначенияДляПолучения.Вставить("Проверен", Перечисления.СтатусыРасходныхОрдеров.Проверен);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_СтатусыСборокТоваров.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_СтатусыСборокТоваров";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыСборокТоваров;
	ПравилоКонвертации.ТипXDTO   = "СтатусыСборокТоваров";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыСборокТоваров.ВРаботе, "ВРаботе");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыСборокТоваров.СобраноРазобрано, "СобраноРазобрано");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ВРаботе", Перечисления.СтатусыСборокТоваров.ВРаботе);
	ЗначенияДляПолучения.Вставить("СобраноРазобрано", Перечисления.СтатусыСборокТоваров.СобраноРазобрано);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_СтатусыСертификатовНоменклатуры.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_СтатусыСертификатовНоменклатуры";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыСертификатовНоменклатуры;
	ПравилоКонвертации.ТипXDTO   = "СтатусыСертификатовНоменклатуры";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыСертификатовНоменклатуры.Действующий, "Действующий");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыСертификатовНоменклатуры.Недействующий, "Недействующий");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Действующий", Перечисления.СтатусыСертификатовНоменклатуры.Действующий);
	ЗначенияДляПолучения.Вставить("Недействующий", Перечисления.СтатусыСертификатовНоменклатуры.Недействующий);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_СтатусыСоглашенийСПоставщиками.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_СтатусыСоглашенийСПоставщиками";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыСоглашенийСПоставщиками;
	ПравилоКонвертации.ТипXDTO   = "СтатусыСоглашенийСПоставщиками";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыСоглашенийСПоставщиками.Действует, "Действует");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыСоглашенийСПоставщиками.Закрыто, "Закрыто");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыСоглашенийСПоставщиками.НеСогласовано, "НеСогласовано");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Действует", Перечисления.СтатусыСоглашенийСПоставщиками.Действует);
	ЗначенияДляПолучения.Вставить("Закрыто", Перечисления.СтатусыСоглашенийСПоставщиками.Закрыто);
	ЗначенияДляПолучения.Вставить("НеСогласовано", Перечисления.СтатусыСоглашенийСПоставщиками.НеСогласовано);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_ТипыКарт.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_ТипыКарт";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыКарт;
	ПравилоКонвертации.ТипXDTO   = "ТипыКарт";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыКарт.Магнитная, "Магнитная");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыКарт.Смешанная, "Смешанная");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыКарт.Штриховая, "Штриховая");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Магнитная", Перечисления.ТипыКарт.Магнитная);
	ЗначенияДляПолучения.Вставить("Смешанная", Перечисления.ТипыКарт.Смешанная);
	ЗначенияДляПолучения.Вставить("Штриховая", Перечисления.ТипыКарт.Штриховая);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_ТипыНоменклатуры.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_ТипыНоменклатуры";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыНоменклатуры;
	ПравилоКонвертации.ТипXDTO   = "ТипыНоменклатуры";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНоменклатуры.МногооборотнаяТара, "МногооборотнаяТара");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНоменклатуры.Работа, "Работа");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНоменклатуры.Товар, "Товар");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыНоменклатуры.Услуга, "Услуга");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("МногооборотнаяТара", Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
	ЗначенияДляПолучения.Вставить("Работа", Перечисления.ТипыНоменклатуры.Работа);
	ЗначенияДляПолучения.Вставить("Товар", Перечисления.ТипыНоменклатуры.Товар);
	ЗначенияДляПолучения.Вставить("Услуга", Перечисления.ТипыНоменклатуры.Услуга);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_ТипыПлатежныхДокументов.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_ТипыПлатежныхДокументов";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыПлатежныхДокументов;
	ПравилоКонвертации.ТипXDTO   = "ТипыПлатежныхДокументов";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыПлатежныхДокументов.Аккредитив, "Аккредитив");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыПлатежныхДокументов.БанковскийОрдер, "БанковскийОрдер");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыПлатежныхДокументов.ИнкассовоеПоручение, "ИнкассовоеПоручение");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыПлатежныхДокументов.ПлатежноеПоручение, "ПлатежноеПоручение");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыПлатежныхДокументов.ПлатежноеТребование, "ПлатежноеТребование");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыПлатежныхДокументов.ПлатежныйОрдер, "ПлатежныйОрдер");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Аккредитив", Перечисления.ТипыПлатежныхДокументов.Аккредитив);
	ЗначенияДляПолучения.Вставить("БанковскийОрдер", Перечисления.ТипыПлатежныхДокументов.БанковскийОрдер);
	ЗначенияДляПолучения.Вставить("ИнкассовоеПоручение", Перечисления.ТипыПлатежныхДокументов.ИнкассовоеПоручение);
	ЗначенияДляПолучения.Вставить("ПлатежноеПоручение", Перечисления.ТипыПлатежныхДокументов.ПлатежноеПоручение);
	ЗначенияДляПолучения.Вставить("ПлатежноеТребование", Перечисления.ТипыПлатежныхДокументов.ПлатежноеТребование);
	ЗначенияДляПолучения.Вставить("ПлатежныйОрдер", Перечисления.ТипыПлатежныхДокументов.ПлатежныйОрдер);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// Перечисление_ЮридическоеФизическоеЛицо.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "Перечисление_ЮридическоеФизическоеЛицо";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ЮридическоеФизическоеЛицо;
	ПравилоКонвертации.ТипXDTO   = "ЮридическоеФизическоеЛицо";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо, "ФизическоеЛицо");
	ЗначенияДляОтправки.Вставить(Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо, "ЮридическоеЛицо");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ФизическоеЛицо", Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо);
	ЗначенияДляПолучения.Вставить("ЮридическоеЛицо", Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ПолФизическогоЛица.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ПолФизическогоЛица";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ПолФизическогоЛица;
	ПравилоКонвертации.ТипXDTO   = "Пол";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ПолФизическогоЛица.Женский, "Женский");
	ЗначенияДляОтправки.Вставить(Перечисления.ПолФизическогоЛица.Мужской, "Мужской");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Женский", Перечисления.ПолФизическогоЛица.Женский);
	ЗначенияДляПолучения.Вставить("Мужской", Перечисления.ПолФизическогоЛица.Мужской);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// СекцииПродаж.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "СекцииПродаж";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_Секции;
	ПравилоКонвертации.ТипXDTO   = "RM_СекцииПродаж";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_Секции.Авансы, "Авансы");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_Секции.ИнтернетМагазин, "ИнтернетМагазин");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_Секции.Основная, "Основная");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Авансы", Перечисления.RM_Секции.Авансы);
	ЗначенияДляПолучения.Вставить("ИнтернетМагазин", Перечисления.RM_Секции.ИнтернетМагазин);
	ЗначенияДляПолучения.Вставить("Основная", Перечисления.RM_Секции.Основная);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// СпособыДоставки.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "СпособыДоставки";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СпособыДоставки;
	ПравилоКонвертации.ТипXDTO   = "СпособыДоставки";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыДоставки.ДоКлиента, "ДоКлиента");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки, "КПолучателюОпределяетСлужбаДоставки");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыДоставки.НашимиСиламиСАдресаОтправителя, "НашимиСиламиСАдресаОтправителя");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыДоставки.ОтОтправителяОпределяетСлужбаДоставки, "ОтОтправителяОпределяетСлужбаДоставки");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыДоставки.ПоручениеЭкспедиторуВПункте, "ПоручениеЭкспедиторуВПункте");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыДоставки.ПоручениеЭкспедиторуНаСклад, "ПоручениеЭкспедиторуНаСклад");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыДоставки.ПоручениеЭкспедиторуСоСклада, "ПоручениеЭкспедиторуСоСклада");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыДоставки.Самовывоз, "Самовывоз");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыДоставки.СиламиПеревозчика, "СиламиПеревозчика");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыДоставки.СиламиПеревозчикаДоНашегоСклада, "СиламиПеревозчикаДоНашегоСклада");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыДоставки.СиламиПеревозчикаДоПунктаПередачи, "СиламиПеревозчикаДоПунктаПередачи");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу, "СиламиПеревозчикаПоАдресу");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыДоставки.СиламиПоставщикаДоНашегоСклада, "СиламиПоставщикаДоНашегоСклада");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ДоКлиента", Перечисления.СпособыДоставки.ДоКлиента);
	ЗначенияДляПолучения.Вставить("КПолучателюОпределяетСлужбаДоставки", Перечисления.СпособыДоставки.КПолучателюОпределяетСлужбаДоставки);
	ЗначенияДляПолучения.Вставить("НашимиСиламиСАдресаОтправителя", Перечисления.СпособыДоставки.НашимиСиламиСАдресаОтправителя);
	ЗначенияДляПолучения.Вставить("ОтОтправителяОпределяетСлужбаДоставки", Перечисления.СпособыДоставки.ОтОтправителяОпределяетСлужбаДоставки);
	ЗначенияДляПолучения.Вставить("ПоручениеЭкспедиторуВПункте", Перечисления.СпособыДоставки.ПоручениеЭкспедиторуВПункте);
	ЗначенияДляПолучения.Вставить("ПоручениеЭкспедиторуНаСклад", Перечисления.СпособыДоставки.ПоручениеЭкспедиторуНаСклад);
	ЗначенияДляПолучения.Вставить("ПоручениеЭкспедиторуСоСклада", Перечисления.СпособыДоставки.ПоручениеЭкспедиторуСоСклада);
	ЗначенияДляПолучения.Вставить("Самовывоз", Перечисления.СпособыДоставки.Самовывоз);
	ЗначенияДляПолучения.Вставить("СиламиПеревозчика", Перечисления.СпособыДоставки.СиламиПеревозчика);
	ЗначенияДляПолучения.Вставить("СиламиПеревозчикаДоНашегоСклада", Перечисления.СпособыДоставки.СиламиПеревозчикаДоНашегоСклада);
	ЗначенияДляПолучения.Вставить("СиламиПеревозчикаДоПунктаПередачи", Перечисления.СпособыДоставки.СиламиПеревозчикаДоПунктаПередачи);
	ЗначенияДляПолучения.Вставить("СиламиПеревозчикаПоАдресу", Перечисления.СпособыДоставки.СиламиПеревозчикаПоАдресу);
	ЗначенияДляПолучения.Вставить("СиламиПоставщикаДоНашегоСклада", Перечисления.СпособыДоставки.СиламиПоставщикаДоНашегоСклада);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// СпособыОтраженияРасхожденийАктПриемкиКлиента.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "СпособыОтраженияРасхожденийАктПриемкиКлиента";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СпособыОтраженияРасхожденийАктПриемкиКлиента;
	ПравилоКонвертации.ТипXDTO   = "СпособыОтраженияРасхожденийАктПриемкиКлиента";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыОтраженияРасхожденийАктПриемкиКлиента.ИсправлениеПервичныхДокументов, "ИсправлениеПервичныхДокументов");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыОтраженияРасхожденийАктПриемкиКлиента.ОформлениеКорректировкиКакИсправлениеПервичныхДокументов, "ОформлениеКорректировкиКакИсправлениеПервичныхДокументов");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыОтраженияРасхожденийАктПриемкиКлиента.ОформлениеКорректировкиПоСогласованию, "ОформлениеКорректировкиПоСогласованию");
	ЗначенияДляОтправки.Вставить(Перечисления.СпособыОтраженияРасхожденийАктПриемкиКлиента.ОформлениеКорректировокКакНовыеПервичныеДокументы, "ОформлениеКорректировокКакНовыеПервичныеДокументы");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ИсправлениеПервичныхДокументов", Перечисления.СпособыОтраженияРасхожденийАктПриемкиКлиента.ИсправлениеПервичныхДокументов);
	ЗначенияДляПолучения.Вставить("ОформлениеКорректировкиКакИсправлениеПервичныхДокументов", Перечисления.СпособыОтраженияРасхожденийАктПриемкиКлиента.ОформлениеКорректировкиКакИсправлениеПервичныхДокументов);
	ЗначенияДляПолучения.Вставить("ОформлениеКорректировкиПоСогласованию", Перечисления.СпособыОтраженияРасхожденийАктПриемкиКлиента.ОформлениеКорректировкиПоСогласованию);
	ЗначенияДляПолучения.Вставить("ОформлениеКорректировокКакНовыеПервичныеДокументы", Перечисления.СпособыОтраженияРасхожденийАктПриемкиКлиента.ОформлениеКорректировокКакНовыеПервичныеДокументы);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// СтатусыАктаОРасхождениях.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "СтатусыАктаОРасхождениях";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыАктаОРасхождениях;
	ПравилоКонвертации.ТипXDTO   = "СтатусыАктаОРасхождениях";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыАктаОРасхождениях.КВыполнению, "КВыполнению");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыАктаОРасхождениях.НеСогласовано, "НеСогласовано");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыАктаОРасхождениях.Отработано, "Отработано");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыАктаОРасхождениях.Согласовано, "Согласовано");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("КВыполнению", Перечисления.СтатусыАктаОРасхождениях.КВыполнению);
	ЗначенияДляПолучения.Вставить("НеСогласовано", Перечисления.СтатусыАктаОРасхождениях.НеСогласовано);
	ЗначенияДляПолучения.Вставить("Отработано", Перечисления.СтатусыАктаОРасхождениях.Отработано);
	ЗначенияДляПолучения.Вставить("Согласовано", Перечисления.СтатусыАктаОРасхождениях.Согласовано);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// СтатусыЗаданийНаПеревозку.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "СтатусыЗаданийНаПеревозку";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыЗаданийНаПеревозку;
	ПравилоКонвертации.ТипXDTO   = "СтатусыЗаданийНаПеревозку";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаданийНаПеревозку.Закрыто, "Закрыто");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаданийНаПеревозку.КПогрузке, "КПогрузке");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаданийНаПеревозку.Отправлено, "Отправлено");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаданийНаПеревозку.Погружено, "Погружено");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаданийНаПеревозку.Формируется, "Формируется");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Закрыто", Перечисления.СтатусыЗаданийНаПеревозку.Закрыто);
	ЗначенияДляПолучения.Вставить("КПогрузке", Перечисления.СтатусыЗаданийНаПеревозку.КПогрузке);
	ЗначенияДляПолучения.Вставить("Отправлено", Перечисления.СтатусыЗаданийНаПеревозку.Отправлено);
	ЗначенияДляПолучения.Вставить("Погружено", Перечисления.СтатусыЗаданийНаПеревозку.Погружено);
	ЗначенияДляПолучения.Вставить("Формируется", Перечисления.СтатусыЗаданийНаПеревозку.Формируется);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// СтатусыЗаказовНаПеремещение.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "СтатусыЗаказовНаПеремещение";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыВнутреннихЗаказов;
	ПравилоКонвертации.ТипXDTO   = "СтатусыЗаказовНаПеремещение";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыВнутреннихЗаказов.Закрыт, "Закрыт");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыВнутреннихЗаказов.КВыполнению, "КВыполнению");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыВнутреннихЗаказов.КОбеспечению, "КОбеспечению");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Закрыт", Перечисления.СтатусыВнутреннихЗаказов.Закрыт);
	ЗначенияДляПолучения.Вставить("КВыполнению", Перечисления.СтатусыВнутреннихЗаказов.КВыполнению);
	ЗначенияДляПолучения.Вставить("КОбеспечению", Перечисления.СтатусыВнутреннихЗаказов.КОбеспечению);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// СтатусыЗаказовПокупателей.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "СтатусыЗаказовПокупателей";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыЗаказовКлиентов;
	ПравилоКонвертации.ТипXDTO   = "СтатусыЗаказовПокупателей";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовКлиентов.Закрыт, "Закрыт");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовКлиентов.КОбеспечению, "Согласован");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовКлиентов.КОтгрузке, "Согласован");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовКлиентов.НеСогласован, "НеСогласован");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаказовКлиентов.Согласован, "Согласован");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Закрыт", Перечисления.СтатусыЗаказовКлиентов.Закрыт);
	ЗначенияДляПолучения.Вставить("Согласован", Перечисления.СтатусыЗаказовКлиентов.КОбеспечению);
	ЗначенияДляПолучения.Вставить("Согласован", Перечисления.СтатусыЗаказовКлиентов.КОтгрузке);
	ЗначенияДляПолучения.Вставить("НеСогласован", Перечисления.СтатусыЗаказовКлиентов.НеСогласован);
	ЗначенияДляПолучения.Вставить("Согласован", Перечисления.СтатусыЗаказовКлиентов.Согласован);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// СтатусыЗаявокНаРасходДС.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "СтатусыЗаявокНаРасходДС";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств;
	ПравилоКонвертации.ТипXDTO   = "СтатусыЗаявокНаРасходДС";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате, "КОплате");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована, "НеСогласована");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена, "Отклонена");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована, "Согласована");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("КОплате", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате);
	ЗначенияДляПолучения.Вставить("НеСогласована", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована);
	ЗначенияДляПолучения.Вставить("Отклонена", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена);
	ЗначенияДляПолучения.Вставить("Согласована", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// СтатусыКассовойСмены.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "СтатусыКассовойСмены";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыКассовойСмены;
	ПравилоКонвертации.ТипXDTO   = "СтатусыКассовойСмены";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыКассовойСмены.Закрыта, "Закрыта");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыКассовойСмены.Открыта, "Открыта");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Закрыта", Перечисления.СтатусыКассовойСмены.Закрыта);
	ЗначенияДляПолучения.Вставить("Открыта", Перечисления.СтатусыКассовойСмены.Открыта);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// СтатусыОшибокАктовРасхожденийПП.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "СтатусыОшибокАктовРасхожденийПП";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения;
	ПравилоКонвертации.ТипXDTO   = "СтатусыОшибокАктовРасхожденийПП";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.НеВыясненоСписание, "НеВыясненоСписание");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.НеСчитаетсяОшибкой, "НеСчитаетсяОшибкой");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.НеУстановить, "НеУстановить");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ОтправленоНеТуда, "ОтправленоНеТуда");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ОшибкаКонтроля, "ОшибкаКонтроля");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ОшибкаМагазинаАннулирована, "ОшибкаМагазинаАннулирована");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ОшибкаОтгрузки, "ОшибкаОтгрузки");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ОшибкаПроизводителя, "ОшибкаПроизводителя");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ОшибкаТК, "ОшибкаТК");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.Перепроверить, "Перепроверить");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ТехническийСбой, "ТехническийСбой");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("НеВыясненоСписание", Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.НеВыясненоСписание);
	ЗначенияДляПолучения.Вставить("НеСчитаетсяОшибкой", Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.НеСчитаетсяОшибкой);
	ЗначенияДляПолучения.Вставить("НеУстановить", Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.НеУстановить);
	ЗначенияДляПолучения.Вставить("ОтправленоНеТуда", Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ОтправленоНеТуда);
	ЗначенияДляПолучения.Вставить("ОшибкаКонтроля", Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ОшибкаКонтроля);
	ЗначенияДляПолучения.Вставить("ОшибкаМагазинаАннулирована", Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ОшибкаМагазинаАннулирована);
	ЗначенияДляПолучения.Вставить("ОшибкаОтгрузки", Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ОшибкаОтгрузки);
	ЗначенияДляПолучения.Вставить("ОшибкаПроизводителя", Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ОшибкаПроизводителя);
	ЗначенияДляПолучения.Вставить("ОшибкаТК", Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ОшибкаТК);
	ЗначенияДляПолучения.Вставить("Перепроверить", Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.Перепроверить);
	ЗначенияДляПолучения.Вставить("ТехническийСбой", Перечисления.RM_СтатусыОшибокАктовРасхожденийПослеПеремещения.ТехническийСбой);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// СтатусыПересчетовТоваров.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "СтатусыПересчетовТоваров";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыПересчетовТоваров;
	ПравилоКонвертации.ТипXDTO   = "СтатусыПересчетовТоваров";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыПересчетовТоваров.ВнесениеРезультатов, "ВнесениеРезультатов");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыПересчетовТоваров.ВРаботе, "ВРаботе");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыПересчетовТоваров.Выполнено, "Выполнено");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ВнесениеРезультатов", Перечисления.СтатусыПересчетовТоваров.ВнесениеРезультатов);
	ЗначенияДляПолучения.Вставить("ВРаботе", Перечисления.СтатусыПересчетовТоваров.ВРаботе);
	ЗначенияДляПолучения.Вставить("Выполнено", Перечисления.СтатусыПересчетовТоваров.Выполнено);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// СтатусыПересчетовТоваров.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "СтатусыПересчетовТоваров";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СтатусыПересчетовТоваров;
	ПравилоКонвертации.ТипXDTO   = "СтатусыПересчетовТоваров";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыПересчетовТоваров.ВнесениеРезультатов, "ВнесениеРезультатов");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыПересчетовТоваров.ВРаботе, "ВРаботе");
	ЗначенияДляОтправки.Вставить(Перечисления.СтатусыПересчетовТоваров.Выполнено, "Выполнено");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ВнесениеРезультатов", Перечисления.СтатусыПересчетовТоваров.ВнесениеРезультатов);
	ЗначенияДляПолучения.Вставить("ВРаботе", Перечисления.СтатусыПересчетовТоваров.ВРаботе);
	ЗначенияДляПолучения.Вставить("Выполнено", Перечисления.СтатусыПересчетовТоваров.Выполнено);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// СтатусыПриемки.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "СтатусыПриемки";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_СтатусыПриёмки;
	ПравилоКонвертации.ТипXDTO   = "СтатусыПриемки";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыПриёмки.ВРаботе, "ВРаботе");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыПриёмки.Отсканировано, "Отсканировано");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыПриёмки.Подготовлен, "Подготовлен");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_СтатусыПриёмки.Проверено, "Проверено");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ВРаботе", Перечисления.RM_СтатусыПриёмки.ВРаботе);
	ЗначенияДляПолучения.Вставить("Отсканировано", Перечисления.RM_СтатусыПриёмки.Отсканировано);
	ЗначенияДляПолучения.Вставить("Подготовлен", Перечисления.RM_СтатусыПриёмки.Подготовлен);
	ЗначенияДляПолучения.Вставить("Проверено", Перечисления.RM_СтатусыПриёмки.Проверено);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ТипыДоговоровМеждуОрганизациями.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ТипыДоговоровМеждуОрганизациями";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыДоговоровМеждуОрганизациями;
	ПравилоКонвертации.ТипXDTO   = "ВидыДоговоров";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыДоговоровМеждуОрганизациями.Комиссионный, "СКомиссионером");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыДоговоровМеждуОрганизациями.КупляПродажа, "СПокупателем");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("СКомиссионером", Перечисления.ТипыДоговоровМеждуОрганизациями.Комиссионный);
	ЗначенияДляПолучения.Вставить("СПокупателем", Перечисления.ТипыДоговоровМеждуОрганизациями.КупляПродажа);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ТипыИсполнителейЗаданийНаПеревозку.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ТипыИсполнителейЗаданийНаПеревозку";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыИсполнителейЗаданийНаПеревозку;
	ПравилоКонвертации.ТипXDTO   = "ТипыИсполнителейЗаданийНаПеревозку";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыИсполнителейЗаданийНаПеревозку.НашаТранспортнаяСлужба, "НашаТранспортнаяСлужба");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыИсполнителейЗаданийНаПеревозку.Перевозчик, "Перевозчик");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("НашаТранспортнаяСлужба", Перечисления.ТипыИсполнителейЗаданийНаПеревозку.НашаТранспортнаяСлужба);
	ЗначенияДляПолучения.Вставить("Перевозчик", Перечисления.ТипыИсполнителейЗаданийНаПеревозку.Перевозчик);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ТипыКассККМ.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ТипыКассККМ";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыКассККМ;
	ПравилоКонвертации.ТипXDTO   = "ТипыКассККМ";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыКассККМ.АвтономнаяККМ, "АвтономнаяККМ");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыКассККМ.ККМOffline, "ККМOffline");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыКассККМ.ФискальныйРегистратор, "ФискальныйРегистратор");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("АвтономнаяККМ", Перечисления.ТипыКассККМ.АвтономнаяККМ);
	ЗначенияДляПолучения.Вставить("ККМOffline", Перечисления.ТипыКассККМ.ККМOffline);
	ЗначенияДляПолучения.Вставить("ФискальныйРегистратор", Перечисления.ТипыКассККМ.ФискальныйРегистратор);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ТипыОплат.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ТипыОплат";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.RM_ТипыОплаты;
	ПравилоКонвертации.ТипXDTO   = "ТипыОплат";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыОплаты.БанковскийКредит, "БанковскийКредит");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыОплаты.БанковскийПлатеж, "БанковскийПлатеж");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыОплаты.Бонусы, "Бонусы");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыОплаты.ВРассрочку, "ВРассрочку");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыОплаты.ЗачетАванса, "ЗачетАванса");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыОплаты.Наличные, "Наличные");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыОплаты.ПлатежнаяКарта, "ПлатежнаяКарта");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыОплаты.ПлатежнаяСистема, "ПлатежнаяСистема");
	ЗначенияДляОтправки.Вставить(Перечисления.RM_ТипыОплаты.ПодарочныйСертификат, "ПодарочныйСертификат");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("БанковскийКредит", Перечисления.RM_ТипыОплаты.БанковскийКредит);
	ЗначенияДляПолучения.Вставить("БанковскийПлатеж", Перечисления.RM_ТипыОплаты.БанковскийПлатеж);
	ЗначенияДляПолучения.Вставить("Бонусы", Перечисления.RM_ТипыОплаты.Бонусы);
	ЗначенияДляПолучения.Вставить("ВРассрочку", Перечисления.RM_ТипыОплаты.ВРассрочку);
	ЗначенияДляПолучения.Вставить("ЗачетАванса", Перечисления.RM_ТипыОплаты.ЗачетАванса);
	ЗначенияДляПолучения.Вставить("Наличные", Перечисления.RM_ТипыОплаты.Наличные);
	ЗначенияДляПолучения.Вставить("ПлатежнаяКарта", Перечисления.RM_ТипыОплаты.ПлатежнаяКарта);
	ЗначенияДляПолучения.Вставить("ПлатежнаяСистема", Перечисления.RM_ТипыОплаты.ПлатежнаяСистема);
	ЗначенияДляПолучения.Вставить("ПодарочныйСертификат", Перечисления.RM_ТипыОплаты.ПодарочныйСертификат);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ТипыПолитикУказанияСерий.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ТипыПолитикУказанияСерий";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыПолитикУказанияСерий;
	ПравилоКонвертации.ТипXDTO   = "ТипыПолитикУказанияСерий";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыПолитикУказанияСерий.АвторасчетПоFEFOОстатковСерий, "АвторасчетПоFEFOОстатковСерий");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыПолитикУказанияСерий.МаркировкаПродукцииДляГИСМ, "МаркировкаПродукцииДляГИСМ");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыПолитикУказанияСерий.СправочноеУказаниеСерий, "СправочноеУказаниеСерий");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыПолитикУказанияСерий.УправлениеОстаткамиСерий, "УправлениеОстаткамиСерий");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыПолитикУказанияСерий.УправлениеПоFEFOОстаткамиСерий, "УправлениеПоFEFOОстаткамиСерий");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыПолитикУказанияСерий.УчетСебестоимостиПоСериям, "УчетСебестоимостиПоСериям");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("АвторасчетПоFEFOОстатковСерий", Перечисления.ТипыПолитикУказанияСерий.АвторасчетПоFEFOОстатковСерий);
	ЗначенияДляПолучения.Вставить("МаркировкаПродукцииДляГИСМ", Перечисления.ТипыПолитикУказанияСерий.МаркировкаПродукцииДляГИСМ);
	ЗначенияДляПолучения.Вставить("СправочноеУказаниеСерий", Перечисления.ТипыПолитикУказанияСерий.СправочноеУказаниеСерий);
	ЗначенияДляПолучения.Вставить("УправлениеОстаткамиСерий", Перечисления.ТипыПолитикУказанияСерий.УправлениеОстаткамиСерий);
	ЗначенияДляПолучения.Вставить("УправлениеПоFEFOОстаткамиСерий", Перечисления.ТипыПолитикУказанияСерий.УправлениеПоFEFOОстаткамиСерий);
	ЗначенияДляПолучения.Вставить("УчетСебестоимостиПоСериям", Перечисления.ТипыПолитикУказанияСерий.УчетСебестоимостиПоСериям);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ТипыРасхождений.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ТипыРасхождений";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыРасхождений;
	ПравилоКонвертации.ТипXDTO   = "ТипыРасхождений";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыРасхождений.Излишек, "Избыток");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыРасхождений.Недостача, "Недостача");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Избыток", Перечисления.ТипыРасхождений.Излишек);
	ЗначенияДляПолучения.Вставить("Недостача", Перечисления.ТипыРасхождений.Недостача);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ТипыРасчетовСПартнерами_ВидыРасчетовСКонтрагентами.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ТипыРасчетовСПартнерами_ВидыРасчетовСКонтрагентами";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыРасчетовСПартнерами;
	ПравилоКонвертации.ТипXDTO   = "ВидыРасчетовСКонтрагентами";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом, "СПокупателем");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыРасчетовСПартнерами.РасчетыСПоставщиком, "СПоставщиком");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("СПокупателем", Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом);
	ЗначенияДляПолучения.Вставить("СПоставщиком", Перечисления.ТипыРасчетовСПартнерами.РасчетыСПоставщиком);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ТипыСостоянийОбменаЭД.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ТипыСостоянийОбменаЭД";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СводныеСостоянияЭД;
	ПравилоКонвертации.ТипXDTO   = "ТипыСостоянийОбменаЭД";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СводныеСостоянияЭД.ВсеВыполнено, "ВсеВыполнено");
	ЗначенияДляОтправки.Вставить(Перечисления.СводныеСостоянияЭД.ДействийНеТребуется, "ДействийНеТребуется");
	ЗначенияДляОтправки.Вставить(Перечисления.СводныеСостоянияЭД.Отклонен, "Отклонен");
	ЗначенияДляОтправки.Вставить(Перечисления.СводныеСостоянияЭД.ТребуютсяДействия, "ТребуютсяДействия");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ВсеВыполнено", Перечисления.СводныеСостоянияЭД.ВсеВыполнено);
	ЗначенияДляПолучения.Вставить("ДействийНеТребуется", Перечисления.СводныеСостоянияЭД.ДействийНеТребуется);
	ЗначенияДляПолучения.Вставить("Отклонен", Перечисления.СводныеСостоянияЭД.Отклонен);
	ЗначенияДляПолучения.Вставить("ТребуютсяДействия", Перечисления.СводныеСостоянияЭД.ТребуютсяДействия);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ТипыСостоянийЭлектронногоДокумента.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ТипыСостоянийЭлектронногоДокумента";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.СостоянияВерсийЭД;
	ПравилоКонвертации.ТипXDTO   = "ТипыСостоянийЭлектронногоДокумента";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.Аннулирован, "Аннулирован");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ЗакрытПринудительно, "ЗакрытПринудительно");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ИзвещениеНаПодписи, "ИзвещениеНаПодписи");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.НаПодписи, "НаПодписи");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.НаУтверждении, "НаУтверждении");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.НеПолучен, "НеПолучен");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.НеСформирован, "НеСформирован");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ОбменЗавершен, "ОбменЗавершен");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ОбменЗавершенСИсправлением, "ОбменЗавершенСИсправлениями");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ОжидаетсяАннулирование, "ОжидаетсяАннулирование");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ОжидаетсяИзвещениеОПолучении, "ОжидаетсяИзвещениеОПолучении");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ОжидаетсяИсправление, "ОжидаетсяИсправление");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ОжидаетсяОтправка, "ОжидаетсяОтправка");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ОжидаетсяОтправкаИзвещения, "ОжидаетсяОтправкаИзвещения");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ОжидаетсяОтправкаПолучателю, "ОжидаетсяОтправкаПолучателю");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ОжидаетсяПередачаОператору, "ОжидаетсяПередачаОператору");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ОжидаетсяПодтверждение, "ОжидаетсяПодтверждение");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ОжидаетсяПодтверждениеОператора, "ОжидаетсяПодтверждениеОператора");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.Отклонен, "Отклонен");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ОшибкаПередачи, "ОшибкаПередачи");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ТребуетсяАннулировать, "ТребуетсяАннулировать");
	ЗначенияДляОтправки.Вставить(Перечисления.СостоянияВерсийЭД.ТребуетсяУточнитьДокумент, "ТребуетсяУточнитьДокумент");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Аннулирован", Перечисления.СостоянияВерсийЭД.Аннулирован);
	ЗначенияДляПолучения.Вставить("ЗакрытПринудительно", Перечисления.СостоянияВерсийЭД.ЗакрытПринудительно);
	ЗначенияДляПолучения.Вставить("ИзвещениеНаПодписи", Перечисления.СостоянияВерсийЭД.ИзвещениеНаПодписи);
	ЗначенияДляПолучения.Вставить("НаПодписи", Перечисления.СостоянияВерсийЭД.НаПодписи);
	ЗначенияДляПолучения.Вставить("НаУтверждении", Перечисления.СостоянияВерсийЭД.НаУтверждении);
	ЗначенияДляПолучения.Вставить("НеПолучен", Перечисления.СостоянияВерсийЭД.НеПолучен);
	ЗначенияДляПолучения.Вставить("НеСформирован", Перечисления.СостоянияВерсийЭД.НеСформирован);
	ЗначенияДляПолучения.Вставить("ОбменЗавершен", Перечисления.СостоянияВерсийЭД.ОбменЗавершен);
	ЗначенияДляПолучения.Вставить("ОбменЗавершенСИсправлениями", Перечисления.СостоянияВерсийЭД.ОбменЗавершенСИсправлением);
	ЗначенияДляПолучения.Вставить("ОжидаетсяАннулирование", Перечисления.СостоянияВерсийЭД.ОжидаетсяАннулирование);
	ЗначенияДляПолучения.Вставить("ОжидаетсяИзвещениеОПолучении", Перечисления.СостоянияВерсийЭД.ОжидаетсяИзвещениеОПолучении);
	ЗначенияДляПолучения.Вставить("ОжидаетсяИсправление", Перечисления.СостоянияВерсийЭД.ОжидаетсяИсправление);
	ЗначенияДляПолучения.Вставить("ОжидаетсяОтправка", Перечисления.СостоянияВерсийЭД.ОжидаетсяОтправка);
	ЗначенияДляПолучения.Вставить("ОжидаетсяОтправкаИзвещения", Перечисления.СостоянияВерсийЭД.ОжидаетсяОтправкаИзвещения);
	ЗначенияДляПолучения.Вставить("ОжидаетсяОтправкаПолучателю", Перечисления.СостоянияВерсийЭД.ОжидаетсяОтправкаПолучателю);
	ЗначенияДляПолучения.Вставить("ОжидаетсяПередачаОператору", Перечисления.СостоянияВерсийЭД.ОжидаетсяПередачаОператору);
	ЗначенияДляПолучения.Вставить("ОжидаетсяПодтверждение", Перечисления.СостоянияВерсийЭД.ОжидаетсяПодтверждение);
	ЗначенияДляПолучения.Вставить("ОжидаетсяПодтверждениеОператора", Перечисления.СостоянияВерсийЭД.ОжидаетсяПодтверждениеОператора);
	ЗначенияДляПолучения.Вставить("Отклонен", Перечисления.СостоянияВерсийЭД.Отклонен);
	ЗначенияДляПолучения.Вставить("ОшибкаПередачи", Перечисления.СостоянияВерсийЭД.ОшибкаПередачи);
	ЗначенияДляПолучения.Вставить("ТребуетсяАннулировать", Перечисления.СостоянияВерсийЭД.ТребуетсяАннулировать);
	ЗначенияДляПолучения.Вставить("ТребуетсяУточнитьДокумент", Перечисления.СостоянияВерсийЭД.ТребуетсяУточнитьДокумент);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ТипыУпаковок.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ТипыУпаковок";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыУпаковок;
	ПравилоКонвертации.ТипXDTO   = "ТипыУпаковокНоменклатуры";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыУпаковок.МаркированныйТовар, "МаркированныйТовар");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыУпаковок.МонотоварнаяУпаковка, "МонотоварнаяУпаковка");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыУпаковок.МультитоварнаяУпаковка, "МультитоварнаяУпаковка");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("МаркированныйТовар", Перечисления.ТипыУпаковок.МаркированныйТовар);
	ЗначенияДляПолучения.Вставить("МонотоварнаяУпаковка", Перечисления.ТипыУпаковок.МонотоварнаяУпаковка);
	ЗначенияДляПолучения.Вставить("МультитоварнаяУпаковка", Перечисления.ТипыУпаковок.МультитоварнаяУпаковка);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ТипыШтрихкодов.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ТипыШтрихкодов";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ТипыШтрихкодов;
	ПравилоКонвертации.ТипXDTO   = "ТипыШтрихкодов";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыШтрихкодов.Code128, "Code128");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыШтрихкодов.Code39, "Code39");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыШтрихкодов.EAN13, "EAN13");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыШтрихкодов.EAN8, "EAN8");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыШтрихкодов.GS1_128, "GS1_128");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыШтрихкодов.GS1_DataBarExpandedStacked, "GS1_DataBarExpandedStacked");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыШтрихкодов.GS1_DataMatrix, "GS1_DataMatrix");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыШтрихкодов.ITF14, "ITF14");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыШтрихкодов.PDF417, "PDF417");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыШтрихкодов.QR, "QR");
	ЗначенияДляОтправки.Вставить(Перечисления.ТипыШтрихкодов.SSCC, "SSCC");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Code128", Перечисления.ТипыШтрихкодов.Code128);
	ЗначенияДляПолучения.Вставить("Code39", Перечисления.ТипыШтрихкодов.Code39);
	ЗначенияДляПолучения.Вставить("EAN13", Перечисления.ТипыШтрихкодов.EAN13);
	ЗначенияДляПолучения.Вставить("EAN8", Перечисления.ТипыШтрихкодов.EAN8);
	ЗначенияДляПолучения.Вставить("GS1_128", Перечисления.ТипыШтрихкодов.GS1_128);
	ЗначенияДляПолучения.Вставить("GS1_DataBarExpandedStacked", Перечисления.ТипыШтрихкодов.GS1_DataBarExpandedStacked);
	ЗначенияДляПолучения.Вставить("GS1_DataMatrix", Перечисления.ТипыШтрихкодов.GS1_DataMatrix);
	ЗначенияДляПолучения.Вставить("ITF14", Перечисления.ТипыШтрихкодов.ITF14);
	ЗначенияДляПолучения.Вставить("PDF417", Перечисления.ТипыШтрихкодов.PDF417);
	ЗначенияДляПолучения.Вставить("QR", Перечисления.ТипыШтрихкодов.QR);
	ЗначенияДляПолучения.Вставить("SSCC", Перечисления.ТипыШтрихкодов.SSCC);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ФормыОплаты.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ФормыОплаты";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ФормыОплаты;
	ПравилоКонвертации.ТипXDTO   = "ФормыОплаты";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ФормыОплаты.Безналичная, "Безналичная");
	ЗначенияДляОтправки.Вставить(Перечисления.ФормыОплаты.Наличная, "Наличная");
	ЗначенияДляОтправки.Вставить(Перечисления.ФормыОплаты.ПлатежнаяКарта, "ПлатежнаяКарта");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Безналичная", Перечисления.ФормыОплаты.Безналичная);
	ЗначенияДляПолучения.Вставить("Наличная", Перечисления.ФормыОплаты.Наличная);
	ЗначенияДляПолучения.Вставить("ПлатежнаяКарта", Перечисления.ФормыОплаты.ПлатежнаяКарта);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ФормыОплатыЗаявокНаРасходДС.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ФормыОплатыЗаявокНаРасходДС";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ФормыОплаты;
	ПравилоКонвертации.ТипXDTO   = "ФормыОплатыЗаявокНаРасходДС";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ФормыОплаты.Безналичная, "Безналичная");
	ЗначенияДляОтправки.Вставить(Перечисления.ФормыОплаты.Наличная, "Наличная");
	ЗначенияДляОтправки.Вставить(Перечисления.ФормыОплаты.ПлатежнаяКарта, "ПлатежнаяКарта");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Безналичная", Перечисления.ФормыОплаты.Безналичная);
	ЗначенияДляПолучения.Вставить("Наличная", Перечисления.ФормыОплаты.Наличная);
	ЗначенияДляПолучения.Вставить("ПлатежнаяКарта", Перечисления.ФормыОплаты.ПлатежнаяКарта);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ХозяйственныеОперации.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ХозяйственныеОперации";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
	ПравилоКонвертации.ТипXDTO   = "ХозяйственныеОперации";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.АвансовыйОтчет, "АвансовыйОтчет");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.АмортизацияВнеоборотныхАктивов, "АмортизацияВнеоборотныхАктивов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.АмортизацияНМАвДругуюОрганизацию, "АмортизацияНМАвДругуюОрганизацию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.АмортизацияНМАизДругойОрганизации, "АмортизацияНМАизДругойОрганизации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.АмортизацияОС, "АмортизацияОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.АмортизацияОСвДругуюОрганизацию, "АмортизацияОСвДругуюОрганизацию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.АмортизацияОСизДругойОрганизации, "АмортизацияОСизДругойОрганизации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.АннулированиеПодарочныхСертификатов, "АннулированиеПодарочныхСертификатов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводНачальнойЗадолженностиКлиентов, "ВводНачальнойЗадолженностиКлиентов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводНачальнойЗадолженностиПоставщикам, "ВводНачальнойЗадолженностиПоставщикам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводНачальныхОстатковАвансовКлиентов, "ВводНачальныхОстатковАвансовКлиентов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводНачальныхОстатковАвансовПоставщикам, "ВводНачальныхОстатковАвансовПоставщикам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковАмортизацииНМАиРасходовНаНИОКР, "ВводОстатковАмортизацииНМАиРасходовНаНИОКР");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковАмортизацииОС, "ВводОстатковАмортизацииОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС, "ВводОстатковАрендованныхОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга, "ВводОстатковВзаиморасчетовПоДоговорамЛизинга");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы, "ВводОстатковВложенийВоВнеоборотныеАктивы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковЗатратПартийПроизводства, "ВводОстатковЗатратПартийПроизводства");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР, "ВводОстатковНМАиРасходовНаНИОКР");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств, "ВводОстатковОсновныхСредств");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС, "ВводОстатковПереданныхВАрендуОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе, "ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом, "ВводОстатковПредметовЛизингаЗаБалансом");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе, "ВводОстатковПредметовЛизингаНаБалансе");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковСтоимостиНМАиРасходовНаНИОКР, "ВводОстатковСтоимостиНМАиРасходовНаНИОКР");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВводОстатковСтоимостиОС, "ВводОстатковСтоимостиОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВзаимозачетДебиторскойЗадолженности, "ВзаимозачетДебиторскойЗадолженности");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВзаимозачетЗадолженности, "ВзаимозачетЗадолженности");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВзаимозачетКредиторскойЗадолженности, "ВзаимозачетКредиторскойЗадолженности");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВнесениеДенежныхСредствВКассуККМ, "ВнесениеДенежныхСредствВКассуККМ");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеДенежныхСредств, "ВнутреннееПоступлениеДенежныхСредств");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеРабот, "ВнутреннееПоступлениеРабот");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеРасходов, "ВнутреннееПоступлениеРасходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеТоваров, "ВнутреннееПоступлениеТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВнутреннееПотреблениеТоваров, "ВнутреннееПотреблениеТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств, "ВнутренняяПередачаДенежныхСредств");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратДавальцу, "ВозвратДавальцу");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику, "ВозвратДенежныхДокументовПоставщику");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию, "ВозвратДенежныхСредствВДругуюОрганизацию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации, "ВозвратДенежныхСредствОтДругойОрганизации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника, "ВозвратДенежныхСредствОтПодотчетника");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика, "ВозвратДенежныхСредствОтПоставщика");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратДеньВДень, "ВозвратДеньВДень");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратИзПроизводства, "ВозвратИзПроизводства");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратИзЭксплуатации, "ВозвратИзЭксплуатации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой, "ВозвратМатериаловИзКладовой");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства, "ВозвратМатериаловИзПроизводства");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратНедопоставленногоТовара, "ВозвратНедопоставленногоТовара");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту, "ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратНеперечисленныхДС, "ВозвратНеперечисленныхДС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту, "ВозвратОплатыКлиенту");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиентуНаПлатежнуюКарту, "ВозвратОплатыКлиентуНаПлатежнуюКарту");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту, "ВозвратОплатыНаПлатежнуюКарту");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратОСотАрендатора, "ВозвратОСотАрендатора");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера, "ВозвратОтКомиссионера");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика, "ВозвратОтПереработчика");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя, "ВозвратОтРозничногоПокупателя");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратОтХранителя, "ВозвратОтХранителя");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратПодарочныхСертификатов, "ВозвратПодарочныхСертификатов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями, "ВозвратПоКомиссииМеждуОрганизациями");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов, "ВозвратТарыОтКлиентаПрошлыхПериодов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту, "ВозвратТоваровКомитенту");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями, "ВозвратТоваровМеждуОрганизациями");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента, "ВозвратТоваровОтКлиента");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов, "ВозвратТоваровОтКлиентаПрошлыхПериодов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику, "ВозвратТоваровПоставщику");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВосстановлениеАвансаКлиента, "ВосстановлениеАвансаКлиента");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВосстановлениеНДС, "ВосстановлениеНДС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВосстановлениеНДССВыданногоАванса, "ВосстановлениеНДССВыданногоАванса");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВосстановлениеРезервовПоСомнительнымДолгам, "ВосстановлениеРезервовПоСомнительнымДолгам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыбытиеАрендованныхОС, "ВыбытиеАрендованныхОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику, "ВыдачаДенежныхДокументовПодотчетнику");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу, "ВыдачаДенежныхСредствВДругуюКассу");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ, "ВыдачаДенежныхСредствВКассуККМ");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику, "ВыдачаДенежныхСредствПодотчетнику");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику, "ВыдачаЗаймаСотруднику");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыдачаЗаймов, "ВыдачаЗаймов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыделениеАмортизацииОСПриРазукомплектации, "ВыделениеАмортизацииОСПриРазукомплектации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыделениеСтоимостиОСПриРазукомплектации, "ВыделениеСтоимостиОСПриРазукомплектации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыемкаДенежныхСредствИзКассыККМ, "ВыемкаДенежныхСредствИзКассыККМ");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыкупВозвратнойТарыКлиентом, "ВыкупВозвратнойТарыКлиентом");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров, "ВыкупПринятыхНаХранениеТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыкупТоваровПереданныхВПроизводство, "ВыкупТоваровПереданныхВПроизводство");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыкупТоваровПереданныхНаХранение, "ВыкупТоваровПереданныхНаХранение");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыкупТоваровХранителем, "ВыкупТоваровХранителем");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты, "ВыплатаЗарплаты");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета, "ВыплатаЗарплатыНаЛицевыеСчета");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту, "ВыплатаЗарплатыПоЗарплатномуПроекту");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаботнику, "ВыплатаЗарплатыРаботнику");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком, "ВыплатаЗарплатыРаздатчиком");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу, "ВыплатаЗарплатыЧерезКассу");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыпускПродукции, "ВыпускПродукции");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыпускПродукцииВПодразделение, "ВыпускПродукцииВПодразделение");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыпускПродукцииНаСклад, "ВыпускПродукцииНаСклад");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость, "ВыпускПродукцииФиксированнаяСтоимость");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВыработкаНМА, "ВыработкаНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВычетНДСНалоговымАгентом, "ВычетНДСНалоговымАгентом");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВычетНДССВыданногоАванса, "ВычетНДССВыданногоАванса");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВычетНДССПолученногоАванса, "ВычетНДССПолученногоАванса");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ДвижениеАктивовПассивовЗаСчетАктивовПассивов, "ДвижениеАктивовПассивовЗаСчетАктивовПассивов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ДвижениеДоходовЗаСчетАктивовПассивов, "ДвижениеДоходовЗаСчетАктивовПассивов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ДвижениеДоходовЗаСчетРасходов, "ДвижениеДоходовЗаСчетРасходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ДвижениеРасходовЗаСчетАктивовПассивов, "ДвижениеРасходовЗаСчетАктивовПассивов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ДвижениеРасходовЗаСчетДоходов, "ДвижениеРасходовЗаСчетДоходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ДепонированиеЗарплаты, "ДепонированиеЗарплаты");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ДополнительныеРасходыБезПартии, "ДополнительныеРасходыБезПартии");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ДополнительныеРасходыСПартией, "ДополнительныеРасходыСПартией");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ДоходыОтПереоценкиТоваров, "ДоходыОтПереоценкиТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ДоходыПоОтчетуКомиссионераОСписании, "ДоходыПоОтчетуКомиссионераОСписании");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакрытиеМесяца, "ЗакрытиеМесяца");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС, "ЗакупкаВСтранахЕАЭС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка, "ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути, "ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути, "ЗакупкаВСтранахЕАЭСТоварыВПути");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки, "ЗакупкаВСтранахЕАЭСФактуровкаПоставки");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту, "ЗакупкаПоИмпорту");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути, "ЗакупкаПоИмпортуПоступлениеИзТоваровВПути");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути, "ЗакупкаПоИмпортуТоварыВПути");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаУДругойОрганизации, "ЗакупкаУДругойОрганизации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика, "ЗакупкаУПоставщика");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка, "ЗакупкаУПоставщикаНеотфактурованнаяПоставка");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути, "ЗакупкаУПоставщикаПоступлениеИзТоваровВПути");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет, "ЗакупкаУПоставщикаРеглУчет");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути, "ЗакупкаУПоставщикаТоварыВПути");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки, "ЗакупкаУПоставщикаФактуровкаПоставки");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо, "ЗакупкаЧерезПодотчетноеЛицо");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗачетАвансаКлиента, "ЗачетАвансаКлиента");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗачетАвансаПоставщику, "ЗачетАвансаПоставщику");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗачетВознагражденияАвансомКомиссионера, "ЗачетВознагражденияАвансомКомиссионера");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗачетВознагражденияАвансомКомитенту, "ЗачетВознагражденияАвансомКомитенту");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗачетВознагражденияОплатойКомиссионера, "ЗачетВознагражденияОплатойКомиссионера");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ЗачетВознагражденияОплатойКомитенту, "ЗачетВознагражденияОплатойКомитенту");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИзменениеПараметровАмортизацииНМА, "ИзменениеПараметровАмортизацииНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС, "ИзменениеПараметровАмортизацииОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИзменениеПараметровНМА, "ИзменениеПараметровНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИзменениеПараметровОС, "ИзменениеПараметровОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИзменениеПараметровСтоимостиНМА, "ИзменениеПараметровСтоимостиНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС, "ИзменениеПараметровСтоимостиОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИзменениеСостоянияОС, "ИзменениеСостоянияОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИзменениеСпособаОтраженияИмущественныхНалогов, "ИзменениеСпособаОтраженияИмущественныхНалогов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИнвентаризационнаяОпись, "ИнвентаризационнаяОпись");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИнвентаризацияВложенийВОС, "ИнвентаризацияВложенийВОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИнвентаризацияКомиссионера, "ИнвентаризацияКомиссионера");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИнвентаризацияНезавершенногоСтроительства, "ИнвентаризацияНезавершенногоСтроительства");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИнвентаризацияНМА, "ИнвентаризацияНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИнвентаризацияОС, "ИнвентаризацияОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк, "ИнкассацияДенежныхСредствВБанк");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствИзБанка, "ИнкассацияДенежныхСредствИзБанка");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИсправлениеОшибок, "ИсправлениеОшибок");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ИсправлениеПрочегоНачисленияНДС, "ИсправлениеПрочегоНачисленияНДС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КомиссияПоЭквайрингу, "КомиссияПоЭквайрингу");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КонвертацияВалюты, "КонвертацияВалюты");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КонвертацияВалютыПодотчетнымЛицом, "КонвертацияВалютыПодотчетнымЛицом");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КорректировкаЗадолженности, "КорректировкаЗадолженности");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КорректировкаОбособленногоУчета, "КорректировкаОбособленногоУчета");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон, "КорректировкаПоСогласованиюСторон");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КорректировкаПриобретенияПрошлогоПериода, "КорректировкаПриобретенияПрошлогоПериода");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КорректировкаПриобретенияСоСписаниемНаРасходы, "КорректировкаПриобретенияСоСписаниемНаРасходы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КорректировкаПриобретенияСОтражениемНаПрочихДоходах, "КорректировкаПриобретенияСОтражениемНаПрочихДоходах");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КорректировкаРеализацииСоСписаниемНаРасходы, "КорректировкаРеализацииСоСписаниемНаРасходы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КорректировкаРеализацииСОтражениемНаПрочихДоходах, "КорректировкаРеализацииСОтражениемНаПрочихДоходах");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДепозитыПрибыль, "КурсовыеРазницыДепозитыПрибыль");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДепозитыУбыток, "КурсовыеРазницыДепозитыУбыток");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСПрибыль, "КурсовыеРазницыДСПрибыль");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСУбыток, "КурсовыеРазницыДСУбыток");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыЗаймыВыданныеПрибыль, "КурсовыеРазницыЗаймыВыданныеПрибыль");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыЗаймыВыданныеУбыток, "КурсовыеРазницыЗаймыВыданныеУбыток");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыКлиентыПрибыль, "КурсовыеРазницыКлиентыПрибыль");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыКлиентыУбыток, "КурсовыеРазницыКлиентыУбыток");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыКредитыИЗаймыПрибыль, "КурсовыеРазницыКредитыИЗаймыПрибыль");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыКредитыИЗаймыУбыток, "КурсовыеРазницыКредитыИЗаймыУбыток");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыЛизингПрибыль, "КурсовыеРазницыЛизингПрибыль");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыЛизингУбыток, "КурсовыеРазницыЛизингУбыток");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыПоставщикиПрибыль, "КурсовыеРазницыПоставщикиПрибыль");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыПоставщикиУбыток, "КурсовыеРазницыПоставщикиУбыток");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыРезервыПоДолгамПрибыль, "КурсовыеРазницыРезервыПоДолгамПрибыль");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыРезервыПоДолгамУбыток, "КурсовыеРазницыРезервыПоДолгамУбыток");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.Модернизация, "Модернизация");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.МодернизацияОС, "МодернизацияОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НаработкаОбъектовЭксплуатации, "НаработкаОбъектовЭксплуатации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НаработкаТМЦВЭксплуатации, "НаработкаТМЦВЭксплуатации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачислениеВознагражденияЗаСчетРезервов, "НачислениеВознагражденияЗаСчетРезервов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачислениеЗаработнойПлаты, "НачислениеЗаработнойПлаты");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачислениеИмущественныхНалогов, "НачислениеИмущественныхНалогов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачислениеНалогаНаПрибыль, "НачислениеНалогаНаПрибыль");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачислениеНДСНалоговымАгентом, "НачислениеНДСНалоговымАгентом");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути, "НачислениеНДСпоОтгрузкеТоваровВПути");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачислениеНДССПолученногоАванса, "НачислениеНДССПолученногоАванса");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачислениеПоЛизинговомуДоговору, "НачислениеПоЛизинговомуДоговору");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачислениеРезервовПоВознаграждениям, "НачислениеРезервовПоВознаграждениям");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачислениеРезервовПоСомнительнымДолгам, "НачислениеРезервовПоСомнительнымДолгам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачислениеРезервовПоСтраховымВзносам, "НачислениеРезервовПоСтраховымВзносам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачислениеРезервовПредстоящихРасходов, "НачислениеРезервовПредстоящихРасходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачислениеТорговогоСбора, "НачислениеТорговогоСбора");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачисленияПоДепозитам, "НачисленияПоДепозитам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачисленияПоЗаймамВыданным, "НачисленияПоЗаймамВыданным");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.НачисленияПоКредитам, "НачисленияПоКредитам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОказаниеАгентскихУслуг, "ОказаниеАгентскихУслуг");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию, "ОплатаДенежныхСредствВДругуюОрганизацию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю, "ОплатаЛизингодателю");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОплатаПодарочнымСертификатом, "ОплатаПодарочнымСертификатом");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОплатаПоКредитам, "ОплатаПоКредитам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОплатаПоставщику, "ОплатаПоставщику");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОплатаПоставщикуПодотчетнымЛицом, "ОплатаПоставщикуПодотчетнымЛицом");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОплатаПроцентовПоКредитам, "ОплатаПроцентовПоКредитам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОприходованиеЗаСчетДоходов, "ОприходованиеЗаСчетДоходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОприходованиеЗаСчетРасходов, "ОприходованиеЗаСчетРасходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОприходованиеПоВозврату, "ОприходованиеПоВозврату");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОприходованиеТоваров, "ОприходованиеТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтгрузкаБезПереходаПраваСобственности, "ОтгрузкаБезПереходаПраваСобственности");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтгрузкаПринятыхСПравомПродажиТоваровСХранения, "ОтгрузкаПринятыхСПравомПродажиТоваровСХранения");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтменаРегистрацииЗемельныхУчастков, "ОтменаРегистрацииЗемельныхУчастков");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтменаРегистрацииТранспортныхСредств, "ОтменаРегистрацииТранспортныхСредств");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеЗадолженностиПередКомитентом, "ОтражениеЗадолженностиПередКомитентом");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеЗаработнойПлаты, "ОтражениеЗаработнойПлаты");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеИзлишкаПриИнвентаризацииДенежныхСредств, "ОтражениеИзлишкаПриИнвентаризацииДенежныхСредств");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеИзлишкаПриИнкассацииДенежныхСредств, "ОтражениеИзлишкаПриИнкассацииДенежныхСредств");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеИзлишковНаДоходыПриПоступленииТоваров, "ОтражениеИзлишковНаДоходыПриПоступленииТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеНалоговВзносовСЗаработнойПлаты, "ОтражениеНалоговВзносовСЗаработнойПлаты");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеНалоговВзносовСоСдельнойЗаработнойПлаты, "ОтражениеНалоговВзносовСоСдельнойЗаработнойПлаты");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеНДФЛ, "ОтражениеНДФЛ");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеНедостачЗаСчетПоставщикаПриПоступленииТоваров, "ОтражениеНедостачЗаСчетПоставщикаПриПоступленииТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеНедостачЗаСчетСтороннейКомпанииПриПоступленииТоваров, "ОтражениеНедостачЗаСчетСтороннейКомпанииПриПоступленииТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеНедостачиПриИнвентаризацииДенежныхСредств, "ОтражениеНедостачиПриИнвентаризацииДенежныхСредств");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеНедостачиПриИнкассацииДенежныхСредств, "ОтражениеНедостачиПриИнкассацииДенежныхСредств");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеНедостачНаРасходыПриПоступленииТоваров, "ОтражениеНедостачНаРасходыПриПоступленииТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеПрочихАктивовПассивов, "ОтражениеПрочихАктивовПассивов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеРасходовЗаСчетПрочихАктивовПассивов, "ОтражениеРасходовЗаСчетПрочихАктивовПассивов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтражениеСдельнойЗаработнойПлаты, "ОтражениеСдельнойЗаработнойПлаты");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтчетБанкаПоОперациямЭквайринга, "ОтчетБанкаПоОперациямЭквайринга");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтчетДавальцу, "ОтчетДавальцу");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтчетКомиссионера, "ОтчетКомиссионера");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтчетКомиссионераКомиссия, "ОтчетКомиссионераКомиссия");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтчетКомиссионераОСписании, "ОтчетКомиссионераОСписании");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтчетКомитенту, "ОтчетКомитенту");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтчетКомитентуОСписании, "ОтчетКомитентуОСписании");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями, "ОтчетПоКомиссииМеждуОрганизациями");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании, "ОтчетПоКомиссииМеждуОрганизациямиОСписании");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОформлениеГТДБрокером, "ОформлениеГТДБрокером");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОформлениеГТДСамостоятельно, "ОформлениеГТДСамостоятельно");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ОформлениеТаможеннойДекларацииЭкспорт, "ОформлениеТаможеннойДекларацииЭкспорт");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПереводОсновныхСредствИнвестиционногоИмущества, "ПереводОсновныхСредствИнвестиционногоИмущества");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаВПроизводство, "ПередачаВПроизводство");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаВСоставНМА, "ПередачаВСоставНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаВСоставОС, "ПередачаВСоставОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию, "ПередачаВЭксплуатацию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ, "ПередачаВЭксплуатациюБУНУ");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаДавальцу, "ПередачаДавальцу");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую, "ПередачаМатериаловВКладовую");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство, "ПередачаМатериаловВПроизводство");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию, "ПередачаНаКомиссию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию, "ПередачаНаКомиссиюВДругуюОрганизацию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаНаПрочиеЦели, "ПередачаНаПрочиеЦели");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи, "ПередачаНаХранениеСПравомПродажи");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаОСАрендатору, "ПередачаОСАрендатору");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаПереработчику, "ПередачаПереработчику");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой, "ПередачаПродукцииИзКладовой");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства, "ПередачаПродукцииИзПроизводства");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами, "ПередачаПрочихРасходовМеждуФилиалами");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеАмортизацииНМАвДругуюОрганизацию, "ПеремещениеАмортизацииНМАвДругуюОрганизацию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеАмортизацииНМАизДругойОрганизации, "ПеремещениеАмортизацииНМАизДругойОрганизации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеАмортизацииОСвДругуюОрганизацию, "ПеремещениеАмортизацииОСвДругуюОрганизацию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеАмортизацииОСизДругойОрганизации, "ПеремещениеАмортизацииОСизДругойОрганизации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеВЭксплуатации, "ПеремещениеВЭксплуатации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеДенежныхДокументов, "ПеремещениеДенежныхДокументов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеНМА, "ПеремещениеНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеНМАвПодразделениеВыделенноеНаБаланс, "ПеремещениеНМАвПодразделениеВыделенноеНаБаланс");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеОС, "ПеремещениеОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс, "ПеремещениеОСвПодразделениеВыделенноеНаБаланс");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеОСпоИнвентаризации, "ПеремещениеОСпоИнвентаризации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатов, "ПеремещениеПолуфабрикатов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами, "ПеремещениеПолуфабрикатовМеждуФилиалами");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеСтоимостиНМАвДругуюОрганизацию, "ПеремещениеСтоимостиНМАвДругуюОрганизацию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеСтоимостиНМАизДругойОрганизации, "ПеремещениеСтоимостиНМАизДругойОрганизации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеСтоимостиОСвДругуюОрганизацию, "ПеремещениеСтоимостиОСвДругуюОрганизацию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеСтоимостиОСизДругойОрганизации, "ПеремещениеСтоимостиОСизДругойОрганизации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеТоваров, "ПеремещениеТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами, "ПеремещениеТоваровМеждуФилиалами");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПереносАванса, "ПереносАванса");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПереносПретензииНаАвансы, "ПереносПретензииНаАвансы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПереносПретензииНаРасчеты, "ПереносПретензииНаРасчеты");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПереоценкаДенежныхСредств, "ПереоценкаДенежныхСредств");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПереоценкаНМА, "ПереоценкаНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПереоценкаОС, "ПереоценкаОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПереоценкаРасчетовСКлиентами, "ПереоценкаРасчетовСКлиентами");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПереоценкаРасчетовСПоставщиками, "ПереоценкаРасчетовСПоставщиками");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПереоценкаРезервовПоСомнительнымДолгам, "ПереоценкаРезервовПоСомнительнымДолгам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПереоценкаФинансовыхИнструментов, "ПереоценкаФинансовыхИнструментов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПересортицаТоваров, "ПересортицаТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой, "ПересортицаТоваровСПереоценкой");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет, "ПеречислениеВБюджет");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет, "ПеречислениеДенежныхСредствНаДругойСчет");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты, "ПеречислениеНаДепозиты");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПеречислениеТаможне, "ПеречислениеТаможне");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПланированиеПоЗаказуКлиента, "ПланированиеПоЗаказуКлиента");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПланированиеПоЗаказуПоставщику, "ПланированиеПоЗаказуПоставщику");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПланированиеПоЗаявке, "ПланированиеПоЗаявке");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПланированиеПоСчету, "ПланированиеПоСчету");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПогашениеЗадолженностиКлиента, "ПогашениеЗадолженностиКлиента");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПогашениеЗадолженностиПоставщику, "ПогашениеЗадолженностиПоставщику");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПогашениеЗаймаСотрудником, "ПогашениеЗаймаСотрудником");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПодготовкаКПередачеНМА, "ПодготовкаКПередачеНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПодготовкаКПередачеОС, "ПодготовкаКПередачеОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПокупкаПолученнойВозвратнойТары, "ПокупкаПолученнойВозвратнойТары");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПорчаТоваров, "ПорчаТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой, "ПорчаТоваровСПереоценкой");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеАрендованныхОС, "ПоступлениеАрендованныхОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПодотчетника, "ПоступлениеДенежныхДокументовОтПодотчетника");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПоставщика, "ПоступлениеДенежныхДокументовОтПоставщика");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка, "ПоступлениеДенежныхСредствИзБанка");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы, "ПоступлениеДенежныхСредствИзДругойКассы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации, "ПоступлениеДенежныхСредствИзДругойОрганизации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыККМ, "ПоступлениеДенежныхСредствИзКассыККМ");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет, "ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствОтКонвертацииВалюты, "ПоступлениеДенежныхСредствОтКонвертацииВалюты");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам, "ПоступлениеДенежныхСредствПоДепозитам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным, "ПоступлениеДенежныхСредствПоЗаймамВыданным");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам, "ПоступлениеДенежныхСредствПоКредитам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета, "ПоступлениеДенежныхСредствСДругогоСчета");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеЗатрат, "ПоступлениеЗатрат");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеИзПроизводства, "ПоступлениеИзПроизводства");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеНМА, "ПоступлениеНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеОбъектовСтроительства, "ПоступлениеОбъектовСтроительства");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента, "ПоступлениеОплатыОтКлиента");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиентаПоПлатежнойКарте, "ПоступлениеОплатыОтКлиентаПоПлатежнойКарте");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте, "ПоступлениеОплатыПоПлатежнойКарте");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеОС, "ПоступлениеОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеОтДавальца, "ПоступлениеОтДавальца");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчика, "ПоступлениеОтПереработчика");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчикаФиксированнаяСтоимость, "ПоступлениеОтПереработчикаФиксированнаяСтоимость");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеПредметовЛизинга, "ПоступлениеПредметовЛизинга");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеПроцентовПоЗаймамВыданным, "ПоступлениеПроцентовПоЗаймамВыданным");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеПрочихАктивов, "ПоступлениеПрочихАктивов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеПрочихУслуг, "ПоступлениеПрочихУслуг");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеУслуг, "ПоступлениеУслуг");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеУслугДляПроизводства, "ПоступлениеУслугДляПроизводства");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеУслугРеглУчет, "ПоступлениеУслугРеглУчет");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПриемНаКомиссию, "ПриемНаКомиссию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи, "ПриемНаХранениеСПравомПродажи");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПриемПередачаРаботМеждуПодразделениями, "ПриемПередачаРаботМеждуПодразделениями");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами, "ПриемПередачаРаботМеждуФилиалами");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПризнаниеВНУЛизинговыхПлатежей, "ПризнаниеВНУЛизинговыхПлатежей");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПринятиеКУчетуНМА, "ПринятиеКУчетуНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации, "ПринятиеКУчетуНМАпоИнвентаризации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОС, "ПринятиеКУчетуОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга, "ПринятиеКУчетуОСПоДоговоруЛизинга");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации, "ПринятиеКУчетуОСпоИнвентаризации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПринятиеКУчетуСамортизированногоОС, "ПринятиеКУчетуСамортизированногоОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПринятиеНДСкВычету, "ПринятиеНДСкВычету");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПриобретениеУслугПоЛизингу, "ПриобретениеУслугПоЛизингу");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПрисоединениеРезервовПоСомнительнымДолгамКДоходам, "ПрисоединениеРезервовПоСомнительнымДолгамКДоходам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПрисоединениеРезервовПоСомнительнымДолгамКРасходам, "ПрисоединениеРезервовПоСомнительнымДолгамКРасходам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья, "ПроизводствоИзДавальческогоСырья");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика, "ПроизводствоУПереработчика");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств, "ПрочаяВыдачаДенежныхСредств");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПрочееНачислениеНДС, "ПрочееНачислениеНДС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств, "ПрочееПоступлениеДенежныхСредств");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПрочиеДоходы, "ПрочиеДоходы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПрочиеДоходыАктивыПассивы, "ПрочиеДоходыАктивыПассивы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПрочиеРасходы, "ПрочиеРасходы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПрочиеРасходыАктивыПассивы, "ПрочиеРасходыАктивыПассивы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПрочиеРасходыПодотчетногоЛица, "ПрочиеРасходыПодотчетногоЛица");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РазборкаТоваров, "РазборкаТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РазукомплектацияОС, "РазукомплектацияОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РаспределениеДоходовПоНаправлениямДеятельности, "РаспределениеДоходовПоНаправлениямДеятельности");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РаспределениеНДС, "РаспределениеНДС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РаспределениеНормируемыхРасходовПоНУ, "РаспределениеНормируемыхРасходовПоНУ");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РаспределениеРасходовНаПартииПроизводства, "РаспределениеРасходовНаПартииПроизводства");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимость, "РаспределениеРасходовНаСебестоимость");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РаспределениеРасходовПоНаправлениямДеятельности, "РаспределениеРасходовПоНаправлениямДеятельности");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РаспределениеРБП, "РаспределениеРБП");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РасходыНаТаможенныеСборыШтрафы, "РасходыНаТаможенныеСборыШтрафы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РасходыОтПереоценкиТоваров, "РасходыОтПереоценкиТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РасходыОтСписанияАктиваСОтложеннымПереходомПрав, "РасходыОтСписанияАктиваСОтложеннымПереходомПрав");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности, "РеализацияБезПереходаПраваСобственности");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов, "РеализацияВнеоборотныхАктивов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияВРозницу, "РеализацияВРозницу");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияКлиенту, "РеализацияКлиенту");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет, "РеализацияКлиентуРеглУчет");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияКомиссионногоТовара, "РеализацияКомиссионногоТовара");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияНМА, "РеализацияНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияОС, "РеализацияОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав, "РеализацияОСсОтложеннымПереходомПрав");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияПереданнойВозвратнойТары, "РеализацияПереданнойВозвратнойТары");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияПерепоставленногоТовара, "РеализацияПерепоставленногоТовара");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияПодарочныхСертификатов, "РеализацияПодарочныхСертификатов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияПрочихАктивов, "РеализацияПрочихАктивов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияПрочихУслуг, "РеализацияПрочихУслуг");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию, "РеализацияТоваровВДругуюОрганизацию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РегистрацияЗемельныхУчастков, "РегистрацияЗемельныхУчастков");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество, "РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РегистрацияРасходовУУ, "РегистрацияРасходовУУ");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РегистрацияСдельныхРабот, "РегистрацияСдельныхРабот");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РегистрацияТранспортныхСредств, "РегистрацияТранспортныхСредств");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РезервированиеАвансаКлиента, "РезервированиеАвансаКлиента");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеклассификацияДоходов, "РеклассификацияДоходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РеклассификацияРасходов, "РеклассификацияРасходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.Ремонт, "Ремонт");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СборкаТоваров, "СборкаТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СдачаДенежныхСредствВБанк, "СдачаДенежныхСредствВБанк");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СебестоимостьРеализацииНМА, "СебестоимостьРеализацииНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СебестоимостьРеализацииОС, "СебестоимостьРеализацииОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств, "СнятиеНаличныхДенежныхСредств");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СобственноеПроизводство, "СобственноеПроизводство");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеАмортизацииНМА, "СписаниеАмортизацииНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеАмортизацииОС, "СписаниеАмортизацииОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам, "СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности, "СписаниеДебиторскойЗадолженности");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеДебиторскойЗадолженностиНаАктивыПассивы, "СписаниеДебиторскойЗадолженностиНаАктивыПассивы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеДебиторскойЗадолженностиНаРасходы, "СписаниеДебиторскойЗадолженностиНаРасходы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеДенежныхДокументов, "СписаниеДенежныхДокументов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеИзЭксплуатации, "СписаниеИзЭксплуатации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеКосвенныхРасходов, "СписаниеКосвенныхРасходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности, "СписаниеКредиторскойЗадолженности");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеКредиторскойЗадолженностиВДоходы, "СписаниеКредиторскойЗадолженностиВДоходы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеНаРасходыНИОКР, "СписаниеНаРасходыНИОКР");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеНаРасходыНИОКРВДругуюОрганизацию, "СписаниеНаРасходыНИОКРВДругуюОрганизацию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеНаРасходыНИОКРИзДругойОрганизации, "СписаниеНаРасходыНИОКРИзДругойОрганизации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеНаРасходыСтоимостиОСНеПринимаяКУчету, "СписаниеНаРасходыСтоимостиОСНеПринимаяКУчету");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеНДСНаРасходы, "СписаниеНДСНаРасходы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеНМА, "СписаниеНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеОС, "СписаниеОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеОСпоИнвентаризации, "СписаниеОСпоИнвентаризации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеОшибокОкругления, "СписаниеОшибокОкругления");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеОшибокОкругленияВозвратныеОтходы, "СписаниеОшибокОкругленияВозвратныеОтходы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеПринятыхТоваровЗаСчетПоклажедателя, "СписаниеПринятыхТоваровЗаСчетПоклажедателя");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеПринятыхТоваровНаРасходы, "СписаниеПринятыхТоваровНаРасходы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеПрочихДоходов, "СписаниеПрочихДоходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеПрочихРасходов, "СписаниеПрочихРасходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеРасходовЗаСчетРезервов, "СписаниеРасходовЗаСчетРезервов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства, "СписаниеРасходовНаПартииПроизводства");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеРезерваПереоценкиАмортизацииНМА, "СписаниеРезерваПереоценкиАмортизацииНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеРезерваПереоценкиАмортизацииОС, "СписаниеРезерваПереоценкиАмортизацииОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеРезерваПереоценкиСтоимостиНМА, "СписаниеРезерваПереоценкиСтоимостиНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеРезерваПереоценкиСтоимостиОС, "СписаниеРезерваПереоценкиСтоимостиОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеРезервовПредстоящихРасходов, "СписаниеРезервовПредстоящихРасходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеСтоимостиНМА, "СписаниеСтоимостиНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеСтоимостиОС, "СписаниеСтоимостиОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеТоваров, "СписаниеТоваров");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию, "СписаниеТоваровПоТребованию");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СписаниеТоваровУХранителя, "СписаниеТоваровУХранителя");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СторнированиеПрочихДоходов, "СторнированиеПрочихДоходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СторнированиеПрочихРасходов, "СторнированиеПрочихРасходов");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СторнированиеРасходовУУ, "СторнированиеРасходовУУ");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СторноПереданнойТары, "СторноПереданнойТары");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад, "СторноПереданнойТарыВозвратНаДругойСклад");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СторноПоступления, "СторноПоступления");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СторноРеализации, "СторноРеализации");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СторноРеализацииВозвратНаДругойСклад, "СторноРеализацииВозвратНаДругойСклад");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы, "СторноСписанияНаРасходы");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УвеличениеНакопленнойАмортизацииНМА, "УвеличениеНакопленнойАмортизацииНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УвеличениеНакопленнойАмортизацииОС, "УвеличениеНакопленнойАмортизацииОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УвеличениеСтоимостиНМА, "УвеличениеСтоимостиНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УвеличениеСтоимостиОС, "УвеличениеСтоимостиОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УдалитьСписаниеТоваровПереданныхПартнерам, "УдалитьСписаниеТоваровПереданныхПартнерам");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УдержаниеВознагражденияКомиссионера, "УдержаниеВознагражденияКомиссионера");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УдержаниеВознагражденияКомитентом, "УдержаниеВознагражденияКомитентом");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УдержаниеИзЗарплатыВСчетРеализацииСотруднику, "УдержаниеИзЗарплатыВСчетРеализацииСотруднику");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УдержаниеИзЗарплатыСотрудника, "УдержаниеИзЗарплатыСотрудника");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УдержаниеНеизрасходованныхПодотчетныхСумм, "УдержаниеНеизрасходованныхПодотчетныхСумм");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УменьшениеВеличиныДооценкиНакопленнойАмортизацииНМА, "УменьшениеВеличиныДооценкиНакопленнойАмортизацииНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УменьшениеВеличиныДооценкиНакопленнойАмортизацииОС, "УменьшениеВеличиныДооценкиНакопленнойАмортизацииОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УменьшениеВеличиныДооценкиСтоимостиНМА, "УменьшениеВеличиныДооценкиСтоимостиНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УменьшениеВеличиныДооценкиСтоимостиОС, "УменьшениеВеличиныДооценкиСтоимостиОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УменьшениеНакопленнойАмортизацииНМА, "УменьшениеНакопленнойАмортизацииНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УменьшениеНакопленнойАмортизацииОС, "УменьшениеНакопленнойАмортизацииОС");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УменьшениеСтоимостиНМА, "УменьшениеСтоимостиНМА");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.УменьшениеСтоимостиОС, "УменьшениеСтоимостиОС");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("АвансовыйОтчет", Перечисления.ХозяйственныеОперации.АвансовыйОтчет);
	ЗначенияДляПолучения.Вставить("АмортизацияВнеоборотныхАктивов", Перечисления.ХозяйственныеОперации.АмортизацияВнеоборотныхАктивов);
	ЗначенияДляПолучения.Вставить("АмортизацияНМАвДругуюОрганизацию", Перечисления.ХозяйственныеОперации.АмортизацияНМАвДругуюОрганизацию);
	ЗначенияДляПолучения.Вставить("АмортизацияНМАизДругойОрганизации", Перечисления.ХозяйственныеОперации.АмортизацияНМАизДругойОрганизации);
	ЗначенияДляПолучения.Вставить("АмортизацияОС", Перечисления.ХозяйственныеОперации.АмортизацияОС);
	ЗначенияДляПолучения.Вставить("АмортизацияОСвДругуюОрганизацию", Перечисления.ХозяйственныеОперации.АмортизацияОСвДругуюОрганизацию);
	ЗначенияДляПолучения.Вставить("АмортизацияОСизДругойОрганизации", Перечисления.ХозяйственныеОперации.АмортизацияОСизДругойОрганизации);
	ЗначенияДляПолучения.Вставить("АннулированиеПодарочныхСертификатов", Перечисления.ХозяйственныеОперации.АннулированиеПодарочныхСертификатов);
	ЗначенияДляПолучения.Вставить("ВводНачальнойЗадолженностиКлиентов", Перечисления.ХозяйственныеОперации.ВводНачальнойЗадолженностиКлиентов);
	ЗначенияДляПолучения.Вставить("ВводНачальнойЗадолженностиПоставщикам", Перечисления.ХозяйственныеОперации.ВводНачальнойЗадолженностиПоставщикам);
	ЗначенияДляПолучения.Вставить("ВводНачальныхОстатковАвансовКлиентов", Перечисления.ХозяйственныеОперации.ВводНачальныхОстатковАвансовКлиентов);
	ЗначенияДляПолучения.Вставить("ВводНачальныхОстатковАвансовПоставщикам", Перечисления.ХозяйственныеОперации.ВводНачальныхОстатковАвансовПоставщикам);
	ЗначенияДляПолучения.Вставить("ВводОстатковАмортизацииНМАиРасходовНаНИОКР", Перечисления.ХозяйственныеОперации.ВводОстатковАмортизацииНМАиРасходовНаНИОКР);
	ЗначенияДляПолучения.Вставить("ВводОстатковАмортизацииОС", Перечисления.ХозяйственныеОперации.ВводОстатковАмортизацииОС);
	ЗначенияДляПолучения.Вставить("ВводОстатковАрендованныхОС", Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС);
	ЗначенияДляПолучения.Вставить("ВводОстатковВзаиморасчетовПоДоговорамЛизинга", Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга);
	ЗначенияДляПолучения.Вставить("ВводОстатковВложенийВоВнеоборотныеАктивы", Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы);
	ЗначенияДляПолучения.Вставить("ВводОстатковЗатратПартийПроизводства", Перечисления.ХозяйственныеОперации.ВводОстатковЗатратПартийПроизводства);
	ЗначенияДляПолучения.Вставить("ВводОстатковНМАиРасходовНаНИОКР", Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР);
	ЗначенияДляПолучения.Вставить("ВводОстатковОсновныхСредств", Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств);
	ЗначенияДляПолучения.Вставить("ВводОстатковПереданныхВАрендуОС", Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС);
	ЗначенияДляПолучения.Вставить("ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе", Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе);
	ЗначенияДляПолучения.Вставить("ВводОстатковПредметовЛизингаЗаБалансом", Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом);
	ЗначенияДляПолучения.Вставить("ВводОстатковПредметовЛизингаНаБалансе", Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе);
	ЗначенияДляПолучения.Вставить("ВводОстатковСтоимостиНМАиРасходовНаНИОКР", Перечисления.ХозяйственныеОперации.ВводОстатковСтоимостиНМАиРасходовНаНИОКР);
	ЗначенияДляПолучения.Вставить("ВводОстатковСтоимостиОС", Перечисления.ХозяйственныеОперации.ВводОстатковСтоимостиОС);
	ЗначенияДляПолучения.Вставить("ВзаимозачетДебиторскойЗадолженности", Перечисления.ХозяйственныеОперации.ВзаимозачетДебиторскойЗадолженности);
	ЗначенияДляПолучения.Вставить("ВзаимозачетЗадолженности", Перечисления.ХозяйственныеОперации.ВзаимозачетЗадолженности);
	ЗначенияДляПолучения.Вставить("ВзаимозачетКредиторскойЗадолженности", Перечисления.ХозяйственныеОперации.ВзаимозачетКредиторскойЗадолженности);
	ЗначенияДляПолучения.Вставить("ВнесениеДенежныхСредствВКассуККМ", Перечисления.ХозяйственныеОперации.ВнесениеДенежныхСредствВКассуККМ);
	ЗначенияДляПолучения.Вставить("ВнутреннееПоступлениеДенежныхСредств", Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеДенежныхСредств);
	ЗначенияДляПолучения.Вставить("ВнутреннееПоступлениеРабот", Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеРабот);
	ЗначенияДляПолучения.Вставить("ВнутреннееПоступлениеРасходов", Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеРасходов);
	ЗначенияДляПолучения.Вставить("ВнутреннееПоступлениеТоваров", Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеТоваров);
	ЗначенияДляПолучения.Вставить("ВнутреннееПотреблениеТоваров", Перечисления.ХозяйственныеОперации.ВнутреннееПотреблениеТоваров);
	ЗначенияДляПолучения.Вставить("ВнутренняяПередачаДенежныхСредств", Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
	ЗначенияДляПолучения.Вставить("ВозвратДавальцу", Перечисления.ХозяйственныеОперации.ВозвратДавальцу);
	ЗначенияДляПолучения.Вставить("ВозвратДенежныхДокументовПоставщику", Перечисления.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику);
	ЗначенияДляПолучения.Вставить("ВозвратДенежныхСредствВДругуюОрганизацию", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	ЗначенияДляПолучения.Вставить("ВозвратДенежныхСредствОтДругойОрганизации", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации);
	ЗначенияДляПолучения.Вставить("ВозвратДенежныхСредствОтПодотчетника", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника);
	ЗначенияДляПолучения.Вставить("ВозвратДенежныхСредствОтПоставщика", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика);
	ЗначенияДляПолучения.Вставить("ВозвратДеньВДень", Перечисления.ХозяйственныеОперации.ВозвратДеньВДень);
	ЗначенияДляПолучения.Вставить("ВозвратИзПроизводства", Перечисления.ХозяйственныеОперации.ВозвратИзПроизводства);
	ЗначенияДляПолучения.Вставить("ВозвратИзЭксплуатации", Перечисления.ХозяйственныеОперации.ВозвратИзЭксплуатации);
	ЗначенияДляПолучения.Вставить("ВозвратМатериаловИзКладовой", Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой);
	ЗначенияДляПолучения.Вставить("ВозвратМатериаловИзПроизводства", Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства);
	ЗначенияДляПолучения.Вставить("ВозвратНедопоставленногоТовара", Перечисления.ХозяйственныеОперации.ВозвратНедопоставленногоТовара);
	ЗначенияДляПолучения.Вставить("ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту", Перечисления.ХозяйственныеОперации.ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту);
	ЗначенияДляПолучения.Вставить("ВозвратНеперечисленныхДС", Перечисления.ХозяйственныеОперации.ВозвратНеперечисленныхДС);
	ЗначенияДляПолучения.Вставить("ВозвратОплатыКлиенту", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	ЗначенияДляПолучения.Вставить("ВозвратОплатыКлиентуНаПлатежнуюКарту", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиентуНаПлатежнуюКарту);
	ЗначенияДляПолучения.Вставить("ВозвратОплатыНаПлатежнуюКарту", Перечисления.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту);
	ЗначенияДляПолучения.Вставить("ВозвратОСотАрендатора", Перечисления.ХозяйственныеОперации.ВозвратОСотАрендатора);
	ЗначенияДляПолучения.Вставить("ВозвратОтКомиссионера", Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера);
	ЗначенияДляПолучения.Вставить("ВозвратОтПереработчика", Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика);
	ЗначенияДляПолучения.Вставить("ВозвратОтРозничногоПокупателя", Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя);
	ЗначенияДляПолучения.Вставить("ВозвратОтХранителя", Перечисления.ХозяйственныеОперации.ВозвратОтХранителя);
	ЗначенияДляПолучения.Вставить("ВозвратПодарочныхСертификатов", Перечисления.ХозяйственныеОперации.ВозвратПодарочныхСертификатов);
	ЗначенияДляПолучения.Вставить("ВозвратПоКомиссииМеждуОрганизациями", Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями);
	ЗначенияДляПолучения.Вставить("ВозвратТарыОтКлиентаПрошлыхПериодов", Перечисления.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов);
	ЗначенияДляПолучения.Вставить("ВозвратТоваровКомитенту", Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту);
	ЗначенияДляПолучения.Вставить("ВозвратТоваровМеждуОрганизациями", Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями);
	ЗначенияДляПолучения.Вставить("ВозвратТоваровОтКлиента", Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента);
	ЗначенияДляПолучения.Вставить("ВозвратТоваровОтКлиентаПрошлыхПериодов", Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов);
	ЗначенияДляПолучения.Вставить("ВозвратТоваровПоставщику", Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику);
	ЗначенияДляПолучения.Вставить("ВосстановлениеАвансаКлиента", Перечисления.ХозяйственныеОперации.ВосстановлениеАвансаКлиента);
	ЗначенияДляПолучения.Вставить("ВосстановлениеНДС", Перечисления.ХозяйственныеОперации.ВосстановлениеНДС);
	ЗначенияДляПолучения.Вставить("ВосстановлениеНДССВыданногоАванса", Перечисления.ХозяйственныеОперации.ВосстановлениеНДССВыданногоАванса);
	ЗначенияДляПолучения.Вставить("ВосстановлениеРезервовПоСомнительнымДолгам", Перечисления.ХозяйственныеОперации.ВосстановлениеРезервовПоСомнительнымДолгам);
	ЗначенияДляПолучения.Вставить("ВыбытиеАрендованныхОС", Перечисления.ХозяйственныеОперации.ВыбытиеАрендованныхОС);
	ЗначенияДляПолучения.Вставить("ВыдачаДенежныхДокументовПодотчетнику", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику);
	ЗначенияДляПолучения.Вставить("ВыдачаДенежныхСредствВДругуюКассу", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу);
	ЗначенияДляПолучения.Вставить("ВыдачаДенежныхСредствВКассуККМ", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ);
	ЗначенияДляПолучения.Вставить("ВыдачаДенежныхСредствПодотчетнику", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	ЗначенияДляПолучения.Вставить("ВыдачаЗаймаСотруднику", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
	ЗначенияДляПолучения.Вставить("ВыдачаЗаймов", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	ЗначенияДляПолучения.Вставить("ВыделениеАмортизацииОСПриРазукомплектации", Перечисления.ХозяйственныеОперации.ВыделениеАмортизацииОСПриРазукомплектации);
	ЗначенияДляПолучения.Вставить("ВыделениеСтоимостиОСПриРазукомплектации", Перечисления.ХозяйственныеОперации.ВыделениеСтоимостиОСПриРазукомплектации);
	ЗначенияДляПолучения.Вставить("ВыемкаДенежныхСредствИзКассыККМ", Перечисления.ХозяйственныеОперации.ВыемкаДенежныхСредствИзКассыККМ);
	ЗначенияДляПолучения.Вставить("ВыкупВозвратнойТарыКлиентом", Перечисления.ХозяйственныеОперации.ВыкупВозвратнойТарыКлиентом);
	ЗначенияДляПолучения.Вставить("ВыкупПринятыхНаХранениеТоваров", Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров);
	ЗначенияДляПолучения.Вставить("ВыкупТоваровПереданныхВПроизводство", Перечисления.ХозяйственныеОперации.ВыкупТоваровПереданныхВПроизводство);
	ЗначенияДляПолучения.Вставить("ВыкупТоваровПереданныхНаХранение", Перечисления.ХозяйственныеОперации.ВыкупТоваровПереданныхНаХранение);
	ЗначенияДляПолучения.Вставить("ВыкупТоваровХранителем", Перечисления.ХозяйственныеОперации.ВыкупТоваровХранителем);
	ЗначенияДляПолучения.Вставить("ВыплатаЗарплаты", Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты);
	ЗначенияДляПолучения.Вставить("ВыплатаЗарплатыНаЛицевыеСчета", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	ЗначенияДляПолучения.Вставить("ВыплатаЗарплатыПоЗарплатномуПроекту", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	ЗначенияДляПолучения.Вставить("ВыплатаЗарплатыРаботнику", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаботнику);
	ЗначенияДляПолучения.Вставить("ВыплатаЗарплатыРаздатчиком", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком);
	ЗначенияДляПолучения.Вставить("ВыплатаЗарплатыЧерезКассу", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу);
	ЗначенияДляПолучения.Вставить("ВыпускПродукции", Перечисления.ХозяйственныеОперации.ВыпускПродукции);
	ЗначенияДляПолучения.Вставить("ВыпускПродукцииВПодразделение", Перечисления.ХозяйственныеОперации.ВыпускПродукцииВПодразделение);
	ЗначенияДляПолучения.Вставить("ВыпускПродукцииНаСклад", Перечисления.ХозяйственныеОперации.ВыпускПродукцииНаСклад);
	ЗначенияДляПолучения.Вставить("ВыпускПродукцииФиксированнаяСтоимость", Перечисления.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость);
	ЗначенияДляПолучения.Вставить("ВыработкаНМА", Перечисления.ХозяйственныеОперации.ВыработкаНМА);
	ЗначенияДляПолучения.Вставить("ВычетНДСНалоговымАгентом", Перечисления.ХозяйственныеОперации.ВычетНДСНалоговымАгентом);
	ЗначенияДляПолучения.Вставить("ВычетНДССВыданногоАванса", Перечисления.ХозяйственныеОперации.ВычетНДССВыданногоАванса);
	ЗначенияДляПолучения.Вставить("ВычетНДССПолученногоАванса", Перечисления.ХозяйственныеОперации.ВычетНДССПолученногоАванса);
	ЗначенияДляПолучения.Вставить("ДвижениеАктивовПассивовЗаСчетАктивовПассивов", Перечисления.ХозяйственныеОперации.ДвижениеАктивовПассивовЗаСчетАктивовПассивов);
	ЗначенияДляПолучения.Вставить("ДвижениеДоходовЗаСчетАктивовПассивов", Перечисления.ХозяйственныеОперации.ДвижениеДоходовЗаСчетАктивовПассивов);
	ЗначенияДляПолучения.Вставить("ДвижениеДоходовЗаСчетРасходов", Перечисления.ХозяйственныеОперации.ДвижениеДоходовЗаСчетРасходов);
	ЗначенияДляПолучения.Вставить("ДвижениеРасходовЗаСчетАктивовПассивов", Перечисления.ХозяйственныеОперации.ДвижениеРасходовЗаСчетАктивовПассивов);
	ЗначенияДляПолучения.Вставить("ДвижениеРасходовЗаСчетДоходов", Перечисления.ХозяйственныеОперации.ДвижениеРасходовЗаСчетДоходов);
	ЗначенияДляПолучения.Вставить("ДепонированиеЗарплаты", Перечисления.ХозяйственныеОперации.ДепонированиеЗарплаты);
	ЗначенияДляПолучения.Вставить("ДополнительныеРасходыБезПартии", Перечисления.ХозяйственныеОперации.ДополнительныеРасходыБезПартии);
	ЗначенияДляПолучения.Вставить("ДополнительныеРасходыСПартией", Перечисления.ХозяйственныеОперации.ДополнительныеРасходыСПартией);
	ЗначенияДляПолучения.Вставить("ДоходыОтПереоценкиТоваров", Перечисления.ХозяйственныеОперации.ДоходыОтПереоценкиТоваров);
	ЗначенияДляПолучения.Вставить("ДоходыПоОтчетуКомиссионераОСписании", Перечисления.ХозяйственныеОперации.ДоходыПоОтчетуКомиссионераОСписании);
	ЗначенияДляПолучения.Вставить("ЗакрытиеМесяца", Перечисления.ХозяйственныеОперации.ЗакрытиеМесяца);
	ЗначенияДляПолучения.Вставить("ЗакупкаВСтранахЕАЭС", Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
	ЗначенияДляПолучения.Вставить("ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка", Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка);
	ЗначенияДляПолучения.Вставить("ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути", Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути);
	ЗначенияДляПолучения.Вставить("ЗакупкаВСтранахЕАЭСТоварыВПути", Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути);
	ЗначенияДляПолучения.Вставить("ЗакупкаВСтранахЕАЭСФактуровкаПоставки", Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки);
	ЗначенияДляПолучения.Вставить("ЗакупкаПоИмпорту", Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
	ЗначенияДляПолучения.Вставить("ЗакупкаПоИмпортуПоступлениеИзТоваровВПути", Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути);
	ЗначенияДляПолучения.Вставить("ЗакупкаПоИмпортуТоварыВПути", Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути);
	ЗначенияДляПолучения.Вставить("ЗакупкаУДругойОрганизации", Перечисления.ХозяйственныеОперации.ЗакупкаУДругойОрганизации);
	ЗначенияДляПолучения.Вставить("ЗакупкаУПоставщика", Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	ЗначенияДляПолучения.Вставить("ЗакупкаУПоставщикаНеотфактурованнаяПоставка", Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка);
	ЗначенияДляПолучения.Вставить("ЗакупкаУПоставщикаПоступлениеИзТоваровВПути", Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути);
	ЗначенияДляПолучения.Вставить("ЗакупкаУПоставщикаРеглУчет", Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	ЗначенияДляПолучения.Вставить("ЗакупкаУПоставщикаТоварыВПути", Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути);
	ЗначенияДляПолучения.Вставить("ЗакупкаУПоставщикаФактуровкаПоставки", Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки);
	ЗначенияДляПолучения.Вставить("ЗакупкаЧерезПодотчетноеЛицо", Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо);
	ЗначенияДляПолучения.Вставить("ЗачетАвансаКлиента", Перечисления.ХозяйственныеОперации.ЗачетАвансаКлиента);
	ЗначенияДляПолучения.Вставить("ЗачетАвансаПоставщику", Перечисления.ХозяйственныеОперации.ЗачетАвансаПоставщику);
	ЗначенияДляПолучения.Вставить("ЗачетВознагражденияАвансомКомиссионера", Перечисления.ХозяйственныеОперации.ЗачетВознагражденияАвансомКомиссионера);
	ЗначенияДляПолучения.Вставить("ЗачетВознагражденияАвансомКомитенту", Перечисления.ХозяйственныеОперации.ЗачетВознагражденияАвансомКомитенту);
	ЗначенияДляПолучения.Вставить("ЗачетВознагражденияОплатойКомиссионера", Перечисления.ХозяйственныеОперации.ЗачетВознагражденияОплатойКомиссионера);
	ЗначенияДляПолучения.Вставить("ЗачетВознагражденияОплатойКомитенту", Перечисления.ХозяйственныеОперации.ЗачетВознагражденияОплатойКомитенту);
	ЗначенияДляПолучения.Вставить("ИзменениеПараметровАмортизацииНМА", Перечисления.ХозяйственныеОперации.ИзменениеПараметровАмортизацииНМА);
	ЗначенияДляПолучения.Вставить("ИзменениеПараметровАмортизацииОС", Перечисления.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС);
	ЗначенияДляПолучения.Вставить("ИзменениеПараметровНМА", Перечисления.ХозяйственныеОперации.ИзменениеПараметровНМА);
	ЗначенияДляПолучения.Вставить("ИзменениеПараметровОС", Перечисления.ХозяйственныеОперации.ИзменениеПараметровОС);
	ЗначенияДляПолучения.Вставить("ИзменениеПараметровСтоимостиНМА", Перечисления.ХозяйственныеОперации.ИзменениеПараметровСтоимостиНМА);
	ЗначенияДляПолучения.Вставить("ИзменениеПараметровСтоимостиОС", Перечисления.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС);
	ЗначенияДляПолучения.Вставить("ИзменениеСостоянияОС", Перечисления.ХозяйственныеОперации.ИзменениеСостоянияОС);
	ЗначенияДляПолучения.Вставить("ИзменениеСпособаОтраженияИмущественныхНалогов", Перечисления.ХозяйственныеОперации.ИзменениеСпособаОтраженияИмущественныхНалогов);
	ЗначенияДляПолучения.Вставить("ИнвентаризационнаяОпись", Перечисления.ХозяйственныеОперации.ИнвентаризационнаяОпись);
	ЗначенияДляПолучения.Вставить("ИнвентаризацияВложенийВОС", Перечисления.ХозяйственныеОперации.ИнвентаризацияВложенийВОС);
	ЗначенияДляПолучения.Вставить("ИнвентаризацияКомиссионера", Перечисления.ХозяйственныеОперации.ИнвентаризацияКомиссионера);
	ЗначенияДляПолучения.Вставить("ИнвентаризацияНезавершенногоСтроительства", Перечисления.ХозяйственныеОперации.ИнвентаризацияНезавершенногоСтроительства);
	ЗначенияДляПолучения.Вставить("ИнвентаризацияНМА", Перечисления.ХозяйственныеОперации.ИнвентаризацияНМА);
	ЗначенияДляПолучения.Вставить("ИнвентаризацияОС", Перечисления.ХозяйственныеОперации.ИнвентаризацияОС);
	ЗначенияДляПолучения.Вставить("ИнкассацияДенежныхСредствВБанк", Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк);
	ЗначенияДляПолучения.Вставить("ИнкассацияДенежныхСредствИзБанка", Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствИзБанка);
	ЗначенияДляПолучения.Вставить("ИсправлениеОшибок", Перечисления.ХозяйственныеОперации.ИсправлениеОшибок);
	ЗначенияДляПолучения.Вставить("ИсправлениеПрочегоНачисленияНДС", Перечисления.ХозяйственныеОперации.ИсправлениеПрочегоНачисленияНДС);
	ЗначенияДляПолучения.Вставить("КомиссияПоЭквайрингу", Перечисления.ХозяйственныеОперации.КомиссияПоЭквайрингу);
	ЗначенияДляПолучения.Вставить("КонвертацияВалюты", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	ЗначенияДляПолучения.Вставить("КонвертацияВалютыПодотчетнымЛицом", Перечисления.ХозяйственныеОперации.КонвертацияВалютыПодотчетнымЛицом);
	ЗначенияДляПолучения.Вставить("КорректировкаЗадолженности", Перечисления.ХозяйственныеОперации.КорректировкаЗадолженности);
	ЗначенияДляПолучения.Вставить("КорректировкаОбособленногоУчета", Перечисления.ХозяйственныеОперации.КорректировкаОбособленногоУчета);
	ЗначенияДляПолучения.Вставить("КорректировкаПоСогласованиюСторон", Перечисления.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон);
	ЗначенияДляПолучения.Вставить("КорректировкаПриобретенияПрошлогоПериода", Перечисления.ХозяйственныеОперации.КорректировкаПриобретенияПрошлогоПериода);
	ЗначенияДляПолучения.Вставить("КорректировкаПриобретенияСоСписаниемНаРасходы", Перечисления.ХозяйственныеОперации.КорректировкаПриобретенияСоСписаниемНаРасходы);
	ЗначенияДляПолучения.Вставить("КорректировкаПриобретенияСОтражениемНаПрочихДоходах", Перечисления.ХозяйственныеОперации.КорректировкаПриобретенияСОтражениемНаПрочихДоходах);
	ЗначенияДляПолучения.Вставить("КорректировкаРеализацииСоСписаниемНаРасходы", Перечисления.ХозяйственныеОперации.КорректировкаРеализацииСоСписаниемНаРасходы);
	ЗначенияДляПолучения.Вставить("КорректировкаРеализацииСОтражениемНаПрочихДоходах", Перечисления.ХозяйственныеОперации.КорректировкаРеализацииСОтражениемНаПрочихДоходах);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыДепозитыПрибыль", Перечисления.ХозяйственныеОперации.КурсовыеРазницыДепозитыПрибыль);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыДепозитыУбыток", Перечисления.ХозяйственныеОперации.КурсовыеРазницыДепозитыУбыток);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыДСПрибыль", Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСПрибыль);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыДСУбыток", Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСУбыток);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыЗаймыВыданныеПрибыль", Перечисления.ХозяйственныеОперации.КурсовыеРазницыЗаймыВыданныеПрибыль);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыЗаймыВыданныеУбыток", Перечисления.ХозяйственныеОперации.КурсовыеРазницыЗаймыВыданныеУбыток);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыКлиентыПрибыль", Перечисления.ХозяйственныеОперации.КурсовыеРазницыКлиентыПрибыль);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыКлиентыУбыток", Перечисления.ХозяйственныеОперации.КурсовыеРазницыКлиентыУбыток);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыКредитыИЗаймыПрибыль", Перечисления.ХозяйственныеОперации.КурсовыеРазницыКредитыИЗаймыПрибыль);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыКредитыИЗаймыУбыток", Перечисления.ХозяйственныеОперации.КурсовыеРазницыКредитыИЗаймыУбыток);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыЛизингПрибыль", Перечисления.ХозяйственныеОперации.КурсовыеРазницыЛизингПрибыль);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыЛизингУбыток", Перечисления.ХозяйственныеОперации.КурсовыеРазницыЛизингУбыток);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыПоставщикиПрибыль", Перечисления.ХозяйственныеОперации.КурсовыеРазницыПоставщикиПрибыль);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыПоставщикиУбыток", Перечисления.ХозяйственныеОперации.КурсовыеРазницыПоставщикиУбыток);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыРезервыПоДолгамПрибыль", Перечисления.ХозяйственныеОперации.КурсовыеРазницыРезервыПоДолгамПрибыль);
	ЗначенияДляПолучения.Вставить("КурсовыеРазницыРезервыПоДолгамУбыток", Перечисления.ХозяйственныеОперации.КурсовыеРазницыРезервыПоДолгамУбыток);
	ЗначенияДляПолучения.Вставить("Модернизация", Перечисления.ХозяйственныеОперации.Модернизация);
	ЗначенияДляПолучения.Вставить("МодернизацияОС", Перечисления.ХозяйственныеОперации.МодернизацияОС);
	ЗначенияДляПолучения.Вставить("НаработкаОбъектовЭксплуатации", Перечисления.ХозяйственныеОперации.НаработкаОбъектовЭксплуатации);
	ЗначенияДляПолучения.Вставить("НаработкаТМЦВЭксплуатации", Перечисления.ХозяйственныеОперации.НаработкаТМЦВЭксплуатации);
	ЗначенияДляПолучения.Вставить("НачислениеВознагражденияЗаСчетРезервов", Перечисления.ХозяйственныеОперации.НачислениеВознагражденияЗаСчетРезервов);
	ЗначенияДляПолучения.Вставить("НачислениеЗаработнойПлаты", Перечисления.ХозяйственныеОперации.НачислениеЗаработнойПлаты);
	ЗначенияДляПолучения.Вставить("НачислениеИмущественныхНалогов", Перечисления.ХозяйственныеОперации.НачислениеИмущественныхНалогов);
	ЗначенияДляПолучения.Вставить("НачислениеНалогаНаПрибыль", Перечисления.ХозяйственныеОперации.НачислениеНалогаНаПрибыль);
	ЗначенияДляПолучения.Вставить("НачислениеНДСНалоговымАгентом", Перечисления.ХозяйственныеОперации.НачислениеНДСНалоговымАгентом);
	ЗначенияДляПолучения.Вставить("НачислениеНДСпоОтгрузкеТоваровВПути", Перечисления.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути);
	ЗначенияДляПолучения.Вставить("НачислениеНДССПолученногоАванса", Перечисления.ХозяйственныеОперации.НачислениеНДССПолученногоАванса);
	ЗначенияДляПолучения.Вставить("НачислениеПоЛизинговомуДоговору", Перечисления.ХозяйственныеОперации.НачислениеПоЛизинговомуДоговору);
	ЗначенияДляПолучения.Вставить("НачислениеРезервовПоВознаграждениям", Перечисления.ХозяйственныеОперации.НачислениеРезервовПоВознаграждениям);
	ЗначенияДляПолучения.Вставить("НачислениеРезервовПоСомнительнымДолгам", Перечисления.ХозяйственныеОперации.НачислениеРезервовПоСомнительнымДолгам);
	ЗначенияДляПолучения.Вставить("НачислениеРезервовПоСтраховымВзносам", Перечисления.ХозяйственныеОперации.НачислениеРезервовПоСтраховымВзносам);
	ЗначенияДляПолучения.Вставить("НачислениеРезервовПредстоящихРасходов", Перечисления.ХозяйственныеОперации.НачислениеРезервовПредстоящихРасходов);
	ЗначенияДляПолучения.Вставить("НачислениеТорговогоСбора", Перечисления.ХозяйственныеОперации.НачислениеТорговогоСбора);
	ЗначенияДляПолучения.Вставить("НачисленияПоДепозитам", Перечисления.ХозяйственныеОперации.НачисленияПоДепозитам);
	ЗначенияДляПолучения.Вставить("НачисленияПоЗаймамВыданным", Перечисления.ХозяйственныеОперации.НачисленияПоЗаймамВыданным);
	ЗначенияДляПолучения.Вставить("НачисленияПоКредитам", Перечисления.ХозяйственныеОперации.НачисленияПоКредитам);
	ЗначенияДляПолучения.Вставить("ОказаниеАгентскихУслуг", Перечисления.ХозяйственныеОперации.ОказаниеАгентскихУслуг);
	ЗначенияДляПолучения.Вставить("ОплатаДенежныхСредствВДругуюОрганизацию", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	ЗначенияДляПолучения.Вставить("ОплатаЛизингодателю", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
	ЗначенияДляПолучения.Вставить("ОплатаПодарочнымСертификатом", Перечисления.ХозяйственныеОперации.ОплатаПодарочнымСертификатом);
	ЗначенияДляПолучения.Вставить("ОплатаПоКредитам", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	ЗначенияДляПолучения.Вставить("ОплатаПоставщику", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	ЗначенияДляПолучения.Вставить("ОплатаПоставщикуПодотчетнымЛицом", Перечисления.ХозяйственныеОперации.ОплатаПоставщикуПодотчетнымЛицом);
	ЗначенияДляПолучения.Вставить("ОплатаПроцентовПоКредитам", Перечисления.ХозяйственныеОперации.ОплатаПроцентовПоКредитам);
	ЗначенияДляПолучения.Вставить("ОприходованиеЗаСчетДоходов", Перечисления.ХозяйственныеОперации.ОприходованиеЗаСчетДоходов);
	ЗначенияДляПолучения.Вставить("ОприходованиеЗаСчетРасходов", Перечисления.ХозяйственныеОперации.ОприходованиеЗаСчетРасходов);
	ЗначенияДляПолучения.Вставить("ОприходованиеПоВозврату", Перечисления.ХозяйственныеОперации.ОприходованиеПоВозврату);
	ЗначенияДляПолучения.Вставить("ОприходованиеТоваров", Перечисления.ХозяйственныеОперации.ОприходованиеТоваров);
	ЗначенияДляПолучения.Вставить("ОтгрузкаБезПереходаПраваСобственности", Перечисления.ХозяйственныеОперации.ОтгрузкаБезПереходаПраваСобственности);
	ЗначенияДляПолучения.Вставить("ОтгрузкаПринятыхСПравомПродажиТоваровСХранения", Перечисления.ХозяйственныеОперации.ОтгрузкаПринятыхСПравомПродажиТоваровСХранения);
	ЗначенияДляПолучения.Вставить("ОтменаРегистрацииЗемельныхУчастков", Перечисления.ХозяйственныеОперации.ОтменаРегистрацииЗемельныхУчастков);
	ЗначенияДляПолучения.Вставить("ОтменаРегистрацииТранспортныхСредств", Перечисления.ХозяйственныеОперации.ОтменаРегистрацииТранспортныхСредств);
	ЗначенияДляПолучения.Вставить("ОтражениеЗадолженностиПередКомитентом", Перечисления.ХозяйственныеОперации.ОтражениеЗадолженностиПередКомитентом);
	ЗначенияДляПолучения.Вставить("ОтражениеЗаработнойПлаты", Перечисления.ХозяйственныеОперации.ОтражениеЗаработнойПлаты);
	ЗначенияДляПолучения.Вставить("ОтражениеИзлишкаПриИнвентаризацииДенежныхСредств", Перечисления.ХозяйственныеОперации.ОтражениеИзлишкаПриИнвентаризацииДенежныхСредств);
	ЗначенияДляПолучения.Вставить("ОтражениеИзлишкаПриИнкассацииДенежныхСредств", Перечисления.ХозяйственныеОперации.ОтражениеИзлишкаПриИнкассацииДенежныхСредств);
	ЗначенияДляПолучения.Вставить("ОтражениеИзлишковНаДоходыПриПоступленииТоваров", Перечисления.ХозяйственныеОперации.ОтражениеИзлишковНаДоходыПриПоступленииТоваров);
	ЗначенияДляПолучения.Вставить("ОтражениеНалоговВзносовСЗаработнойПлаты", Перечисления.ХозяйственныеОперации.ОтражениеНалоговВзносовСЗаработнойПлаты);
	ЗначенияДляПолучения.Вставить("ОтражениеНалоговВзносовСоСдельнойЗаработнойПлаты", Перечисления.ХозяйственныеОперации.ОтражениеНалоговВзносовСоСдельнойЗаработнойПлаты);
	ЗначенияДляПолучения.Вставить("ОтражениеНДФЛ", Перечисления.ХозяйственныеОперации.ОтражениеНДФЛ);
	ЗначенияДляПолучения.Вставить("ОтражениеНедостачЗаСчетПоставщикаПриПоступленииТоваров", Перечисления.ХозяйственныеОперации.ОтражениеНедостачЗаСчетПоставщикаПриПоступленииТоваров);
	ЗначенияДляПолучения.Вставить("ОтражениеНедостачЗаСчетСтороннейКомпанииПриПоступленииТоваров", Перечисления.ХозяйственныеОперации.ОтражениеНедостачЗаСчетСтороннейКомпанииПриПоступленииТоваров);
	ЗначенияДляПолучения.Вставить("ОтражениеНедостачиПриИнвентаризацииДенежныхСредств", Перечисления.ХозяйственныеОперации.ОтражениеНедостачиПриИнвентаризацииДенежныхСредств);
	ЗначенияДляПолучения.Вставить("ОтражениеНедостачиПриИнкассацииДенежныхСредств", Перечисления.ХозяйственныеОперации.ОтражениеНедостачиПриИнкассацииДенежныхСредств);
	ЗначенияДляПолучения.Вставить("ОтражениеНедостачНаРасходыПриПоступленииТоваров", Перечисления.ХозяйственныеОперации.ОтражениеНедостачНаРасходыПриПоступленииТоваров);
	ЗначенияДляПолучения.Вставить("ОтражениеПрочихАктивовПассивов", Перечисления.ХозяйственныеОперации.ОтражениеПрочихАктивовПассивов);
	ЗначенияДляПолучения.Вставить("ОтражениеРасходовЗаСчетПрочихАктивовПассивов", Перечисления.ХозяйственныеОперации.ОтражениеРасходовЗаСчетПрочихАктивовПассивов);
	ЗначенияДляПолучения.Вставить("ОтражениеСдельнойЗаработнойПлаты", Перечисления.ХозяйственныеОперации.ОтражениеСдельнойЗаработнойПлаты);
	ЗначенияДляПолучения.Вставить("ОтчетБанкаПоОперациямЭквайринга", Перечисления.ХозяйственныеОперации.ОтчетБанкаПоОперациямЭквайринга);
	ЗначенияДляПолучения.Вставить("ОтчетДавальцу", Перечисления.ХозяйственныеОперации.ОтчетДавальцу);
	ЗначенияДляПолучения.Вставить("ОтчетКомиссионера", Перечисления.ХозяйственныеОперации.ОтчетКомиссионера);
	ЗначенияДляПолучения.Вставить("ОтчетКомиссионераКомиссия", Перечисления.ХозяйственныеОперации.ОтчетКомиссионераКомиссия);
	ЗначенияДляПолучения.Вставить("ОтчетКомиссионераОСписании", Перечисления.ХозяйственныеОперации.ОтчетКомиссионераОСписании);
	ЗначенияДляПолучения.Вставить("ОтчетКомитенту", Перечисления.ХозяйственныеОперации.ОтчетКомитенту);
	ЗначенияДляПолучения.Вставить("ОтчетКомитентуОСписании", Перечисления.ХозяйственныеОперации.ОтчетКомитентуОСписании);
	ЗначенияДляПолучения.Вставить("ОтчетПоКомиссииМеждуОрганизациями", Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями);
	ЗначенияДляПолучения.Вставить("ОтчетПоКомиссииМеждуОрганизациямиОСписании", Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании);
	ЗначенияДляПолучения.Вставить("ОформлениеГТДБрокером", Перечисления.ХозяйственныеОперации.ОформлениеГТДБрокером);
	ЗначенияДляПолучения.Вставить("ОформлениеГТДСамостоятельно", Перечисления.ХозяйственныеОперации.ОформлениеГТДСамостоятельно);
	ЗначенияДляПолучения.Вставить("ОформлениеТаможеннойДекларацииЭкспорт", Перечисления.ХозяйственныеОперации.ОформлениеТаможеннойДекларацииЭкспорт);
	ЗначенияДляПолучения.Вставить("ПереводОсновныхСредствИнвестиционногоИмущества", Перечисления.ХозяйственныеОперации.ПереводОсновныхСредствИнвестиционногоИмущества);
	ЗначенияДляПолучения.Вставить("ПередачаВПроизводство", Перечисления.ХозяйственныеОперации.ПередачаВПроизводство);
	ЗначенияДляПолучения.Вставить("ПередачаВСоставНМА", Перечисления.ХозяйственныеОперации.ПередачаВСоставНМА);
	ЗначенияДляПолучения.Вставить("ПередачаВСоставОС", Перечисления.ХозяйственныеОперации.ПередачаВСоставОС);
	ЗначенияДляПолучения.Вставить("ПередачаВЭксплуатацию", Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию);
	ЗначенияДляПолучения.Вставить("ПередачаВЭксплуатациюБУНУ", Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ);
	ЗначенияДляПолучения.Вставить("ПередачаДавальцу", Перечисления.ХозяйственныеОперации.ПередачаДавальцу);
	ЗначенияДляПолучения.Вставить("ПередачаМатериаловВКладовую", Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую);
	ЗначенияДляПолучения.Вставить("ПередачаМатериаловВПроизводство", Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство);
	ЗначенияДляПолучения.Вставить("ПередачаНаКомиссию", Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
	ЗначенияДляПолучения.Вставить("ПередачаНаКомиссиюВДругуюОрганизацию", Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
	ЗначенияДляПолучения.Вставить("ПередачаНаПрочиеЦели", Перечисления.ХозяйственныеОперации.ПередачаНаПрочиеЦели);
	ЗначенияДляПолучения.Вставить("ПередачаНаХранениеСПравомПродажи", Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи);
	ЗначенияДляПолучения.Вставить("ПередачаОСАрендатору", Перечисления.ХозяйственныеОперации.ПередачаОСАрендатору);
	ЗначенияДляПолучения.Вставить("ПередачаПереработчику", Перечисления.ХозяйственныеОперации.ПередачаПереработчику);
	ЗначенияДляПолучения.Вставить("ПередачаПродукцииИзКладовой", Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой);
	ЗначенияДляПолучения.Вставить("ПередачаПродукцииИзПроизводства", Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства);
	ЗначенияДляПолучения.Вставить("ПередачаПрочихРасходовМеждуФилиалами", Перечисления.ХозяйственныеОперации.ПередачаПрочихРасходовМеждуФилиалами);
	ЗначенияДляПолучения.Вставить("ПеремещениеАмортизацииНМАвДругуюОрганизацию", Перечисления.ХозяйственныеОперации.ПеремещениеАмортизацииНМАвДругуюОрганизацию);
	ЗначенияДляПолучения.Вставить("ПеремещениеАмортизацииНМАизДругойОрганизации", Перечисления.ХозяйственныеОперации.ПеремещениеАмортизацииНМАизДругойОрганизации);
	ЗначенияДляПолучения.Вставить("ПеремещениеАмортизацииОСвДругуюОрганизацию", Перечисления.ХозяйственныеОперации.ПеремещениеАмортизацииОСвДругуюОрганизацию);
	ЗначенияДляПолучения.Вставить("ПеремещениеАмортизацииОСизДругойОрганизации", Перечисления.ХозяйственныеОперации.ПеремещениеАмортизацииОСизДругойОрганизации);
	ЗначенияДляПолучения.Вставить("ПеремещениеВЭксплуатации", Перечисления.ХозяйственныеОперации.ПеремещениеВЭксплуатации);
	ЗначенияДляПолучения.Вставить("ПеремещениеДенежныхДокументов", Перечисления.ХозяйственныеОперации.ПеремещениеДенежныхДокументов);
	ЗначенияДляПолучения.Вставить("ПеремещениеНМА", Перечисления.ХозяйственныеОперации.ПеремещениеНМА);
	ЗначенияДляПолучения.Вставить("ПеремещениеНМАвПодразделениеВыделенноеНаБаланс", Перечисления.ХозяйственныеОперации.ПеремещениеНМАвПодразделениеВыделенноеНаБаланс);
	ЗначенияДляПолучения.Вставить("ПеремещениеОС", Перечисления.ХозяйственныеОперации.ПеремещениеОС);
	ЗначенияДляПолучения.Вставить("ПеремещениеОСвПодразделениеВыделенноеНаБаланс", Перечисления.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс);
	ЗначенияДляПолучения.Вставить("ПеремещениеОСпоИнвентаризации", Перечисления.ХозяйственныеОперации.ПеремещениеОСпоИнвентаризации);
	ЗначенияДляПолучения.Вставить("ПеремещениеПолуфабрикатов", Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатов);
	ЗначенияДляПолучения.Вставить("ПеремещениеПолуфабрикатовМеждуФилиалами", Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами);
	ЗначенияДляПолучения.Вставить("ПеремещениеСтоимостиНМАвДругуюОрганизацию", Перечисления.ХозяйственныеОперации.ПеремещениеСтоимостиНМАвДругуюОрганизацию);
	ЗначенияДляПолучения.Вставить("ПеремещениеСтоимостиНМАизДругойОрганизации", Перечисления.ХозяйственныеОперации.ПеремещениеСтоимостиНМАизДругойОрганизации);
	ЗначенияДляПолучения.Вставить("ПеремещениеСтоимостиОСвДругуюОрганизацию", Перечисления.ХозяйственныеОперации.ПеремещениеСтоимостиОСвДругуюОрганизацию);
	ЗначенияДляПолучения.Вставить("ПеремещениеСтоимостиОСизДругойОрганизации", Перечисления.ХозяйственныеОперации.ПеремещениеСтоимостиОСизДругойОрганизации);
	ЗначенияДляПолучения.Вставить("ПеремещениеТоваров", Перечисления.ХозяйственныеОперации.ПеремещениеТоваров);
	ЗначенияДляПолучения.Вставить("ПеремещениеТоваровМеждуФилиалами", Перечисления.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами);
	ЗначенияДляПолучения.Вставить("ПереносАванса", Перечисления.ХозяйственныеОперации.ПереносАванса);
	ЗначенияДляПолучения.Вставить("ПереносПретензииНаАвансы", Перечисления.ХозяйственныеОперации.ПереносПретензииНаАвансы);
	ЗначенияДляПолучения.Вставить("ПереносПретензииНаРасчеты", Перечисления.ХозяйственныеОперации.ПереносПретензииНаРасчеты);
	ЗначенияДляПолучения.Вставить("ПереоценкаДенежныхСредств", Перечисления.ХозяйственныеОперации.ПереоценкаДенежныхСредств);
	ЗначенияДляПолучения.Вставить("ПереоценкаНМА", Перечисления.ХозяйственныеОперации.ПереоценкаНМА);
	ЗначенияДляПолучения.Вставить("ПереоценкаОС", Перечисления.ХозяйственныеОперации.ПереоценкаОС);
	ЗначенияДляПолучения.Вставить("ПереоценкаРасчетовСКлиентами", Перечисления.ХозяйственныеОперации.ПереоценкаРасчетовСКлиентами);
	ЗначенияДляПолучения.Вставить("ПереоценкаРасчетовСПоставщиками", Перечисления.ХозяйственныеОперации.ПереоценкаРасчетовСПоставщиками);
	ЗначенияДляПолучения.Вставить("ПереоценкаРезервовПоСомнительнымДолгам", Перечисления.ХозяйственныеОперации.ПереоценкаРезервовПоСомнительнымДолгам);
	ЗначенияДляПолучения.Вставить("ПереоценкаФинансовыхИнструментов", Перечисления.ХозяйственныеОперации.ПереоценкаФинансовыхИнструментов);
	ЗначенияДляПолучения.Вставить("ПересортицаТоваров", Перечисления.ХозяйственныеОперации.ПересортицаТоваров);
	ЗначенияДляПолучения.Вставить("ПересортицаТоваровСПереоценкой", Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой);
	ЗначенияДляПолучения.Вставить("ПеречислениеВБюджет", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	ЗначенияДляПолучения.Вставить("ПеречислениеДенежныхСредствНаДругойСчет", Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет);
	ЗначенияДляПолучения.Вставить("ПеречислениеНаДепозиты", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
	ЗначенияДляПолучения.Вставить("ПеречислениеТаможне", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	ЗначенияДляПолучения.Вставить("ПланированиеПоЗаказуКлиента", Перечисления.ХозяйственныеОперации.ПланированиеПоЗаказуКлиента);
	ЗначенияДляПолучения.Вставить("ПланированиеПоЗаказуПоставщику", Перечисления.ХозяйственныеОперации.ПланированиеПоЗаказуПоставщику);
	ЗначенияДляПолучения.Вставить("ПланированиеПоЗаявке", Перечисления.ХозяйственныеОперации.ПланированиеПоЗаявке);
	ЗначенияДляПолучения.Вставить("ПланированиеПоСчету", Перечисления.ХозяйственныеОперации.ПланированиеПоСчету);
	ЗначенияДляПолучения.Вставить("ПогашениеЗадолженностиКлиента", Перечисления.ХозяйственныеОперации.ПогашениеЗадолженностиКлиента);
	ЗначенияДляПолучения.Вставить("ПогашениеЗадолженностиПоставщику", Перечисления.ХозяйственныеОперации.ПогашениеЗадолженностиПоставщику);
	ЗначенияДляПолучения.Вставить("ПогашениеЗаймаСотрудником", Перечисления.ХозяйственныеОперации.ПогашениеЗаймаСотрудником);
	ЗначенияДляПолучения.Вставить("ПодготовкаКПередачеНМА", Перечисления.ХозяйственныеОперации.ПодготовкаКПередачеНМА);
	ЗначенияДляПолучения.Вставить("ПодготовкаКПередачеОС", Перечисления.ХозяйственныеОперации.ПодготовкаКПередачеОС);
	ЗначенияДляПолучения.Вставить("ПокупкаПолученнойВозвратнойТары", Перечисления.ХозяйственныеОперации.ПокупкаПолученнойВозвратнойТары);
	ЗначенияДляПолучения.Вставить("ПорчаТоваров", Перечисления.ХозяйственныеОперации.ПорчаТоваров);
	ЗначенияДляПолучения.Вставить("ПорчаТоваровСПереоценкой", Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой);
	ЗначенияДляПолучения.Вставить("ПоступлениеАрендованныхОС", Перечисления.ХозяйственныеОперации.ПоступлениеАрендованныхОС);
	ЗначенияДляПолучения.Вставить("ПоступлениеДенежныхДокументовОтПодотчетника", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПодотчетника);
	ЗначенияДляПолучения.Вставить("ПоступлениеДенежныхДокументовОтПоставщика", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПоставщика);
	ЗначенияДляПолучения.Вставить("ПоступлениеДенежныхСредствИзБанка", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка);
	ЗначенияДляПолучения.Вставить("ПоступлениеДенежныхСредствИзДругойКассы", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы);
	ЗначенияДляПолучения.Вставить("ПоступлениеДенежныхСредствИзДругойОрганизации", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации);
	ЗначенияДляПолучения.Вставить("ПоступлениеДенежныхСредствИзКассыККМ", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыККМ);
	ЗначенияДляПолучения.Вставить("ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет);
	ЗначенияДляПолучения.Вставить("ПоступлениеДенежныхСредствОтКонвертацииВалюты", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствОтКонвертацииВалюты);
	ЗначенияДляПолучения.Вставить("ПоступлениеДенежныхСредствПоДепозитам", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам);
	ЗначенияДляПолучения.Вставить("ПоступлениеДенежныхСредствПоЗаймамВыданным", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным);
	ЗначенияДляПолучения.Вставить("ПоступлениеДенежныхСредствПоКредитам", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам);
	ЗначенияДляПолучения.Вставить("ПоступлениеДенежныхСредствСДругогоСчета", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета);
	ЗначенияДляПолучения.Вставить("ПоступлениеЗатрат", Перечисления.ХозяйственныеОперации.ПоступлениеЗатрат);
	ЗначенияДляПолучения.Вставить("ПоступлениеИзПроизводства", Перечисления.ХозяйственныеОперации.ПоступлениеИзПроизводства);
	ЗначенияДляПолучения.Вставить("ПоступлениеНМА", Перечисления.ХозяйственныеОперации.ПоступлениеНМА);
	ЗначенияДляПолучения.Вставить("ПоступлениеОбъектовСтроительства", Перечисления.ХозяйственныеОперации.ПоступлениеОбъектовСтроительства);
	ЗначенияДляПолучения.Вставить("ПоступлениеОплатыОтКлиента", Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
	ЗначенияДляПолучения.Вставить("ПоступлениеОплатыОтКлиентаПоПлатежнойКарте", Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиентаПоПлатежнойКарте);
	ЗначенияДляПолучения.Вставить("ПоступлениеОплатыПоПлатежнойКарте", Перечисления.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте);
	ЗначенияДляПолучения.Вставить("ПоступлениеОС", Перечисления.ХозяйственныеОперации.ПоступлениеОС);
	ЗначенияДляПолучения.Вставить("ПоступлениеОтДавальца", Перечисления.ХозяйственныеОперации.ПоступлениеОтДавальца);
	ЗначенияДляПолучения.Вставить("ПоступлениеОтПереработчика", Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчика);
	ЗначенияДляПолучения.Вставить("ПоступлениеОтПереработчикаФиксированнаяСтоимость", Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчикаФиксированнаяСтоимость);
	ЗначенияДляПолучения.Вставить("ПоступлениеПредметовЛизинга", Перечисления.ХозяйственныеОперации.ПоступлениеПредметовЛизинга);
	ЗначенияДляПолучения.Вставить("ПоступлениеПроцентовПоЗаймамВыданным", Перечисления.ХозяйственныеОперации.ПоступлениеПроцентовПоЗаймамВыданным);
	ЗначенияДляПолучения.Вставить("ПоступлениеПрочихАктивов", Перечисления.ХозяйственныеОперации.ПоступлениеПрочихАктивов);
	ЗначенияДляПолучения.Вставить("ПоступлениеПрочихУслуг", Перечисления.ХозяйственныеОперации.ПоступлениеПрочихУслуг);
	ЗначенияДляПолучения.Вставить("ПоступлениеУслуг", Перечисления.ХозяйственныеОперации.ПоступлениеУслуг);
	ЗначенияДляПолучения.Вставить("ПоступлениеУслугДляПроизводства", Перечисления.ХозяйственныеОперации.ПоступлениеУслугДляПроизводства);
	ЗначенияДляПолучения.Вставить("ПоступлениеУслугРеглУчет", Перечисления.ХозяйственныеОперации.ПоступлениеУслугРеглУчет);
	ЗначенияДляПолучения.Вставить("ПриемНаКомиссию", Перечисления.ХозяйственныеОперации.ПриемНаКомиссию);
	ЗначенияДляПолучения.Вставить("ПриемНаХранениеСПравомПродажи", Перечисления.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи);
	ЗначенияДляПолучения.Вставить("ПриемПередачаРаботМеждуПодразделениями", Перечисления.ХозяйственныеОперации.ПриемПередачаРаботМеждуПодразделениями);
	ЗначенияДляПолучения.Вставить("ПриемПередачаРаботМеждуФилиалами", Перечисления.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами);
	ЗначенияДляПолучения.Вставить("ПризнаниеВНУЛизинговыхПлатежей", Перечисления.ХозяйственныеОперации.ПризнаниеВНУЛизинговыхПлатежей);
	ЗначенияДляПолучения.Вставить("ПринятиеКУчетуНМА", Перечисления.ХозяйственныеОперации.ПринятиеКУчетуНМА);
	ЗначенияДляПолучения.Вставить("ПринятиеКУчетуНМАпоИнвентаризации", Перечисления.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации);
	ЗначенияДляПолучения.Вставить("ПринятиеКУчетуОС", Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОС);
	ЗначенияДляПолучения.Вставить("ПринятиеКУчетуОСПоДоговоруЛизинга", Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга);
	ЗначенияДляПолучения.Вставить("ПринятиеКУчетуОСпоИнвентаризации", Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации);
	ЗначенияДляПолучения.Вставить("ПринятиеКУчетуСамортизированногоОС", Перечисления.ХозяйственныеОперации.ПринятиеКУчетуСамортизированногоОС);
	ЗначенияДляПолучения.Вставить("ПринятиеНДСкВычету", Перечисления.ХозяйственныеОперации.ПринятиеНДСкВычету);
	ЗначенияДляПолучения.Вставить("ПриобретениеУслугПоЛизингу", Перечисления.ХозяйственныеОперации.ПриобретениеУслугПоЛизингу);
	ЗначенияДляПолучения.Вставить("ПрисоединениеРезервовПоСомнительнымДолгамКДоходам", Перечисления.ХозяйственныеОперации.ПрисоединениеРезервовПоСомнительнымДолгамКДоходам);
	ЗначенияДляПолучения.Вставить("ПрисоединениеРезервовПоСомнительнымДолгамКРасходам", Перечисления.ХозяйственныеОперации.ПрисоединениеРезервовПоСомнительнымДолгамКРасходам);
	ЗначенияДляПолучения.Вставить("ПроизводствоИзДавальческогоСырья", Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья);
	ЗначенияДляПолучения.Вставить("ПроизводствоУПереработчика", Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика);
	ЗначенияДляПолучения.Вставить("ПрочаяВыдачаДенежныхСредств", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	ЗначенияДляПолучения.Вставить("ПрочееНачислениеНДС", Перечисления.ХозяйственныеОперации.ПрочееНачислениеНДС);
	ЗначенияДляПолучения.Вставить("ПрочееПоступлениеДенежныхСредств", Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	ЗначенияДляПолучения.Вставить("ПрочиеДоходы", Перечисления.ХозяйственныеОперации.ПрочиеДоходы);
	ЗначенияДляПолучения.Вставить("ПрочиеДоходыАктивыПассивы", Перечисления.ХозяйственныеОперации.ПрочиеДоходыАктивыПассивы);
	ЗначенияДляПолучения.Вставить("ПрочиеРасходы", Перечисления.ХозяйственныеОперации.ПрочиеРасходы);
	ЗначенияДляПолучения.Вставить("ПрочиеРасходыАктивыПассивы", Перечисления.ХозяйственныеОперации.ПрочиеРасходыАктивыПассивы);
	ЗначенияДляПолучения.Вставить("ПрочиеРасходыПодотчетногоЛица", Перечисления.ХозяйственныеОперации.ПрочиеРасходыПодотчетногоЛица);
	ЗначенияДляПолучения.Вставить("РазборкаТоваров", Перечисления.ХозяйственныеОперации.РазборкаТоваров);
	ЗначенияДляПолучения.Вставить("РазукомплектацияОС", Перечисления.ХозяйственныеОперации.РазукомплектацияОС);
	ЗначенияДляПолучения.Вставить("РаспределениеДоходовПоНаправлениямДеятельности", Перечисления.ХозяйственныеОперации.РаспределениеДоходовПоНаправлениямДеятельности);
	ЗначенияДляПолучения.Вставить("РаспределениеНДС", Перечисления.ХозяйственныеОперации.РаспределениеНДС);
	ЗначенияДляПолучения.Вставить("РаспределениеНормируемыхРасходовПоНУ", Перечисления.ХозяйственныеОперации.РаспределениеНормируемыхРасходовПоНУ);
	ЗначенияДляПолучения.Вставить("РаспределениеРасходовНаПартииПроизводства", Перечисления.ХозяйственныеОперации.РаспределениеРасходовНаПартииПроизводства);
	ЗначенияДляПолучения.Вставить("РаспределениеРасходовНаСебестоимость", Перечисления.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимость);
	ЗначенияДляПолучения.Вставить("РаспределениеРасходовПоНаправлениямДеятельности", Перечисления.ХозяйственныеОперации.РаспределениеРасходовПоНаправлениямДеятельности);
	ЗначенияДляПолучения.Вставить("РаспределениеРБП", Перечисления.ХозяйственныеОперации.РаспределениеРБП);
	ЗначенияДляПолучения.Вставить("РасходыНаТаможенныеСборыШтрафы", Перечисления.ХозяйственныеОперации.РасходыНаТаможенныеСборыШтрафы);
	ЗначенияДляПолучения.Вставить("РасходыОтПереоценкиТоваров", Перечисления.ХозяйственныеОперации.РасходыОтПереоценкиТоваров);
	ЗначенияДляПолучения.Вставить("РасходыОтСписанияАктиваСОтложеннымПереходомПрав", Перечисления.ХозяйственныеОперации.РасходыОтСписанияАктиваСОтложеннымПереходомПрав);
	ЗначенияДляПолучения.Вставить("РеализацияБезПереходаПраваСобственности", Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности);
	ЗначенияДляПолучения.Вставить("РеализацияВнеоборотныхАктивов", Перечисления.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов);
	ЗначенияДляПолучения.Вставить("РеализацияВРозницу", Перечисления.ХозяйственныеОперации.РеализацияВРозницу);
	ЗначенияДляПолучения.Вставить("РеализацияКлиенту", Перечисления.ХозяйственныеОперации.РеализацияКлиенту);
	ЗначенияДляПолучения.Вставить("РеализацияКлиентуРеглУчет", Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет);
	ЗначенияДляПолучения.Вставить("РеализацияКомиссионногоТовара", Перечисления.ХозяйственныеОперации.РеализацияКомиссионногоТовара);
	ЗначенияДляПолучения.Вставить("РеализацияНМА", Перечисления.ХозяйственныеОперации.РеализацияНМА);
	ЗначенияДляПолучения.Вставить("РеализацияОС", Перечисления.ХозяйственныеОперации.РеализацияОС);
	ЗначенияДляПолучения.Вставить("РеализацияОСсОтложеннымПереходомПрав", Перечисления.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав);
	ЗначенияДляПолучения.Вставить("РеализацияПереданнойВозвратнойТары", Перечисления.ХозяйственныеОперации.РеализацияПереданнойВозвратнойТары);
	ЗначенияДляПолучения.Вставить("РеализацияПерепоставленногоТовара", Перечисления.ХозяйственныеОперации.РеализацияПерепоставленногоТовара);
	ЗначенияДляПолучения.Вставить("РеализацияПодарочныхСертификатов", Перечисления.ХозяйственныеОперации.РеализацияПодарочныхСертификатов);
	ЗначенияДляПолучения.Вставить("РеализацияПрочихАктивов", Перечисления.ХозяйственныеОперации.РеализацияПрочихАктивов);
	ЗначенияДляПолучения.Вставить("РеализацияПрочихУслуг", Перечисления.ХозяйственныеОперации.РеализацияПрочихУслуг);
	ЗначенияДляПолучения.Вставить("РеализацияТоваровВДругуюОрганизацию", Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	ЗначенияДляПолучения.Вставить("РегистрацияЗемельныхУчастков", Перечисления.ХозяйственныеОперации.РегистрацияЗемельныхУчастков);
	ЗначенияДляПолучения.Вставить("РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество", Перечисления.ХозяйственныеОперации.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество);
	ЗначенияДляПолучения.Вставить("РегистрацияРасходовУУ", Перечисления.ХозяйственныеОперации.РегистрацияРасходовУУ);
	ЗначенияДляПолучения.Вставить("РегистрацияСдельныхРабот", Перечисления.ХозяйственныеОперации.РегистрацияСдельныхРабот);
	ЗначенияДляПолучения.Вставить("РегистрацияТранспортныхСредств", Перечисления.ХозяйственныеОперации.РегистрацияТранспортныхСредств);
	ЗначенияДляПолучения.Вставить("РезервированиеАвансаКлиента", Перечисления.ХозяйственныеОперации.РезервированиеАвансаКлиента);
	ЗначенияДляПолучения.Вставить("РеклассификацияДоходов", Перечисления.ХозяйственныеОперации.РеклассификацияДоходов);
	ЗначенияДляПолучения.Вставить("РеклассификацияРасходов", Перечисления.ХозяйственныеОперации.РеклассификацияРасходов);
	ЗначенияДляПолучения.Вставить("Ремонт", Перечисления.ХозяйственныеОперации.Ремонт);
	ЗначенияДляПолучения.Вставить("СборкаТоваров", Перечисления.ХозяйственныеОперации.СборкаТоваров);
	ЗначенияДляПолучения.Вставить("СдачаДенежныхСредствВБанк", Перечисления.ХозяйственныеОперации.СдачаДенежныхСредствВБанк);
	ЗначенияДляПолучения.Вставить("СебестоимостьРеализацииНМА", Перечисления.ХозяйственныеОперации.СебестоимостьРеализацииНМА);
	ЗначенияДляПолучения.Вставить("СебестоимостьРеализацииОС", Перечисления.ХозяйственныеОперации.СебестоимостьРеализацииОС);
	ЗначенияДляПолучения.Вставить("СнятиеНаличныхДенежныхСредств", Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств);
	ЗначенияДляПолучения.Вставить("СобственноеПроизводство", Перечисления.ХозяйственныеОперации.СобственноеПроизводство);
	ЗначенияДляПолучения.Вставить("СписаниеАмортизацииНМА", Перечисления.ХозяйственныеОперации.СписаниеАмортизацииНМА);
	ЗначенияДляПолучения.Вставить("СписаниеАмортизацииОС", Перечисления.ХозяйственныеОперации.СписаниеАмортизацииОС);
	ЗначенияДляПолучения.Вставить("СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам", Перечисления.ХозяйственныеОперации.СписаниеБезнадежнойЗадолженностиЗаСчетРезервовПоСомнительнымДолгам);
	ЗначенияДляПолучения.Вставить("СписаниеДебиторскойЗадолженности", Перечисления.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности);
	ЗначенияДляПолучения.Вставить("СписаниеДебиторскойЗадолженностиНаАктивыПассивы", Перечисления.ХозяйственныеОперации.СписаниеДебиторскойЗадолженностиНаАктивыПассивы);
	ЗначенияДляПолучения.Вставить("СписаниеДебиторскойЗадолженностиНаРасходы", Перечисления.ХозяйственныеОперации.СписаниеДебиторскойЗадолженностиНаРасходы);
	ЗначенияДляПолучения.Вставить("СписаниеДенежныхДокументов", Перечисления.ХозяйственныеОперации.СписаниеДенежныхДокументов);
	ЗначенияДляПолучения.Вставить("СписаниеИзЭксплуатации", Перечисления.ХозяйственныеОперации.СписаниеИзЭксплуатации);
	ЗначенияДляПолучения.Вставить("СписаниеКосвенныхРасходов", Перечисления.ХозяйственныеОперации.СписаниеКосвенныхРасходов);
	ЗначенияДляПолучения.Вставить("СписаниеКредиторскойЗадолженности", Перечисления.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности);
	ЗначенияДляПолучения.Вставить("СписаниеКредиторскойЗадолженностиВДоходы", Перечисления.ХозяйственныеОперации.СписаниеКредиторскойЗадолженностиВДоходы);
	ЗначенияДляПолучения.Вставить("СписаниеНаРасходыНИОКР", Перечисления.ХозяйственныеОперации.СписаниеНаРасходыНИОКР);
	ЗначенияДляПолучения.Вставить("СписаниеНаРасходыНИОКРВДругуюОрганизацию", Перечисления.ХозяйственныеОперации.СписаниеНаРасходыНИОКРВДругуюОрганизацию);
	ЗначенияДляПолучения.Вставить("СписаниеНаРасходыНИОКРИзДругойОрганизации", Перечисления.ХозяйственныеОперации.СписаниеНаРасходыНИОКРИзДругойОрганизации);
	ЗначенияДляПолучения.Вставить("СписаниеНаРасходыСтоимостиОСНеПринимаяКУчету", Перечисления.ХозяйственныеОперации.СписаниеНаРасходыСтоимостиОСНеПринимаяКУчету);
	ЗначенияДляПолучения.Вставить("СписаниеНДСНаРасходы", Перечисления.ХозяйственныеОперации.СписаниеНДСНаРасходы);
	ЗначенияДляПолучения.Вставить("СписаниеНМА", Перечисления.ХозяйственныеОперации.СписаниеНМА);
	ЗначенияДляПолучения.Вставить("СписаниеОС", Перечисления.ХозяйственныеОперации.СписаниеОС);
	ЗначенияДляПолучения.Вставить("СписаниеОСпоИнвентаризации", Перечисления.ХозяйственныеОперации.СписаниеОСпоИнвентаризации);
	ЗначенияДляПолучения.Вставить("СписаниеОшибокОкругления", Перечисления.ХозяйственныеОперации.СписаниеОшибокОкругления);
	ЗначенияДляПолучения.Вставить("СписаниеОшибокОкругленияВозвратныеОтходы", Перечисления.ХозяйственныеОперации.СписаниеОшибокОкругленияВозвратныеОтходы);
	ЗначенияДляПолучения.Вставить("СписаниеПринятыхТоваровЗаСчетПоклажедателя", Перечисления.ХозяйственныеОперации.СписаниеПринятыхТоваровЗаСчетПоклажедателя);
	ЗначенияДляПолучения.Вставить("СписаниеПринятыхТоваровНаРасходы", Перечисления.ХозяйственныеОперации.СписаниеПринятыхТоваровНаРасходы);
	ЗначенияДляПолучения.Вставить("СписаниеПрочихДоходов", Перечисления.ХозяйственныеОперации.СписаниеПрочихДоходов);
	ЗначенияДляПолучения.Вставить("СписаниеПрочихРасходов", Перечисления.ХозяйственныеОперации.СписаниеПрочихРасходов);
	ЗначенияДляПолучения.Вставить("СписаниеРасходовЗаСчетРезервов", Перечисления.ХозяйственныеОперации.СписаниеРасходовЗаСчетРезервов);
	ЗначенияДляПолучения.Вставить("СписаниеРасходовНаПартииПроизводства", Перечисления.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства);
	ЗначенияДляПолучения.Вставить("СписаниеРезерваПереоценкиАмортизацииНМА", Перечисления.ХозяйственныеОперации.СписаниеРезерваПереоценкиАмортизацииНМА);
	ЗначенияДляПолучения.Вставить("СписаниеРезерваПереоценкиАмортизацииОС", Перечисления.ХозяйственныеОперации.СписаниеРезерваПереоценкиАмортизацииОС);
	ЗначенияДляПолучения.Вставить("СписаниеРезерваПереоценкиСтоимостиНМА", Перечисления.ХозяйственныеОперации.СписаниеРезерваПереоценкиСтоимостиНМА);
	ЗначенияДляПолучения.Вставить("СписаниеРезерваПереоценкиСтоимостиОС", Перечисления.ХозяйственныеОперации.СписаниеРезерваПереоценкиСтоимостиОС);
	ЗначенияДляПолучения.Вставить("СписаниеРезервовПредстоящихРасходов", Перечисления.ХозяйственныеОперации.СписаниеРезервовПредстоящихРасходов);
	ЗначенияДляПолучения.Вставить("СписаниеСтоимостиНМА", Перечисления.ХозяйственныеОперации.СписаниеСтоимостиНМА);
	ЗначенияДляПолучения.Вставить("СписаниеСтоимостиОС", Перечисления.ХозяйственныеОперации.СписаниеСтоимостиОС);
	ЗначенияДляПолучения.Вставить("СписаниеТоваров", Перечисления.ХозяйственныеОперации.СписаниеТоваров);
	ЗначенияДляПолучения.Вставить("СписаниеТоваровПоТребованию", Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию);
	ЗначенияДляПолучения.Вставить("СписаниеТоваровУХранителя", Перечисления.ХозяйственныеОперации.СписаниеТоваровУХранителя);
	ЗначенияДляПолучения.Вставить("СторнированиеПрочихДоходов", Перечисления.ХозяйственныеОперации.СторнированиеПрочихДоходов);
	ЗначенияДляПолучения.Вставить("СторнированиеПрочихРасходов", Перечисления.ХозяйственныеОперации.СторнированиеПрочихРасходов);
	ЗначенияДляПолучения.Вставить("СторнированиеРасходовУУ", Перечисления.ХозяйственныеОперации.СторнированиеРасходовУУ);
	ЗначенияДляПолучения.Вставить("СторноПереданнойТары", Перечисления.ХозяйственныеОперации.СторноПереданнойТары);
	ЗначенияДляПолучения.Вставить("СторноПереданнойТарыВозвратНаДругойСклад", Перечисления.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад);
	ЗначенияДляПолучения.Вставить("СторноПоступления", Перечисления.ХозяйственныеОперации.СторноПоступления);
	ЗначенияДляПолучения.Вставить("СторноРеализации", Перечисления.ХозяйственныеОперации.СторноРеализации);
	ЗначенияДляПолучения.Вставить("СторноРеализацииВозвратНаДругойСклад", Перечисления.ХозяйственныеОперации.СторноРеализацииВозвратНаДругойСклад);
	ЗначенияДляПолучения.Вставить("СторноСписанияНаРасходы", Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы);
	ЗначенияДляПолучения.Вставить("УвеличениеНакопленнойАмортизацииНМА", Перечисления.ХозяйственныеОперации.УвеличениеНакопленнойАмортизацииНМА);
	ЗначенияДляПолучения.Вставить("УвеличениеНакопленнойАмортизацииОС", Перечисления.ХозяйственныеОперации.УвеличениеНакопленнойАмортизацииОС);
	ЗначенияДляПолучения.Вставить("УвеличениеСтоимостиНМА", Перечисления.ХозяйственныеОперации.УвеличениеСтоимостиНМА);
	ЗначенияДляПолучения.Вставить("УвеличениеСтоимостиОС", Перечисления.ХозяйственныеОперации.УвеличениеСтоимостиОС);
	ЗначенияДляПолучения.Вставить("УдалитьСписаниеТоваровПереданныхПартнерам", Перечисления.ХозяйственныеОперации.УдалитьСписаниеТоваровПереданныхПартнерам);
	ЗначенияДляПолучения.Вставить("УдержаниеВознагражденияКомиссионера", Перечисления.ХозяйственныеОперации.УдержаниеВознагражденияКомиссионера);
	ЗначенияДляПолучения.Вставить("УдержаниеВознагражденияКомитентом", Перечисления.ХозяйственныеОперации.УдержаниеВознагражденияКомитентом);
	ЗначенияДляПолучения.Вставить("УдержаниеИзЗарплатыВСчетРеализацииСотруднику", Перечисления.ХозяйственныеОперации.УдержаниеИзЗарплатыВСчетРеализацииСотруднику);
	ЗначенияДляПолучения.Вставить("УдержаниеИзЗарплатыСотрудника", Перечисления.ХозяйственныеОперации.УдержаниеИзЗарплатыСотрудника);
	ЗначенияДляПолучения.Вставить("УдержаниеНеизрасходованныхПодотчетныхСумм", Перечисления.ХозяйственныеОперации.УдержаниеНеизрасходованныхПодотчетныхСумм);
	ЗначенияДляПолучения.Вставить("УменьшениеВеличиныДооценкиНакопленнойАмортизацииНМА", Перечисления.ХозяйственныеОперации.УменьшениеВеличиныДооценкиНакопленнойАмортизацииНМА);
	ЗначенияДляПолучения.Вставить("УменьшениеВеличиныДооценкиНакопленнойАмортизацииОС", Перечисления.ХозяйственныеОперации.УменьшениеВеличиныДооценкиНакопленнойАмортизацииОС);
	ЗначенияДляПолучения.Вставить("УменьшениеВеличиныДооценкиСтоимостиНМА", Перечисления.ХозяйственныеОперации.УменьшениеВеличиныДооценкиСтоимостиНМА);
	ЗначенияДляПолучения.Вставить("УменьшениеВеличиныДооценкиСтоимостиОС", Перечисления.ХозяйственныеОперации.УменьшениеВеличиныДооценкиСтоимостиОС);
	ЗначенияДляПолучения.Вставить("УменьшениеНакопленнойАмортизацииНМА", Перечисления.ХозяйственныеОперации.УменьшениеНакопленнойАмортизацииНМА);
	ЗначенияДляПолучения.Вставить("УменьшениеНакопленнойАмортизацииОС", Перечисления.ХозяйственныеОперации.УменьшениеНакопленнойАмортизацииОС);
	ЗначенияДляПолучения.Вставить("УменьшениеСтоимостиНМА", Перечисления.ХозяйственныеОперации.УменьшениеСтоимостиНМА);
	ЗначенияДляПолучения.Вставить("УменьшениеСтоимостиОС", Перечисления.ХозяйственныеОперации.УменьшениеСтоимостиОС);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ХозяйственныеОперацииВВидыОперацийКомплектации.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ХозяйственныеОперацииВВидыОперацийКомплектации";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
	ПравилоКонвертации.ТипXDTO   = "ВидыОперацийКомплектацияНоменклатуры";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РазборкаТоваров, "Разукомплектация");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СборкаТоваров, "Комплектация");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Разукомплектация", Перечисления.ХозяйственныеОперации.РазборкаТоваров);
	ЗначенияДляПолучения.Вставить("Комплектация", Перечисления.ХозяйственныеОперации.СборкаТоваров);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ХозяйственныеОперацииВВидыОперацийПоПлатежнойКарте.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ХозяйственныеОперацииВВидыОперацийПоПлатежнойКарте";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
	ПравилоКонвертации.ТипXDTO   = "ВидыОперацийПоПлатежнойКарте";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту, "ВозвратОплатыКлиентуНаПлатежнуюКарту");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента, "ОплатаОтКлиентаПлатежнойКартой");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("ВозвратОплатыКлиентуНаПлатежнуюКарту", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	ЗначенияДляПолучения.Вставить("ОплатаОтКлиентаПлатежнойКартой", Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

	// ХозяйственныеОперацииВВидыСборки.
	ПравилоКонвертации           = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.ИмяПКПД   = "ХозяйственныеОперацииВВидыСборки";
	ПравилоКонвертации.ТипДанных = Метаданные.Перечисления.ХозяйственныеОперации;
	ПравилоКонвертации.ТипXDTO   = "ВидыОперацийСборкаТоваров";

	ЗначенияДляОтправки = Новый Соответствие;
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.РазборкаТоваров, "Разборка");
	ЗначенияДляОтправки.Вставить(Перечисления.ХозяйственныеОперации.СборкаТоваров, "Сборка");
	ПравилоКонвертации.КонвертацииЗначенийПриОтправке = ЗначенияДляОтправки;
	ЗначенияДляПолучения = Новый Соответствие;
	ЗначенияДляПолучения.Вставить("Разборка", Перечисления.ХозяйственныеОперации.РазборкаТоваров);
	ЗначенияДляПолучения.Вставить("Сборка", Перечисления.ХозяйственныеОперации.СборкаТоваров);
	ПравилоКонвертации.КонвертацииЗначенийПриПолучении = ЗначенияДляПолучения;

КонецПроцедуры
