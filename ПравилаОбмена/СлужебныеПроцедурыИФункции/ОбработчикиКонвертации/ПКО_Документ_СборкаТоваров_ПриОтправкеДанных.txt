Процедура ПКО_Документ_СборкаТоваров_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	СкладДляВыгрузки = СкладДляВыгрузки(ДанныеИБ.Склад, КомпонентыОбмена.ПараметрыКонвертации);
	ДанныеXDTO.Вставить("Склад", СкладДляВыгрузки);
	
	Если ЗначениеЗаполнено(ДанныеИБ.Характеристика)
		И ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.6") Тогда
	
		ВладелецХарактеристики = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.Характеристика, "Владелец");
		ВидНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.Номенклатура, "ВидНоменклатуры");
		
		Инструкция = Новый Структура;
		Если ВладелецХарактеристики = ДанныеИБ.Номенклатура
			Или (ВладелецХарактеристики = ВидНоменклатуры
			И ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.7")) Тогда
			
			Инструкция.Вставить("Значение", ДанныеИБ.Характеристика);
			Инструкция.Вставить("ИмяПКО",   "Справочник_ХарактеристикиНоменклатуры");	
		Иначе
		    Инструкция.Вставить("ИмяПКО", "Справочник_ХарактеристикиНоменклатуры_ИзСтруктуры");
		    
		    Характеристика = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
				ДанныеИБ.Характеристика, "Наименование, НаименованиеПолное");
		    
			Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) = ВерсияФорматаЧислом("1.6") Тогда
				Характеристика.Вставить("Владелец", ДанныеИБ.Номенклатура);
			Иначе
		        Характеристика.Вставить("Владелец", ВидНоменклатуры);
		    КонецЕсли;
			
			Инструкция.Вставить("Значение", Характеристика);
					
			ПравилоОбработки = КомпонентыОбмена.ПравилаОбработкиДанных.Найти("Справочник_ХарактеристикиНоменклатуры_Отправка", "Имя");
			Если Не ПравилоОбработки = Неопределено Тогда
				RM_ОбменДаннымиXDTOСервер.ВыгрузкаОбъектаВыборки(КомпонентыОбмена, Характеристика, ПравилоОбработки);
			КонецЕсли;
			
		КонецЕсли;
		
		ДанныеXDTO.Вставить("Характеристика", Инструкция);		
	КонецЕсли;
	
	ВыгрузитьПодразделениеИзРеквизитаДокумента(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, "Склад");
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	ТекстЗапроса = "ВЫБРАТЬ
		|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка = &НоменклатураСсылка";
	
	Если ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров Тогда
		
		ДанныеXDTO.Вставить("ВидОперации", "Сборка");
		ДанныеXDTO.Вставить("ТипЗапасов",  "СобственныеТовары");
		
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() +
			"ВЫБРАТЬ
			|	СборкаТоваровТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
			|	СУММА(СборкаТоваровТовары.ДоляСтоимости) КАК ДоляСтоимости,
			|	СУММА(СборкаТоваровТовары.Количество) КАК Количество
			|ПОМЕСТИТЬ втТовары
			|ИЗ
			|	Документ.СборкаТоваров.Товары КАК СборкаТоваровТовары
			|ГДЕ
			|	СборкаТоваровТовары.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	СборкаТоваровТовары.АналитикаУчетаНоменклатуры
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(КлючиАналитикиУчетаНоменклатуры.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
			|	ЕСТЬNULL(СпрНоменклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
			|	&ТекстЗапросаХарактеристика,
			|	&ТекстЗапросаСерия,
			|	ВидыЗапасов.Количество КАК Количество,
			|	ЕСТЬNULL(НомераГТД.Код, """") КАК НомерГТД,
			|	ЕСТЬNULL(НомераГТД.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
			|	ВЫРАЗИТЬ(втТовары.ДоляСтоимости / втТовары.Количество * ВидыЗапасов.Количество КАК ЧИСЛО(10, 0)) КАК ДоляСтоимости,
			|	ВЫБОР
			|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
			|			ТОГДА ВЫРАЗИТЬ(""КомиссионныеТовары"" КАК СТРОКА(18))
			|		ИНАЧЕ ВЫРАЗИТЬ(""СобственныеТовары"" КАК СТРОКА(18))
			|	КОНЕЦ КАК ТипЗапасов
			|ИЗ
			|	Документ.СборкаТоваров.ВидыЗапасовСписание КАК ВидыЗапасов
			|		ЛЕВОЕ СОЕДИНЕНИЕ втТовары КАК втТовары
			|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = втТовары.АналитикаУчетаНоменклатуры
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
			|		ПО ВидыЗапасов.НомерГТД = НомераГТД.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
			|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
			|		ПО (КлючиАналитикиУчетаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка)
			|ГДЕ
			|	ВидыЗапасов.Ссылка = &Ссылка";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаХарактеристика",
			ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "КлючиАналитикиУчетаНоменклатуры"));
			
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаСерия",
			ПолучитьТекстЗапросаСерии(КомпонентыОбмена, "КлючиАналитикиУчетаНоменклатуры"));
		
	Иначе
		
		ДанныеXDTO.Вставить("ВидОперации", "Разборка");
		
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() +
			"ВЫБРАТЬ
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Характеристика КАК Характеристика,
			|	СУММА(Товары.Количество) КАК Количество,
			|	СУММА(Товары.ДоляСтоимости) КАК ДоляСтоимости,
			|	Товары.Серия КАК Серия,
			|	Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
			|ПОМЕСТИТЬ втТовары
			|ИЗ
			|	Документ.СборкаТоваров.Товары КАК Товары
			|ГДЕ
			|	Товары.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	Товары.Серия,
			|	Товары.Номенклатура,
			|	Товары.АналитикаУчетаНоменклатуры,
			|	Товары.Характеристика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
			|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	&ТекстЗапросаХарактеристика,
			|	&ТекстЗапросаСерия,
			|	ВидыЗапасов.Количество КАК Количество,
			|	ВидыЗапасов.НомерГТД.Код КАК НомерГТД,
			|	ВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
			|	ВЫРАЗИТЬ(втТовары.ДоляСтоимости * ВидыЗапасов.Количество / втТовары.Количество КАК ЧИСЛО(10, 0)) КАК ДоляСтоимости,
			|	ВЫБОР
			|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
			|			ТОГДА ВЫРАЗИТЬ(""КомиссионныеТовары"" КАК СТРОКА(18))
			|		ИНАЧЕ ВЫРАЗИТЬ(""СобственныеТовары"" КАК СТРОКА(18))
			|	КОНЕЦ КАК ТипЗапасов
			|ИЗ
			|	втТовары КАК втТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.ВидыЗапасовОприходование КАК ВидыЗапасов
			|		ПО втТовары.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
			|ГДЕ
			|	ВидыЗапасов.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ВЫБОР
			|		КОГДА ВидыЗапасовСписание.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
			|			ТОГДА ВЫРАЗИТЬ(""КомиссионныеТовары"" КАК СТРОКА(18))
			|		ИНАЧЕ ВЫРАЗИТЬ(""СобственныеТовары"" КАК СТРОКА(18))
			|	КОНЕЦ КАК ТипЗапасов
			|ИЗ
			|	Документ.СборкаТоваров.ВидыЗапасовСписание КАК ВидыЗапасовСписание
			|ГДЕ
			|	ВидыЗапасовСписание.Ссылка = &Ссылка";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаХарактеристика",
			ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "ВидыЗапасов.АналитикаУчетаНоменклатуры"));
			
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаСерия",
			ПолучитьТекстЗапросаСерии(КомпонентыОбмена, "ВидыЗапасов.АналитикаУчетаНоменклатуры"));
			
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка",             ДанныеИБ.Ссылка);
	Запрос.УстановитьПараметр("НоменклатураСсылка", ДанныеИБ.Номенклатура);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеНоменклатуры = РезультатЗапроса[0].Выбрать();
	Если ДанныеНоменклатуры.Следующий() Тогда
		ДанныеXDTO.Вставить("ЕдиницаИзмерения", ДанныеНоменклатуры.ЕдиницаИзмерения);
	Иначе
		ДанныеXDTO.Вставить("ЕдиницаИзмерения", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
	КонецЕсли;
	
	Если ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров Тогда
		
		ДанныеВидовЗапасов = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выбрать();
		
		Если ДанныеВидовЗапасов.Следующий() Тогда
			ДанныеXDTO.Вставить("ТипЗапасов", ДанныеВидовЗапасов.ТипЗапасов);
		Иначе
			ДанныеXDTO.Вставить("ТипЗапасов", "СобственныеТовары");
		КонецЕсли;
		
		Товары = РезультатЗапроса[РезультатЗапроса.Количество() - 2].Выгрузить();
		ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, Товары, Истина, Ложь);
		
	Иначе
		// Сборка.
		Товары = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выгрузить();
		ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, Товары, Истина, Ложь);
	КонецЕсли;
	
	ДанныеXDTO.Вставить("Товары", Товары);
КонецПроцедуры
