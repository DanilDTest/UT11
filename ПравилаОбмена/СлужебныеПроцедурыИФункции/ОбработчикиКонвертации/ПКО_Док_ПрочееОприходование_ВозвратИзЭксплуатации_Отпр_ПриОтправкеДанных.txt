Процедура ПКО_Док_ПрочееОприходование_ВозвратИзЭксплуатации_Отпр_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	СкладДляВыгрузки = СкладДляВыгрузки(ДанныеИБ.Склад, КомпонентыОбмена.ПараметрыКонвертации);
	ДанныеXDTO.Вставить("Склад", СкладДляВыгрузки);
	
	ВыгрузитьПодразделениеИзРеквизитаДокумента(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, "Склад");
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтрокиДокумента,
		|	Товары.Номенклатура КАК Номенклатура,
		|	&ТекстЗапросаХарактеристика,
		|	&ТекстЗапросаУпаковка,
		|	&ТекстЗапросаСерия,
		|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Товары.Количество КАК Количество,
		|	ВЫРАЗИТЬ(Товары.Сумма / Товары.Количество КАК ЧИСЛО(15, 2)) КАК Цена,
		|	Товары.Цена КАК ЦенаЗаУпаковку,
		|	Товары.Сумма КАК Сумма,
		|	""СобственныеТовары"" КАК ТипЗапасов,
		|	Товары.ФизическоеЛицо КАК ФизическоеЛицо,
		|	&СчетУчета,
		|	ВЫРАЗИТЬ(Товары.ПартияТМЦВЭксплуатации.Документ КАК Документ.ВнутреннееПотреблениеТоваров) КАК ДокументПередачи,
		|	ВЫРАЗИТЬ(Товары.СтатьяРасходовДоходов КАК ПланВидовХарактеристик.СтатьиДоходов) КАК СтатьяДоходов,
		|	ЕСТЬNULL(Товары.ПартияТМЦВЭксплуатации.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
		|	Товары.СтатьяРасходовДоходов.Наименование КАК СтатьяРасходовНаименование,
		|	Товары.СтатьяРасходовДоходов.КорреспондирующийСчет КАК СтатьяРасходовКорСчет
		|ИЗ
		|	Документ.ПрочееОприходованиеТоваров.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка";
	
	Если ЭтоУТ() Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СчетУчета",
			"ЕСТЬNULL(Товары.ПартияТМЦВЭксплуатации.КатегорияЭксплуатации.СчетУчета, """")");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СчетУчета",
			"ЕСТЬNULL(Товары.ПартияТМЦВЭксплуатации.КатегорияЭксплуатации.СчетУчета.Код, """")");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаХарактеристика",
		ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "Товары"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаУпаковка",
		ПолучитьТекстЗапросаУпаковки(КомпонентыОбмена, "Товары"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаСерия",
		ПолучитьТекстЗапросаСерии(КомпонентыОбмена, "Товары"));
	
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	
	Товары = Запрос.Выполнить().Выгрузить();
	ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, Товары);
	
	Товары.Колонки.Добавить("НаименованиеСпособаОтраженияРасходов");
	
	Для Каждого Строка Из Товары Цикл
		Строка.НаименованиеСпособаОтраженияРасходов = Строка.СтатьяРасходовНаименование;
	
		Если ЗначениеЗаполнено(Строка.СтатьяРасходовКорСчет) Тогда
			НаименованиеСпособаОтраженияРасходов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 счет( %2)';
					|en = '%1 account (%2)'"),
				СокрЛП(Строка.НаименованиеСпособаОтраженияРасходов),
				Строка.СтатьяРасходовКорСчет);
			Строка.НаименованиеСпособаОтраженияРасходов = НаименованиеСпособаОтраженияРасходов;
		КонецЕсли;
	КонецЦикла;
	ДанныеXDTO.Вставить("Товары", Товары);
КонецПроцедуры
