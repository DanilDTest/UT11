Процедура ПКО_Документ_АктВыполненныхРаботРТУ_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", Лев(ДанныеИБ.Номер, 5) + "У" + Сред(ДанныеИБ.Номер, 7));
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеXDTO.Вставить("ВидОперации", Перечисления.ХозяйственныеОперации.РеализацияКлиенту);
	
	ДанныеXDTO.Вставить("ГлавныйБухгалтер", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.ГлавныйБухгалтер, "ФизическоеЛицо"));
	ДанныеXDTO.Вставить("Руководитель",     ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.Руководитель, "ФизическоеЛицо"));
	
	ДанныеXDTO.Вставить("Заказ", Неопределено);
	Если ЗначениеЗаполнено(ДанныеИБ.ЗаказКлиента) И ТипЗнч(ДанныеИБ.ЗаказКлиента) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		ДанныеXDTO.Заказ = ДанныеИБ.ЗаказКлиента;
	КонецЕсли;
	
	ВыгрузитьНалогообложениеНДС(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Ложь);
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		
	// Дополнительные свойства для поиска договора
	Если ЗначениеЗаполнено(ДанныеИБ.Договор) Тогда
		ДанныеXDTO.Вставить("Договор", ДанныеИБ.Договор);
	Иначе
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ЗаполнитьЗначенияСвойств(ПараметрыПоУмолчанию, ДанныеИБ);
		ПараметрыПоУмолчанию.ВидДоговора = "СПокупателем";
		Если ЗначениеЗаполнено(ДанныеИБ.Соглашение) Тогда
			РасчетыВУсловныхЕдиницах = ВзаиморасчетыСервер.РасчетыВУсловныхЕдиницах(ДанныеИБ.Соглашение);
		Иначе
			РасчетыВУсловныхЕдиницах = (ДанныеИБ.Валюта = ВалютаРеглУчета И ДанныеИБ.Валюта <> ДанныеИБ.ВалютаВзаиморасчетов);
		КонецЕсли;
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = РасчетыВУсловныхЕдиницах;
		
		Заказ = Новый Структура("Заказ, Соглашение, Сделка", ДанныеИБ.ЗаказКлиента, ДанныеИБ.Соглашение, ДанныеИБ.Сделка);
		Договор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена, Заказ, ДанныеИБ);
		ДанныеXDTO.Вставить("Договор", Договор);
	КонецЕсли;
	
	ВыгрузитьПодразделение(ДанныеИБ, ДанныеXDTO);
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	ШапкаДокумента = "
	|ВЫБРАТЬ
	|	ДанныеШапкиДокумента.Валюта,
	|	ДанныеШапкиДокумента.ВалютаВзаиморасчетов,
	|	ДанныеШапкиДокумента.Курс КАК КурсВзаиморасчетов,
	|	ДанныеШапкиДокумента.Кратность КАК КратностьВзаиморасчетов
	|ПОМЕСТИТЬ ДанныеШапкиДокумента
	|ИЗ
	|	Документ.АктВыполненныхРабот КАК ДанныеШапкиДокумента
	|ГДЕ
	|	ДанныеШапкиДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	Если ДанныеИБ.Валюта = ВалютаРеглУчета
		Или ДанныеИБ.ВалютаВзаиморасчетов = ВалютаРеглУчета Тогда
		ДанныеОперации = "
		|ВЫБРАТЬ
		|	ДанныеШапкиДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
		|	ДанныеШапкиДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов
		|ИЗ
		|	ДанныеШапкиДокумента КАК ДанныеШапкиДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	Иначе
		ДанныеОперации = "
		|ВЫБРАТЬ
		|	ЕСТЬNULL(КурсВалютыДокумента.Курс, 1) КАК КурсВзаиморасчетов,
		|	ЕСТЬNULL(КурсВалютыДокумента.Кратность, 1) КАК КратностьВзаиморасчетов
		|ИЗ
		|	ДанныеШапкиДокумента КАК ДанныеШапкиДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
		|				&Дата,
		|				Валюта В
		|					(ВЫБРАТЬ
		|						Док.Валюта
		|					ИЗ
		|						ДанныеШапкиДокумента КАК Док)) КАК КурсВалютыДокумента
		|		ПО ДанныеШапкиДокумента.Валюта = КурсВалютыДокумента.Валюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	КонецЕсли;
	
	УслугиДокумента = "
	|ВЫБРАТЬ
	|	Услуги.Номенклатура КАК Номенклатура,
	|	Услуги.Содержание КАК Содержание,
	|	Услуги.Количество КАК Количество,
	|	Услуги.Цена КАК Цена,
	|	Услуги.Сумма КАК Сумма,
	|	Услуги.СтавкаНДС КАК СтавкаНДС,
	|	Услуги.СуммаНДС КАК СуммаНДС,
	|	Услуги.НомерСтроки КАК НомерСтрокиДокумента
	|ИЗ
	|	Документ.АктВыполненныхРабот.Услуги КАК Услуги
	|ГДЕ
	|	Услуги.Ссылка = &Ссылка";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ШапкаДокумента + ДанныеОперации + УслугиДокумента;
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Запрос.УстановитьПараметр("Дата",   ДанныеИБ.Дата);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеОперации = РезультатЗапроса[1].Выбрать();
	Если ДанныеОперации.Следующий() Тогда
		ДанныеXDTO.Вставить("КурсВзаиморасчетов",      ДанныеОперации.КурсВзаиморасчетов);
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", ДанныеОперации.КратностьВзаиморасчетов);
	КонецЕсли;
	
	ТабУслуги = РезультатЗапроса[2].Выгрузить();
	ДанныеXDTO.Вставить("Услуги", ТабУслуги);
КонецПроцедуры
