Процедура ПКО_Документ_ЗаказКлиентаПолный_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	Если ЗначениеЗаполнено(ПолученныеДанные.Контрагент) Тогда
		ПолученныеДанные.Партнер = ПартнерПоКонтрагенту(ПолученныеДанные.Контрагент);
	КонецЕсли;   
	
	ПолученныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	ПолученныеДанные.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ПолученныеДанные.НеОтгружатьЧастями = Истина;
	ПолученныеДанные.Приоритет = Справочники.Приоритеты.ПолучитьПриоритетПоУмолчанию(Неопределено);
	
	
	ПолученныеДанные.Грузоотправитель = ПолученныеДанные.Организация;
	ПолученныеДанные.Грузополучатель = ПолученныеДанные.Контрагент;
	
	
	ДатаРезерва = Неопределено;
	ДанныеXDTO.Свойство("RM_ДатаРезерва", ДатаРезерва);
	ПолученныеДанные.ДополнительныеСвойства.Вставить("ДатаРезерва", ДатаРезерва);
	
	
	ПравилаЗаполнения = Новый Соответствие;
	ПравилаЗаполнения.Вставить("Номенклатура",   "Номенклатура");
	ПравилаЗаполнения.Вставить("Характеристика",     "Характеристика");
	ПравилаЗаполнения.Вставить("Количество",          "Количество");
	ПравилаЗаполнения.Вставить("КоличествоУпаковок",           "КоличествоУпаковок");
	ПравилаЗаполнения.Вставить("Упаковка",      "Упаковка");
	ПравилаЗаполнения.Вставить("Цена",       "Цена");
	ПравилаЗаполнения.Вставить("Сумма",     "Сумма");
	ПравилаЗаполнения.Вставить("СуммаНДС",           "СуммаНДС");
	ПравилаЗаполнения.Вставить("СтавкаНДС",           "СтавкаНДС");
	ПравилаЗаполнения.Вставить("Отменено", "Отменено");
	ПравилаЗаполнения.Вставить("ПричинаОтмены",           "ПричинаОтмены");
	ПравилаЗаполнения.Вставить("ВариантОбеспечения", "ВариантОбеспечения"); 
	ПравилаЗаполнения.Вставить("ПроцентАвтоматическойСкидки",     "ПроцентАвтоматическойСкидки");
	ПравилаЗаполнения.Вставить("ПроцентРучнойСкидки",           "ПроцентРучнойСкидки");
	ПравилаЗаполнения.Вставить("СуммаРучнойСкидки", "СуммаРучнойСкидки");
	ПравилаЗаполнения.Вставить("СуммаАвтоматическойСкидки",           "СуммаАвтоматическойСкидки");  
	ПравилаЗаполнения.Вставить("ОтменаСогласованаКлиентом", "RM_ОтменаСогласованаСПокупателем");
	ПравилаЗаполнения.Вставить("Зарезервировано", "Зарезервировано");            
	ПравилаЗаполнения.Вставить("КлючСвязи",          "КлючСвязи");
	ПравилаЗаполнения.Вставить("КодСтроки",          "КодСтроки");
	ПравилаЗаполнения.Вставить("ИдентификаторТовараСтрокой",          "RM_ИдентификаторТовараСтрокой");
	
	
	// Товары 
	МассивСтрокТовары = Новый Массив;
	Если ДанныеXDTO.Свойство("Товары")
		И ЗначениеЗаполнено(ДанныеXDTO.Товары) Тогда
		
		Для Каждого Строка Из ДанныеXDTO.Товары Цикл
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			СуммаСНДС = Строка.Сумма;
			
			СтруктураДанныхСтроки.Вставить("СуммаСНДС", СуммаСНДС);
			Если СтруктураДанныхСтроки.Свойство("КоличествоУпаковок") Тогда
			    Если СтруктураДанныхСтроки.Свойство("Упаковка") И СтруктураДанныхСтроки.Свойство("Сумма") Тогда
					СтруктураДанныхСтроки.Вставить("Цена", СтруктураДанныхСтроки.Сумма / СтруктураДанныхСтроки.КоличествоУпаковок);
				КонецЕсли;
			Иначе
				СтруктураДанныхСтроки.Вставить("КоличествоУпаковок", СтруктураДанныхСтроки.Количество);
			КонецЕсли;   
			               
			СтруктураДанныхСтроки.Вставить("ВариантОбеспечения", Перечисления.ВариантыОбеспечения.Отгрузить);
					               
			//Если СтруктураДанныхСтроки.Свойство("Зарезервировано") Тогда
			//	Обеспечение = ?(СтруктураДанныхСтроки.Зарезервировано = Истина, Перечисления.ВариантыОбеспечения.Отгрузить, Перечисления.ВариантыОбеспечения.Требуется);
			//	СтруктураДанныхСтроки.Вставить("ВариантОбеспечения", Обеспечение);	
			//Иначе     
			//   	СтруктураДанныхСтроки.Вставить("ВариантОбеспечения", Перечисления.ВариантыОбеспечения.Требуется);	
			//КонецЕсли;
			
			
	
			МассивСтрокТовары.Добавить(СтруктураДанныхСтроки);
		КонецЦикла;
	КонецЕсли;         
	
	ПолученныеДанные.ДополнительныеСвойства.Вставить("Товары", МассивСтрокТовары);    
	
	Если ДанныеXDTO.Свойство("ОсновнаяПричинаОтмены") Тогда
		ПолученныеДанные.ДополнительныеСвойства.Вставить("ОсновнаяПричинаОтмены", ДанныеXDTO.ОсновнаяПричинаОтмены);    
	КонецЕсли;
КонецПроцедуры
