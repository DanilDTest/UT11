Процедура ПКО_Документ_ЗаявкаНаРасходДСРасчетыСКонтр_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	ПолученныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику;
	
	ВозможныеХозоперации = Перечисления.ХозяйственныеОперации;
	ВидРасчетов = ДанныеXDTO.ВидРасчетов.Значение;
	Если ВидРасчетов = "СПоставщиком" Тогда
		ПолученныеДанные.ХозяйственнаяОперация = ВозможныеХозоперации.ОплатаПоставщику;
	ИначеЕсли ВидРасчетов = "СПокупателем" Тогда
		ПолученныеДанные.ХозяйственнаяОперация = ВозможныеХозоперации.ВозвратОплатыКлиенту;
	ИначеЕсли ВидРасчетов = "КредитыИЗаймы" Тогда
		ПолученныеДанные.ХозяйственнаяОперация = ВозможныеХозоперации.ОплатаПоКредитам;
	Иначе
		ПолученныеДанные.ХозяйственнаяОперация = ВозможныеХозоперации.ПрочаяВыдачаДенежныхСредств;
	КонецЕсли;
	
	ПолученныеДанные.СтатьяДвиженияДенежныхСредств = 
		Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(ПолученныеДанные.ХозяйственнаяОперация);
	
	ЗагрузитьДополнительныеРеквизиты(ПолученныеДанные, ДанныеXDTO, КомпонентыОбмена);
	
	#Область РасшифровкаПлатежа
	
	ЗаполнятьДоговор = (ВидРасчетов = "СПокупателем" И КомпонентыОбмена.ПараметрыКонвертации.ИспользуютсяДоговорыСКлиентами)
					ИЛИ (ВидРасчетов = "СПоставщиком" И КомпонентыОбмена.ПараметрыКонвертации.ИспользуютсяДоговорыСПоставщиками);
	
	МассивСтрокРасшифровка = Новый Массив;
	Для Каждого Строка Из ДанныеXDTO.РасшифровкаПлатежа Цикл
		ПравилаЗаполнения = Новый Соответствие;
		ПравилаЗаполнения.Вставить("Сумма", "Сумма");
		ПравилаЗаполнения.Вставить("СуммаВзаиморасчетов", "СуммаВзаиморасчетов");
		ПравилаЗаполнения.Вставить("СтатьяДДС", "СтатьяДвиженияДенежныхСредств");
		СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
		//ВалютаКонвертации
		ВалютаВзаиморасчетов = Строка.ВалютаВзаиморасчетов;
		Если ТипЗнч(ВалютаВзаиморасчетов) = Тип("Структура")
			И ВалютаВзаиморасчетов.Свойство("Ссылка") = Ложь Тогда
			ИмяПКО = "Справочник_Валюты_ИзСтруктуры";
		Иначе
			ИмяПКО = "Справочник_Валюты";
		КонецЕсли;
		Инструкция = Новый Структура("Значение, ИмяПКО", ВалютаВзаиморасчетов, ИмяПКО);
		СтруктураДанныхСтроки.Вставить("ВалютаВзаиморасчетов", Инструкция);
		Если ЗначениеЗаполнено(Строка.ДокументРасчетов) Тогда
			ТипДокументаОснования = Строка.ДокументРасчетов.ТипЗначения;
			ИмяПКО = "";
			Если Найти(ТипДокументаОснования, "ВозвратТоваровОтПокупателя") > 0 Тогда
				ИмяПКО = "Документ_ВозвратТоваровОтПокупателя_Получение";
			ИначеЕсли Найти(ТипДокументаОснования, "ВозвратТоваровПоставщику") > 0 Тогда
				ИмяПКО = "Документ_ВозвратТоваровПоставщику_Получение";
			ИначеЕсли Найти(ТипДокументаОснования, "РеализацияТоваровУслуг") > 0 Тогда
				ИмяПКО = "Документ_РеализацияТоваровУслуг_Получение";
			ИначеЕсли Найти(ТипДокументаОснования, "ПоступлениеТоваровУслуг") > 0 Тогда
				ИмяПКО = "Документ_ПоступлениеТоваровУслуг_Получение";
			ИначеЕсли Найти(ТипДокументаОснования, "ТаможеннаяДекларация") > 0 Тогда
				ИмяПКО = "Документ_ТаможеннаяДекларация_Получение";
			КонецЕсли;
			Если ЗначениеЗаполнено(ИмяПКО) Тогда
				Заказ = Новый Структура("Значение, ИмяПКО", Строка.ДокументРасчетов, ИмяПКО);
				СтруктураДанныхСтроки.Вставить("Заказ", Заказ);
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(Строка.Договор) Тогда
			ДобавитьДоговорВРасшифровкуПлатежа(ЗаполнятьДоговор, СтруктураДанныхСтроки, Строка);
		КонецЕсли;
		МассивСтрокРасшифровка.Добавить(СтруктураДанныхСтроки);
	КонецЦикла;
	ПолученныеДанные.ДополнительныеСвойства.Вставить("РасшифровкаПлатежа", МассивСтрокРасшифровка);
	
	#КонецОбласти
	
	ПолученныеДанные.Проведен = Истина;
КонецПроцедуры
