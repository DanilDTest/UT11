Процедура ПКО_Документ_ОстаткиКредитовЗаймов_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	ПолученныеДанные.Проведен      = Истина;
	ПолученныеДанные.ТипОперации   = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов;
	
	#Область РасчетыПоФинансовымИнструментам
	
	Проценты     = Перечисления.ТипыСуммГрафикаКредитовИДепозитов.Проценты;
	ОсновнойДолг = Перечисления.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг;
	
	ПравилаКонвертацииТиповСумм = Новый Соответствие;
	ПравилаКонвертацииТиповСумм.Вставить("КраткосрочныеКредиты", ОсновнойДолг);
	ПравилаКонвертацииТиповСумм.Вставить("КраткосрочныеЗаймы",   ОсновнойДолг);
	ПравилаКонвертацииТиповСумм.Вставить("ДолгосрочныеКредиты",  ОсновнойДолг);
	ПравилаКонвертацииТиповСумм.Вставить("ДолгосрочныеЗаймы",    ОсновнойДолг);
	ПравилаКонвертацииТиповСумм.Вставить("ПроцентыПоКраткосрочнымКредитам", Проценты);
	ПравилаКонвертацииТиповСумм.Вставить("ПроцентыПоКраткосрочнымЗаймам",   Проценты);
	ПравилаКонвертацииТиповСумм.Вставить("ПроцентыПоДолгосрочнымКредитам",  Проценты);
	ПравилаКонвертацииТиповСумм.Вставить("ПроцентыПоДолгосрочнымЗаймам",    Проценты);
	
	Краткосрочный = Перечисления.ТипыСрочностиКредитовИДепозитов.Краткосрочный;
	Долгосрочный  = Перечисления.ТипыСрочностиКредитовИДепозитов.Долгосрочный;
	
	ПравилаКонвертацииТипыСрочности = Новый Соответствие;
	ПравилаКонвертацииТипыСрочности.Вставить("КраткосрочныеКредиты",            Краткосрочный);
	ПравилаКонвертацииТипыСрочности.Вставить("КраткосрочныеЗаймы",              Краткосрочный);
	ПравилаКонвертацииТипыСрочности.Вставить("ПроцентыПоКраткосрочнымКредитам", Краткосрочный);
	ПравилаКонвертацииТипыСрочности.Вставить("ПроцентыПоКраткосрочнымЗаймам",   Краткосрочный);
	ПравилаКонвертацииТипыСрочности.Вставить("ДолгосрочныеКредиты",             Долгосрочный);
	ПравилаКонвертацииТипыСрочности.Вставить("ДолгосрочныеЗаймы",               Долгосрочный);
	ПравилаКонвертацииТипыСрочности.Вставить("ПроцентыПоДолгосрочнымКредитам",  Долгосрочный);
	ПравилаКонвертацииТипыСрочности.Вставить("ПроцентыПоДолгосрочнымЗаймам",    Долгосрочный);
	
	ПравилаЗаполнения = Новый Соответствие;
	ПравилаЗаполнения.Вставить("Сумма",      "Сумма");
	ПравилаЗаполнения.Вставить("СуммаРегл",  "СуммаРегл");
	ПравилаЗаполнения.Вставить("Контрагент", "Контрагент");
	
	КурсВалютыУпр = Неопределено;
	
	КодВалютыРегл = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		ВалютаРегламентированногоУчета(КомпонентыОбмена),
		"Код");
	
	МассивСтрокТЧ = Новый Массив;
	
	Для Каждого Строка Из ДанныеXDTO.Расчеты Цикл
		
		СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
		
		СтруктураДанныхСтроки.Вставить("СуммаУпр", Строка.Сумма);
		СтруктураДанныхСтроки.Вставить("ТипСуммы", ПравилаКонвертацииТиповСумм.Получить(Строка.ВидРасчетов.Значение));
		
		ДанныеДоговора = Новый Структура;
		ДанныеДоговора.Вставить("ТипСрочности", ПравилаКонвертацииТипыСрочности.Получить(Строка.ВидРасчетов.Значение));
		ДанныеДоговора.Вставить("Организация",  ДанныеXDTO.Организация);
		ДанныеДоговора.Вставить("Контрагент",   Строка.Контрагент);
		ДанныеДоговора.Вставить("Дата",         ДанныеXDTO.Дата);
		ДанныеДоговора.Вставить("Номер",        НСтр("ru = 'б/н';
													|en = 'n/c'"));
		ДанныеДоговора.Вставить("Наименование", НСтр("ru = 'Кредит или займ полученный';
													|en = 'Credit or received loan'"));
		ДанныеДоговора.Вставить("ВалютаВзаиморасчетов", Строка.ВалютаВзаиморасчетов);
		
		СтруктураДанныхСтроки.Вставить("Договор", ДанныеДоговора);
		
		Если ЗначениеЗаполнено(Строка.ВалютаВзаиморасчетов) И Строка.ВалютаВзаиморасчетов.Код <> КодВалютыРегл Тогда
			Если КурсВалютыУпр = Неопределено Тогда
				КурсВалютыУпр = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Константы.ВалютаУправленческогоУчета.Получить(), КонецДня(ДанныеXDTO.Дата));
			КонецЕсли;
			
			Если КурсВалютыУпр.Кратность <> 0 Тогда
				СтруктураДанныхСтроки.Вставить("СуммаРегл", Окр(СтруктураДанныхСтроки.Сумма * КурсВалютыУпр.Курс / КурсВалютыУпр.Кратность, 2));
			КонецЕсли;
		Иначе
			СтруктураДанныхСтроки.Вставить("СуммаРегл", СтруктураДанныхСтроки.Сумма);
		КонецЕсли;
		
		МассивСтрокТЧ.Добавить(СтруктураДанныхСтроки);
		
	КонецЦикла;
	
	ПолученныеДанные.ДополнительныеСвойства.Вставить("РасчетыПоФинансовымИнструментам", МассивСтрокТЧ);
	
	#КонецОбласти
КонецПроцедуры
