Процедура ПКО_Документ_ПриходныйОрдерНаТовары_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;   
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПриходныйОрдерНаТоварыТовары.Номенклатура КАК Номенклатура,
	|	ПриходныйОрдерНаТоварыТовары.НомерСтроки КАК НомерСтроки,
	|	ПриходныйОрдерНаТоварыТовары.Характеристика КАК Характеристика, 
	|	ВЫБОР
	|		КОГДА ПриходныйОрдерНаТоварыТовары.Упаковка.Числитель > 1
	|			ТОГДА ПриходныйОрдерНаТоварыТовары.Количество
	|		ИНАЧЕ ПриходныйОрдерНаТоварыТовары.КоличествоУпаковок
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ПриходныйОрдерНаТоварыТовары.Упаковка.Числитель > 1
	|			ТОГДА ПриходныйОрдерНаТоварыТовары.Упаковка.Родитель
	|		ИНАЧЕ ПриходныйОрдерНаТоварыТовары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	ПриходныйОрдерНаТоварыТовары.Количество КАК Количество,
	|	ПриходныйОрдерНаТоварыТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ПриходныйОрдерНаТоварыТовары.RM_Факт КАК RM_Факт
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары.Товары КАК ПриходныйОрдерНаТоварыТовары
	|ГДЕ
	|	ПриходныйОрдерНаТоварыТовары.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриходныйОрдерНаТоварыRM_ШтрихкодыУпаковок.НомерСтроки КАК НомерСтрокиДокумента,
	|	ПриходныйОрдерНаТоварыRM_ШтрихкодыУпаковок.ШтрихкодУпаковки КАК ШтрихкодУпаковки,
	|	ЕСТЬNULL(ПриходныйОрдерНаТоварыRM_ШтрихкодыУпаковок.ШтрихкодУпаковки.ЗначениеШтрихкода, """") КАК НомерАкцизнойМарки
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары.RM_ШтрихкодыУпаковок КАК ПриходныйОрдерНаТоварыRM_ШтрихкодыУпаковок
	|ГДЕ
	|	ПриходныйОрдерНаТоварыRM_ШтрихкодыУпаковок.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.Параметры.Вставить("Ссылка", ДанныеИБ.Ссылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Товары = РезультатЗапроса[РезультатЗапроса.ВГраница() - 1].Выгрузить();
	ШтрихкодыУпаковок = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выгрузить();
	
	ДанныеXDTO.Вставить("Товары", Товары);
	ДанныеXDTO.Вставить("АкцизныеМарки", ШтрихкодыУпаковок);    
	
	///Распоряжение                                                        
	Распоряжение = ДанныеИБ.Распоряжение;
	ТипРаспоряжения = ТипЗнч(Распоряжение);
	                       
	ИмяПКОРаспоряжения = ""; 
	Если ТипРаспоряжения = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ИмяПКОРаспоряжения = "Документ_ПеремещениеТоваров_Отправка";
	ИначеЕсли ТипРаспоряжения = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда 
		ИмяПКОРаспоряжения = "Документ_ЗаказНаПеремещение_Отправка";  
	ИначеЕсли ТипРаспоряжения = Тип("ДокументСсылка.ЗаказПоставщику") Тогда 
		ИмяПКОРаспоряжения = "Документ_ЗаказПоставщику_Отправка";    
	ИначеЕсли ТипРаспоряжения = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
		ИмяПКОРаспоряжения = "Документ_ЗаказНаСборку_Отправка"; 
	КонецЕсли;
	
	Если НЕ ИмяПКОРаспоряжения = "" Тогда
		ДанныеXDTO.Вставить("Распоряжение", Новый Структура("Значение, ИмяПКО", Распоряжение, ИмяПКОРаспоряжения)); 
	КонецЕсли;    
	
	//RM_ДокументОснование 
	ДокументОснование = ДанныеИБ.RM_ДокументОснование; 
	ТипДокументОснование = ТипЗнч(ДокументОснование);
	ИмяПКООснование = ""; 
	Если ТипДокументОснование = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ИмяПКООснование = "Документ_ПеремещениеТоваров_Отправка";
	ИначеЕсли ТипДокументОснование = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда 
		ИмяПКООснование = "Документ_ЗаказНаПеремещение_Отправка";  
	ИначеЕсли ТипДокументОснование = Тип("ДокументСсылка.ЗаказПоставщику") Тогда 
		ИмяПКООснование = "Документ_ЗаказПоставщику_Отправка";  
	ИначеЕсли ТипДокументОснование = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
		ИмяПКООснование = "Документ_ЗаказНаСборку_Отправка"; 
	КонецЕсли;
	
	Если НЕ ИмяПКООснование = "" Тогда
		ДанныеXDTO.Вставить("ДокументОснование", Новый Структура("Значение, ИмяПКО", ДокументОснование, ИмяПКООснование)); 
	КонецЕсли; 
	
	///  Отправитель
	Отправитель = ДанныеИБ.Отправитель;
	ИмяПКООтправитель = ""; 
	Если ТипЗнч(Отправитель) = Тип("СправочникСсылка.Склады") Тогда
		ИмяПКООтправитель = "Справочник_Склады_Отправка";     
		ДанныеXDTO.Вставить("СкладОтправитель", Новый Структура("Значение, ИмяПКО", Отправитель, ИмяПКООтправитель)); 
	Иначе
		ИмяПКООтправитель = "Справочник_Партнер";   
		ДанныеXDTO.Вставить("Поставщик", Новый Структура("Значение, ИмяПКО", Отправитель, ИмяПКООтправитель)); 
	КонецЕсли;
	//
КонецПроцедуры
