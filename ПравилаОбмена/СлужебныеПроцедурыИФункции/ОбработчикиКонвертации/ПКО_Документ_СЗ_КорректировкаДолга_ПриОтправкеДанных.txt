Процедура ПКО_Документ_СЗ_КорректировкаДолга_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	ДанныеXDTO.Вставить("ВидОперации",        "СписаниеЗадолженности");
	ДанныеXDTO.Вставить("Валюта",             ВалютаРегламентированногоУчета(КомпонентыОбмена));
	ДанныеXDTO.Вставить("КурсДокумента",      1);
	ДанныеXDTO.Вставить("КратностьДокумента", 1);
	
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", Лев(ДанныеИБ.Номер, 5) + "С" + Сред(ДанныеИБ.Номер, 7));
	
	ВыгрузитьПодразделение(ДанныеИБ, ДанныеXDTO);
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	Если ДанныеИБ.РасчетыМеждуОрганизациями И ЗначениеЗаполнено(ДанныеИБ.Контрагент) Тогда
		ОрганизацияКонтрагента = ДанныеИБ.Контрагент;
		ВыгружаемыйКонтрагент = КонтрагентИзОрганизации(ОрганизацияКонтрагента, КомпонентыОбмена);
	Иначе
		ВыгружаемыйКонтрагент = ДанныеИБ.Контрагент;
	КонецЕсли;
	
	ДанныеЗадолженность = ВыгрузитьТаблицуЗадолженности("Задолженность",
		ДанныеИБ.Ссылка, ВыгружаемыйКонтрагент, ДанныеИБ.Организация, , КомпонентыОбмена);
	
	Если ДанныеЗадолженность.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Валюта",             ДанныеЗадолженность[0].ВалютаВзаиморасчетов);
		ДанныеXDTO.Вставить("КурсДокумента",      ДанныеЗадолженность[0].КурсВзаиморасчетов);
		ДанныеXDTO.Вставить("КратностьДокумента", ДанныеЗадолженность[0].КратностьВзаиморасчетов);
	КонецЕсли;
	
	Если ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности Тогда
		ДанныеXDTO.Вставить("КонтрагентКредитор",             ВыгружаемыйКонтрагент);
		ДанныеXDTO.Вставить("КонтрагентДебитор",              Справочники.Контрагенты.ПустаяСсылка());
		ДанныеXDTO.Вставить("СуммаДебиторскойЗадолженности",  0);
		ДанныеXDTO.Вставить("СуммаКредиторскойЗадолженности", ДанныеИБ.Задолженность.Итог("Сумма"));
		ДанныеXDTO.Вставить("КредиторскаяЗадолженность",      ДанныеЗадолженность);
		
		СчетУчета = СчетУчетаПоСтатье(ДанныеИБ.СтатьяДоходов, ДанныеИБ.Организация, ДанныеИБ.Подразделение, ДанныеИБ.СчетУчета);
		ДанныеXDTO.Вставить("СчетДт", Неопределено);
		ДанныеXDTO.Вставить("СчетКт", СчетУчета);
		
		СтатьяДоходов = Неопределено;
		Если ТипЗнч(ДанныеИБ.СтатьяДоходов) = Тип("ПланВидовХарактеристикСсылка.СтатьиДоходов") Тогда
			СтатьяДоходов = ДанныеИБ.СтатьяДоходов;
		КонецЕсли;
		
		ДанныеXDTO.Вставить("СтатьяДоходов", СтатьяДоходов);
		ДанныеXDTO.Вставить("СтатьяРасходов", Неопределено);
	Иначе
		ДанныеXDTO.Вставить("КонтрагентДебитор",  ВыгружаемыйКонтрагент);
		ДанныеXDTO.Вставить("КонтрагентКредитор", Справочники.Контрагенты.ПустаяСсылка());
		ДанныеXDTO.Вставить("СуммаДебиторскойЗадолженности", ДанныеИБ.Задолженность.Итог("Сумма"));
		ДанныеXDTO.Вставить("СуммаКредиторскойЗадолженности", 0);
		ДанныеXDTO.Вставить("ДебиторскаяЗадолженность",  ДанныеЗадолженность);
		
		СчетУчета = СчетУчетаПоСтатье(ДанныеИБ.СтатьяРасходов, ДанныеИБ.Организация, ДанныеИБ.Подразделение, ДанныеИБ.СчетУчета);
		ДанныеXDTO.Вставить("СчетДт", СчетУчета);
		ДанныеXDTO.Вставить("СчетКт", Неопределено);
		
		СтатьяРасходов = Неопределено;
		Если ТипЗнч(ДанныеИБ.СтатьяРасходов) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда
			СтатьяРасходов = ДанныеИБ.СтатьяРасходов;
		КонецЕсли;
		
		ДанныеXDTO.Вставить("СтатьяДоходов", Неопределено);
		ДанныеXDTO.Вставить("СтатьяРасходов", СтатьяРасходов);
	КонецЕсли;
КонецПроцедуры
