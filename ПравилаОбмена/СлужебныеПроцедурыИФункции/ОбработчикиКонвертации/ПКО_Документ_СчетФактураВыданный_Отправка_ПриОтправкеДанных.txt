Процедура ПКО_Документ_СчетФактураВыданный_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если ТипЗнч(ДанныеИБ.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионера")
		Или ТипЗнч(ДанныеИБ.ДокументОснование) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями")
		И ДанныеИБ.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.ДокументОснование, "Организация") Тогда
		
		ДанныеXDTO.КлючевыеСвойства.Вставить("Дата", НачалоДня(ДанныеИБ.Дата));
	КонецЕсли;
	
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеXDTO.Вставить("ВидСчетаФактуры", ?(ДанныеИБ.Корректировочный, "Корректировочный", "НаРеализацию"));
	
	КонтрагентСсылка = Неопределено;
	ТипОснования = ТипЗнч(ДанныеИБ.ДокументОснование);
	Если (ТипОснования = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")
		Или ТипОснования = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями")
		Или ТипОснования = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями"))
		И Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.ДокументОснование, "РасчетыЧерезОтдельногоКонтрагента") Тогда
		
		ОрганизацияПолучатель = Неопределено;
		Если ТипЗнч(ДанныеИБ.Контрагент) = Тип("СправочникСсылка.Организации") Тогда
			ОрганизацияПолучатель = ДанныеИБ.Контрагент;
		Иначе
			ОрганизацияОснования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.ДокументОснование, "Организация");
			Если ТипОснования = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")
				Или ТипОснования = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
				
				Если ДанныеИБ.Организация = ОрганизацияОснования Тогда
					ОрганизацияПолучатель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.ДокументОснование, "ОрганизацияПолучатель");
				Иначе
					ОрганизацияПолучатель = ОрганизацияОснования;
				КонецЕсли;
				
			Иначе
				
				Если ДанныеИБ.Организация = ОрганизацияОснования Тогда
					ОрганизацияПолучатель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.ДокументОснование, "Комиссионер");
				Иначе
					ОрганизацияПолучатель = ОрганизацияОснования;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		КонтрагентСсылка = КонтрагентИзОрганизации(ОрганизацияПолучатель, КомпонентыОбмена);
			
	ИначеЕсли ТипЗнч(ДанныеИБ.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		КонтрагентСсылка = ДанныеИБ.Контрагент;
	Иначе
		КонтрагентСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.ДокументОснование, "Контрагент");
	КонецЕсли;
	
	ДанныеXDTO.Вставить("Контрагент", КонтрагентСсылка);
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.7") Тогда
		ДанныеXDTO.Вставить("ИННКонтрагента", ДанныеИБ.ИННКонтрагента);
		ДанныеXDTO.Вставить("КППКонтрагента", ДанныеИБ.КППКонтрагента);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеИБ.Договор) Тогда
		Если ТипЗнч(ДанныеИБ.Договор) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			ДоговорИнструкция = Новый Структура("Значение, ИмяПКО",
				ДанныеИБ.Договор,
				"Справочник_ДоговорыКонтрагентов");	
		
		ИначеЕсли ТипЗнч(ДанныеИБ.Договор) = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями") Тогда
		
			ДоговорИнструкция = Новый Структура;
			ДоговорИнструкция.Вставить("ИмяПКО",   "Справочник_ДоговорыМеждуОрганизациями");
			ДоговорИнструкция.Вставить("Значение", ДанныеИБ.Договор);
			
		КонецЕсли;
		
		ДанныеXDTO.Вставить("Договор", ДоговорИнструкция);	
	КонецЕсли;
	
	ДанныеXDTO.Вставить("Выставлен", ЗначениеЗаполнено(ДанныеИБ.ДатаВыставления));
	ВыгрузитьСпособВыставленияСчетаФактуры(ДанныеXDTO, ДанныеИБ.ВыставленВЭлектронномВиде);
	
	Если ДанныеИБ.Корректировочный 
		И ДанныеИБ.Исправление 
		И ЗначениеЗаполнено(ДанныеИБ.СчетФактураОснование) Тогда
		
		ДанныеXDTO.Вставить("ДатаИсправляемогоКорректировочногоДокумента", ДанныеИБ.СчетФактураОснование.Дата);
		ДанныеXDTO.Вставить("НомерИсправляемогоКорректировочногоДокумента", 
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеИБ.СчетФактураОснование.Номер, Ложь, Истина));
	
	КонецЕсли;
	
	// Итоговые суммы и ставка НДС.
	МассивСФ = Новый Массив;
	МассивСФ.Добавить(ДанныеИБ.Ссылка);
	
	ПараметрыПечати = Новый Структура("ПечатьВВалюте, ВыводитьНаборы", ДанныеИБ.Валюта <> Константы.ВалютаРегламентированногоУчета.Получить(), Ложь);
	ДанныеДляПечати = Документы.СчетФактураВыданный.ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивСФ);
	Если ДанныеДляПечати.Свойство("РезультатПоТабличнойЧасти") Тогда
		РезультатЗапроса = ДанныеДляПечати.РезультатПоТабличнойЧасти;
		Сумма = 0; СуммаНДС = 0; СтавкаНДС = Неопределено; ВыводитьСтавкуНДС = Истина;
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
				Сумма = Выборка.СуммаСНДС;
				СуммаНДС = Выборка.СуммаНДС;
			ИначеЕсли  Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
				Если ВыводитьСтавкуНДС И ЗначениеЗаполнено(Выборка.СтавкаНДС) Тогда
					Если СтавкаНДС = Неопределено Тогда
						СтавкаНДС = Выборка.СтавкаНДС;
					ИначеЕсли СтавкаНДС <> Выборка.СтавкаНДС Тогда
						СтавкаНДС = Неопределено;
						ВыводитьСтавкуНДС = Ложь;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ДанныеXDTO.Вставить("Сумма", Сумма);
		ДанныеXDTO.Вставить("СуммаНДС", СуммаНДС);
		ДанныеXDTO.Вставить("СтавкаНДС", СтавкаНДС);
	КонецЕсли;
	
	// Документы-основания - заполненность проверяется при выполнении ПОД.
	СФВыданный_ВыгрузитьДокументыОснования(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена);
	
	Если ЗначениеЗаполнено(ДанныеИБ.ДокументОснование) Тогда
		ВыгрузитьОтветственноеЛицо(КомпонентыОбмена, ДанныеИБ.ДокументОснование, ДанныеXDTO, "ГлавныйБухгалтер", Истина);
		ВыгрузитьОтветственноеЛицо(КомпонентыОбмена, ДанныеИБ.ДокументОснование, ДанныеXDTO, "Руководитель", Истина);
	КонецЕсли;
	
	ПлатРасчДокументы = Новый ТаблицаЗначений;
	ПлатРасчДокументы.Колонки.Добавить("ДатаДокумента");
	ПлатРасчДокументы.Колонки.Добавить("НомерДокумента");
	Если НЕ (ДанныеИБ.Корректировочный И ДанныеИБ.ПлатежноРасчетныеДокументы.Количество() = 0) Тогда
		Для Каждого СтрокаДокумента Из ДанныеИБ.ПлатежноРасчетныеДокументы Цикл
			СтрокаПлатРасчДокумент = ПлатРасчДокументы.Добавить();
			СтрокаПлатРасчДокумент.ДатаДокумента = СтрокаДокумента.ДатаПлатежноРасчетногоДокумента;
			СтрокаПлатРасчДокумент.НомерДокумента = СтрокаДокумента.НомерПлатежноРасчетногоДокумента;
		КонецЦикла;
	КонецЕсли;
	
	Если ПлатРасчДокументы.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("ПлатежноРасчетныеДокументы", ПлатРасчДокументы);
	КонецЕсли;
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
КонецПроцедуры
