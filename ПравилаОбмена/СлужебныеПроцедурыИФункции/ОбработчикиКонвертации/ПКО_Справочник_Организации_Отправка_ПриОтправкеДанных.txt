Процедура ПКО_Справочник_Организации_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	СтруктураКлючевыхСвойств = ДанныеXDTO.КлючевыеСвойства;
	Если СтекВыгрузки.Количество() > 1 Тогда
		СтруктураКлючевыхСвойств = ДанныеXDTO;
	КонецЕсли;
	
	Если ДанныеИБ.ГоловнаяОрганизация = ДанныеИБ.Ссылка Тогда
		СтруктураКлючевыхСвойств.Вставить("ГоловнаяОрганизация", Неопределено);
	КонецЕсли;
	
	КодОКАТО = "";
	КПП = ДанныеИБ.КПП;
	Если ЗначениеЗаполнено(ДанныеИБ.РегистрацияВНалоговомОргане) Тогда
		РеквизитыРегистрации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеИБ.РегистрацияВНалоговомОргане, "КодПоОКАТО, КПП");
		
		КодОКАТО = РеквизитыРегистрации.КодПоОКАТО;
		
		Если Не ЗначениеЗаполнено(КПП) Тогда
			КПП = РеквизитыРегистрации.КПП;
		КонецЕсли;
	КонецЕсли;
	СтруктураКлючевыхСвойств.Вставить("КПП", КПП);
	
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	ПодготовитьДанныеКонтактнаяИнформация(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена);
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Истина);
	
	ДанныеXDTO.Вставить("ОКАТО", КодОКАТО);
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.8") Тогда
		ДанныеXDTO.Вставить("СтранаРегистрации",                     ДанныеИБ.СтранаРегистрации);
		ДанныеXDTO.Вставить("ОрганПФР",                              ДанныеИБ.КодОрганаПФР);
		ДанныеXDTO.Вставить("РегистрационныйНомерПФР",               ДанныеИБ.РегистрационныйНомерПФР);
		ДанныеXDTO.Вставить("НаименованиеТерриториальногоОрганаПФР", ДанныеИБ.НаименованиеТерриториальногоОрганаПФР);
		ДанныеXDTO.Вставить("РегистрационныйНомерФСС",               ДанныеИБ.РегистрационныйНомерФСС);
		ДанныеXDTO.Вставить("НаименованиеТерриториальногоОрганаФСС", ДанныеИБ.НаименованиеТерриториальногоОрганаФСС);
		ДанныеXDTO.Вставить("КодПодчиненностиФСС",                   ДанныеИБ.КодПодчиненностиФСС);
		ДанныеXDTO.Вставить("ДополнительныйКодФСС",                  ДанныеИБ.ДополнительныйКодФСС);
		ДанныеXDTO.Вставить("ОКВЭД",                                 ДанныеИБ.КодОКВЭД);
		ДанныеXDTO.Вставить("ОКВЭД2",                                ДанныеИБ.КодОКВЭД2);
		ДанныеXDTO.Вставить("НаименованиеОКВЭД",                     ДанныеИБ.НаименованиеОКВЭД);
		ДанныеXDTO.Вставить("НаименованиеОКВЭД2",                    ДанныеИБ.НаименованиеОКВЭД2);
		ДанныеXDTO.Вставить("ОКОПФ",                                 ДанныеИБ.КодОКОПФ);
		ДанныеXDTO.Вставить("ОКФС",                                  ДанныеИБ.КодОКФС);
		ДанныеXDTO.Вставить("НаименованиеОКОПФ",                     ДанныеИБ.НаименованиеОКОПФ);
		ДанныеXDTO.Вставить("НаименованиеОКФС",                      ДанныеИБ.НаименованиеОКФС);
	КонецЕсли;  
	
	
	СтруктураДополнительныхРеквизитов = Новый Структура;
	СтруктураДополнительныхРеквизитов.Вставить("КодПоОКАТО", ДанныеИБ.КодПоОКАТО);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ОтчетСтатистикиФТС", ДанныеИБ.RM_ОтчетСтатистикиФТС);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ПолноеНаименованиеФТС", ДанныеИБ.RM_ПолноеНаименованиеФТС);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ФормаСобственностиОрганизацииФТС", ДанныеИБ.RM_ФормаСобственностиОрганизацииФТС);
	СтруктураДополнительныхРеквизитов.Вставить("ПрименятьСевернуюНадбавку", ДанныеИБ.ПрименятьСевернуюНадбавку);
	СтруктураДополнительныхРеквизитов.Вставить("РайонныйКоэффициент", ДанныеИБ.РайонныйКоэффициент);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ИННОрганизацииТС", ДанныеИБ.RM_ИННОрганизацииТС);
	СтруктураДополнительныхРеквизитов.Вставить("РайонныйКоэффициентРФ", ДанныеИБ.РайонныйКоэффициентРФ);
	СтруктураДополнительныхРеквизитов.Вставить("ЕстьОбособленныеПодразделения", ДанныеИБ.ЕстьОбособленныеПодразделения);
	СтруктураДополнительныхРеквизитов.Вставить("ДопускаютсяВзаиморасчетыЧерезГоловнуюОрганизацию", ДанныеИБ.ДопускаютсяВзаиморасчетыЧерезГоловнуюОрганизацию);
	СтруктураДополнительныхРеквизитов.Вставить("ЗарегистрированВОЭЗ", ДанныеИБ.ЗарегистрированВОЭЗ);
	СтруктураДополнительныхРеквизитов.Вставить("ИностраннаяОрганизация", ДанныеИБ.ИностраннаяОрганизация);
	СтруктураДополнительныхРеквизитов.Вставить("НеЗаполнятьПодразделенияВМероприятияхТрудовойДеятельности", ДанныеИБ.НеЗаполнятьПодразделенияВМероприятияхТрудовойДеятельности);
	СтруктураДополнительныхРеквизитов.Вставить("КрупнейшийНалогоплательщик", ДанныеИБ.КрупнейшийНалогоплательщик);
	СтруктураДополнительныхРеквизитов.Вставить("ОбособленноеПодразделение", ДанныеИБ.ОбособленноеПодразделение);
	СтруктураДополнительныхРеквизитов.Вставить("ПрименятьРайонныйКоэффициент", ДанныеИБ.ПрименятьРайонныйКоэффициент);
	
	ЗаполнитьЗначенияСвойств(СтруктураДополнительныхРеквизитов, ДанныеИБ);  
	ВыгрузитьДополнительныеРеквизитыСвойствоСтрокой(СтруктураДополнительныхРеквизитов, ДанныеXDTO);    
	
	КомпонентыОбмена.ПараметрыКонвертации.ВыгруженныеОрганизации.Добавить(ДанныеИБ.Ссылка);
КонецПроцедуры
