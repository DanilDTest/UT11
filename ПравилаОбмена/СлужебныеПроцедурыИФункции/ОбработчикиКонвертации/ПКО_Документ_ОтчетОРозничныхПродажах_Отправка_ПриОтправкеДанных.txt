Процедура ПКО_Документ_ОтчетОРозничныхПродажах_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.6") Тогда
			ДанныеXDTO.Вставить("КассоваяСмена", ДанныеИБ.КассоваяСмена);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.6") Тогда
		ДанныеXDTO.КлючевыеСвойства.Вставить("КассоваяСмена", ДанныеИБ.КассоваяСмена);
		ДанныеXDTO.Вставить("КассаККМ", ДанныеИБ.КассаККМ);
	КонецЕсли;
	
	ВыгрузитьНалогообложениеНДС(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Ложь);
	
	ВыгрузитьПодразделениеИзРеквизитаДокумента(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, "Склад");
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	СкладДляВыгрузки = СкладДляВыгрузки(ДанныеИБ.Склад, КомпонентыОбмена.ПараметрыКонвертации);
	ДанныеXDTO.Вставить("Склад", СкладДляВыгрузки);
	
	ДанныеXDTO.Вставить("УчетВыручкиВОперационнойКассе", Истина);
	
	
	РезультатыЗапроса = ДанныеИБ.ДополнительныеСвойства.РезультатыЗапроса;
	КоличествоЗапросов = РезультатыЗапроса.Количество();
	
	НомераТаблиц = Новый Соответствие;
	НомераТаблиц.Вставить("Товары",                   КоличествоЗапросов-12);
	НомераТаблиц.Вставить("ТоварыПродажа",            КоличествоЗапросов-11);
	НомераТаблиц.Вставить("ТоварыВозвратПродажи",     КоличествоЗапросов-10);
	НомераТаблиц.Вставить("Услуги",                   КоличествоЗапросов-9);
	НомераТаблиц.Вставить("ОплатаКартами",            КоличествоЗапросов-8);
	НомераТаблиц.Вставить("ОплатаСертификатами",      КоличествоЗапросов-7);
	НомераТаблиц.Вставить("ПодарочныеСертификаты",    КоличествоЗапросов-6);
	НомераТаблиц.Вставить("ОплатаПСКартами",          КоличествоЗапросов-5);
	НомераТаблиц.Вставить("НачислениеБонусныхБаллов", КоличествоЗапросов-4);
	НомераТаблиц.Вставить("ОплатаБонуснымиБаллами",   КоличествоЗапросов-3);
	НомераТаблиц.Вставить("АкцизныеМарки",            КоличествоЗапросов-2);
	НомераТаблиц.Вставить("МаркировкиУпаковок",       КоличествоЗапросов-1);
	
	#Область Товары
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.6") Тогда
		ИмяТаблицыТовары = "ТоварыПродажа";
		
		ТоварыВозвратПродажи = РезультатыЗапроса[НомераТаблиц.Получить("ТоварыВозвратПродажи")].Выгрузить();	
		ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, ТоварыВозвратПродажи, Истина, Ложь);
		ДанныеXDTO.Вставить("ТоварыВозвратПродажи", ТоварыВозвратПродажи);
	Иначе
		ИмяТаблицыТовары = "Товары";
	КонецЕсли;
	
	ТоварыПродажа = РезультатыЗапроса[НомераТаблиц.Получить(ИмяТаблицыТовары)].Выгрузить();
	Для Каждого СтрокаТовары Из ТоварыПродажа Цикл
		Если ЗначениеЗаполнено(СтрокаТовары.Поставщик)
			И ТипЗнч(СтрокаТовары.Поставщик) = Тип("СправочникСсылка.Организации") Тогда
			СтрокаТовары.Поставщик = КонтрагентИзОрганизации(СтрокаТовары.Поставщик, КомпонентыОбмена);
		КонецЕсли;
	КонецЦикла;
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.6") Тогда
		ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, ТоварыПродажа, Истина, Ложь);
	КонецЕсли;
	
	ДанныеXDTO.Вставить(ИмяТаблицыТовары, ТоварыПродажа);
	
	#КонецОбласти
	
	#Область Услуги
	
	Услуги = РезультатыЗапроса[НомераТаблиц.Получить("Услуги")].Выгрузить();
	ТаблицаУслугЗаполнитьПринципала(КомпонентыОбмена, Услуги);
	
	ДанныеXDTO.Вставить("Услуги", Услуги);
	
	#КонецОбласти
	
	#Область ОплатаПлатежнымиКартами
	
	ОплатаКартами = РезультатыЗапроса[НомераТаблиц.Получить("ОплатаКартами")].Выгрузить();
	ОплатаКартами.Колонки.Добавить("ДоговорЭквайринга");
	ОплатаКартами.Колонки.Добавить("ЭквайринговыйТерминал");	
	Для Каждого Строка Из ОплатаКартами Цикл
	
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.Организация              = ДанныеИБ.Организация;
		ПараметрыПоУмолчанию.Контрагент               = Строка.Эквайрер;
		ПараметрыПоУмолчанию.ВидДоговора              = "Прочее";
		ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = Константы.ВалютаРегламентированногоУчета.Получить();
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = Ложь;	
	
		Строка.ЭквайринговыйТерминал = Новый Структура("Номер, Ссылка", СокрЛП(Строка.Номер), Строка.Ссылка);
		Строка.ДоговорЭквайринга     = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена);	
	
	КонецЦикла;
	ДанныеXDTO.Вставить("ОплатаПлатежнымиКартами", ОплатаКартами);
	
	#КонецОбласти
	
	#Область ОплатаСертификатами
	
	Если СвойствоФорматаОбмена(КомпонентыОбмена, "Документ.ОтчетОРозничныхПродажах.ОплатаСертификатами") Тогда
		ОплатаСертификатами = РезультатыЗапроса[НомераТаблиц.Получить("ОплатаСертификатами")].Выгрузить();	
		ОплатаСертификатами.Колонки.Добавить("ВидПодарочногоСертификата");
		Для Каждого ОС Из ОплатаСертификатами Цикл
			ОС.ВидПодарочногоСертификата = Новый Структура("Значение, ИмяПКО",
				ОС.ВидПодарочногоСертификатаСсылка, "Справочник_ВидыПодарочныхСертификатов");
		КонецЦикла;
		ДанныеXDTO.Вставить("ОплатаСертификатами", ОплатаСертификатами);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПодарочныеСертификаты
	
	Если СвойствоФорматаОбмена(КомпонентыОбмена, "Документ.ОтчетОРозничныхПродажах.ПодарочныеСертификаты") Тогда
		ПодарочныеСертификаты = РезультатыЗапроса[НомераТаблиц.Получить("ПодарочныеСертификаты")].Выгрузить();	
		ДанныеXDTO.Вставить("ПодарочныеСертификаты", ПодарочныеСертификаты);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОплатаПлатежнымиКартамиПодарочныхСертификатов
	
	// Оплата подарочных сертификатов платёжными картами.
	Если СвойствоФорматаОбмена(КомпонентыОбмена, "Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартамиПодарочныхСертификатов") Тогда
		
		ОплатаПСКартами = РезультатыЗапроса[НомераТаблиц.Получить("ОплатаПСКартами")].Выгрузить();
		ОплатаПСКартами.Колонки.Добавить("ДоговорЭквайринга");
		ОплатаПСКартами.Колонки.Добавить("ЭквайринговыйТерминал");
	
		ИндексЭквайрера = ОплатаПСКартами.Индексы.Добавить("Эквайрер");
	
		Для Каждого Строка Из ОплатаПСКартами Цикл
	
			ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
			ПараметрыПоУмолчанию.Организация              = ДанныеИБ.Организация;
			ПараметрыПоУмолчанию.Контрагент               = Строка.Эквайрер;
			ПараметрыПоУмолчанию.ВидДоговора              = "Прочее";
			ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = Константы.ВалютаРегламентированногоУчета.Получить();
			ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = Ложь;	
	
			Строка.ЭквайринговыйТерминал = Новый Структура("Номер, Ссылка", СокрЛП(Строка.Номер), Строка.Ссылка);
			Строка.ДоговорЭквайринга     = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена);	
			
		КонецЦикла;
	
		ДанныеXDTO.Вставить("ОплатаПлатежнымиКартамиПодарочныхСертификатов", ОплатаПСКартами);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область НачислениеБонусныхБаллов
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.6") Тогда
		НачислениеБонусныхБаллов = РезультатыЗапроса[НомераТаблиц.Получить("НачислениеБонусныхБаллов")].Выгрузить();
		НачислениеБонусныхБаллов.Колонки.Добавить("Контрагент");
		Для Каждого Строка Из НачислениеБонусныхБаллов Цикл
			Контрагент = ПартнерыИКонтрагенты.ПолучитьКонтрагентаПартнераПоУмолчанию(Строка.Партнер);
			Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
				Контрагент = КонтрагентИзПартнера(Строка.Партнер, КомпонентыОбмена);
			КонецЕсли;
			Строка.Контрагент = Контрагент;
		КонецЦикла;
		
		ДанныеXDTO.Вставить("НачислениеБонусныхБаллов", НачислениеБонусныхБаллов);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОплатаБонуснымиБаллами
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.6") Тогда
		ОплатаБонуснымиБаллами = РезультатыЗапроса[НомераТаблиц.Получить("ОплатаБонуснымиБаллами")].Выгрузить();
		ОплатаБонуснымиБаллами.Колонки.Добавить("Контрагент");
		Для Каждого Строка Из ОплатаБонуснымиБаллами Цикл
			Контрагент = ПартнерыИКонтрагенты.ПолучитьКонтрагентаПартнераПоУмолчанию(Строка.Партнер);
			Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
				Контрагент = КонтрагентИзПартнера(Строка.Партнер, КомпонентыОбмена);
			КонецЕсли;
			Строка.Контрагент = Контрагент;
		КонецЦикла;
		
		ДанныеXDTO.Вставить("ОплатаБонуснымиБаллами", ОплатаБонуснымиБаллами);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область АкцизныеМарки
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.7") Тогда
		АкцизныеМарки = РезультатыЗапроса[НомераТаблиц.Получить("АкцизныеМарки")].Выгрузить();	
		ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, АкцизныеМарки);
		ДанныеXDTO.Вставить("АкцизныеМарки", АкцизныеМарки);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область МаркировкиУпаковок
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.7") Тогда
		МаркировкиУпаковок = РезультатыЗапроса[НомераТаблиц.Получить("МаркировкиУпаковок")].Выгрузить();	
		ДанныеXDTO.Вставить("МаркировкиУпаковок", МаркировкиУпаковок);
	КонецЕсли;
	
	#КонецОбласти
КонецПроцедуры
