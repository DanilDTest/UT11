Процедура ПКО_Документ_НачисленияКредитовИДепозитов_Получение_ПередЗаписьюПолученныхДанных(ПолученныеДанные, ДанныеИБ, КонвертацияСвойств, КомпонентыОбмена)
	Если ДанныеИБ <> Неопределено Тогда
		// Переносим те свойства, которые указаны в ПКС
		ЗаполнитьСвойстваШапкиОбъекта(КонвертацияСвойств, ПолученныеДанные, ДанныеИБ);
		
		// Начисления
		МассивКлючевыхПолей = Новый Массив;
		МассивКлючевыхПолей.Добавить("Дата");
		МассивКлючевыхПолей.Добавить("Контрагент");
		МассивКлючевыхПолей.Добавить("Договор");
		МассивКлючевыхПолей.Добавить("ТипСуммыГрафика");
		МассивКлючевыхПолей.Добавить("ВалютаВзаиморасчетов");
		ЗаполнитьТабличнуюЧастьОбъектаНачальнымиДанными(
			ПолученныеДанные.Начисления,
			ДанныеИБ.Начисления,
			МассивКлючевыхПолей,
			"СуммаВзаиморасчетов");
		ДанныеИБ.Начисления.Загрузить(ПолученныеДанные.Начисления.Выгрузить());
	
		ПолученныеДанные = Неопределено;
	КонецЕсли;
	
	ДанныеДляЗаписиВИБ = ?(ДанныеИБ = Неопределено, ПолученныеДанные, ДанныеИБ);
	Для Каждого Стр Из ДанныеДляЗаписиВИБ.Начисления Цикл
		Если НЕ ЗначениеЗаполнено(Стр.СтатьяДоходовРасходов)
			и ЗначениеЗаполнено(ДанныеДляЗаписиВИБ.ХозяйственнаяОперация) Тогда
			
			Если ДанныеДляЗаписиВИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НачисленияПоКредитам Тогда
				Стр.СтатьяДоходовРасходов = ЭлементПоУмолчанию(КомпонентыОбмена, "СтатьяРасходовКредиты");
			Иначе
				Стр.СтатьяДоходовРасходов = ЭлементПоУмолчанию(КомпонентыОбмена, "СтатьяДоходовКредитыДепозиты");
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры
