Процедура ПКО_Справочник_Номенклатура_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	ЗаполнитьРеквизитыОбъектаПоДопРеквизитам(ДанныеXDTO, ПолученныеДанные); 
	
	ЗагрузитьДополнительныеРеквизиты(ПолученныеДанные, ДанныеXDTO, КомпонентыОбмена, Истина);      
	
	
	Если СвойствоФорматаОбмена(КомпонентыОбмена, "Справочник.ГруппыАналитическогоУчетаНоменклатуры")
		И ДанныеXDTO.Свойство("ГруппаАналитическогоУчета")
		И ЗначениеЗаполнено(ДанныеXDTO.ГруппаАналитическогоУчета) Тогда
		ПолученныеДанные.ДополнительныеСвойства.Вставить("ГруппаАналитическогоУчета",
			Новый Структура("Значение, ИмяПКО", ДанныеXDTO.ГруппаАналитическогоУчета, "Спр_ГруппыАналитическогоУчетаНоменклатуры"));
	КонецЕсли;
	
	Если ДанныеXDTO.Свойство("КодВидаНоменклатурнойКлассификации") 
		И ЗначениеЗаполнено(ДанныеXDTO.КодВидаНоменклатурнойКлассификации) Тогда
		
		ПолученныеДанные.ДополнительныеСвойства.Вставить("КодВидаНоменклатурнойКлассификации",
			ДанныеXDTO.КодВидаНоменклатурнойКлассификации);
			
		Если ЗначениеЗаполнено(КомпонентыОбмена.ПараметрыКонвертации.КодыВидовНоменклатурнойКлассификации) Тогда
			СтрКодов = КомпонентыОбмена.ПараметрыКонвертации.КодыВидовНоменклатурнойКлассификации.Найти(
				ДанныеXDTO.КодВидаНоменклатурнойКлассификации,
				"Код");
			Если ЗначениеЗаполнено(СтрКодов) Тогда
				ПолученныеДанные.ДополнительныеСвойства.Вставить("НаименованиеВидаНоменклатурнойКлассификации",
					СтрКодов.Наименование);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
