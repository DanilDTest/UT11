Процедура ПКО_Документ_СчетФактураПолученныйНалоговыйАгент_Получ_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	ПолученныеДанные.Проведен = Истина;
	
	Если НЕ ЗначениеЗаполнено(ПолученныеДанные.КодВидаОперации) Тогда
		ПолученныеДанные.КодВидаОперации = "42";
	КонецЕсли;
	
	Если ДанныеXDTO.Свойство("СпособВыставления") И ЗначениеЗаполнено(ДанныеXDTO.СпособВыставления) Тогда
		ПолученныеДанные.ПолученВЭлектронномВиде = (ДанныеXDTO.СпособВыставления.Значение = "ВЭлектронномВиде");
	КонецЕсли;
	
	Если ДанныеXDTO.Свойство("ИсправляемыйСчетФактура")
		И ЗначениеЗаполнено(ДанныеXDTO.ИсправляемыйСчетФактура) Тогда
		ПолученныеДанные.Исправление = Истина;
	КонецЕсли;
	
	ЗагрузитьДополнительныеРеквизиты(ПолученныеДанные, ДанныеXDTO, КомпонентыОбмена);
	
	ПравилаЗаполнения = Новый Соответствие;
	ПравилаЗаполнения.Вставить("ИсходныйДокумент", "ИсходныйДокумент");
	
	#Область ДокументыОснования
	
	МассивСтрокДокументы = Новый Массив;
	Если ДанныеXDTO.Свойство("ДокументыОснования") И ЗначениеЗаполнено(ДанныеXDTO.ДокументыОснования) Тогда
		ЭтоПерваяСтрока = Истина;
		Для Каждого Строка Из ДанныеXDTO.ДокументыОснования Цикл
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			
			Если ЗначениеЗаполнено(Строка.ДокументОснование) И ТипЗнч(Строка.ДокументОснование) = Тип("Структура") Тогда
				ДокОснование = ЗначениеВИнструкциюПКО(КомпонентыОбмена, Строка.ДокументОснование);
				Если ДокОснование <> Неопределено Тогда
					СтруктураДанныхСтроки.Вставить("ДокументОснование", ДокОснование);
				Иначе
					// строка с пустым документом основанием не имеет смысла.
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Если СтруктураДанныхСтроки.Свойство("ИсходныйДокумент")
				И ЗначениеЗаполнено(СтруктураДанныхСтроки.ИсходныйДокумент) Тогда
				
				Если СтруктураДанныхСтроки.ИсходныйДокумент.Свойство("Дата") Тогда
					СтруктураДанныхСтроки.Вставить("ДатаИсходногоДокумента",
						СтруктураДанныхСтроки.ИсходныйДокумент.Дата);
				КонецЕсли;
				Если СтруктураДанныхСтроки.ИсходныйДокумент.Свойство("Номер") Тогда
					СтруктураДанныхСтроки.Вставить("НомерИсходногоДокумента",
						СтруктураДанныхСтроки.ИсходныйДокумент.Номер);
				КонецЕсли;
				Если СтруктураДанныхСтроки.ИсходныйДокумент.Свойство("ДатаИсправления") Тогда
					СтруктураДанныхСтроки.Вставить("ДатаИсправленияИсходногоДокумента",
						СтруктураДанныхСтроки.ИсходныйДокумент.ДатаИсправления);
				КонецЕсли;
				Если СтруктураДанныхСтроки.ИсходныйДокумент.Свойство("НомерИсправления") Тогда
					СтруктураДанныхСтроки.Вставить("НомерИсправленияИсходногоДокумента",
						СтруктураДанныхСтроки.ИсходныйДокумент.НомерИсправления);
				КонецЕсли;
				
				ПолученныеДанные.Корректировочный = Истина;
			КонецЕсли;
			
			Если ЭтоПерваяСтрока Тогда
				Если ДанныеXDTO.Свойство("Сумма") Тогда
					СтруктураДанныхСтроки.Вставить("Сумма", ДанныеXDTO.Сумма);
				КонецЕсли;
				Если ДанныеXDTO.Свойство("СуммаНДС") Тогда
					СтруктураДанныхСтроки.Вставить("СуммаНДС", ДанныеXDTO.СуммаНДС);
				КонецЕсли;
				Если ДанныеXDTO.Свойство("СтавкаНДС") Тогда
					СтруктураДанныхСтроки.Вставить("СтавкаНДС", ДанныеXDTO.СтавкаНДС);
				КонецЕсли;
				ЭтоПерваяСтрока = Ложь;
			КонецЕсли;
			
			МассивСтрокДокументы.Добавить(СтруктураДанныхСтроки);
		КонецЦикла;
	
	КонецЕсли;
	
	Если МассивСтрокДокументы.Количество() > 0 Тогда
		ПолученныеДанные.ДополнительныеСвойства.Вставить("ДокументыОснования", МассивСтрокДокументы);
	КонецЕсли;
	
	#КонецОбласти
КонецПроцедуры
