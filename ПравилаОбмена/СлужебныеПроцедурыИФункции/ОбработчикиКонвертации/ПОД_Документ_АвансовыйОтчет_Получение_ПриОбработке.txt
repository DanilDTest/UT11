Процедура ПОД_Документ_АвансовыйОтчет_Получение_ПриОбработке(ДанныеXDTO, ИспользованиеПКО, КомпонентыОбмена)
	ИспользованиеПКО.Документ_ПТУЧерезПодотчетноеЛицо_Получение = Ложь;
			
	#Область МультивалютныеАО
	
	// При выгрузке мультивалютных авансовых отчетов ссылка передается только вместе
	// с авансовым отчетом регламентированной валюты.
	// При этом в номер добавляется пользовательский префикс валюты.
	// Такие авансовые отчеты в обратную сторону загружать не следует.
	ПользовательскийПрефикс = ПрефиксацияОбъектовКлиентСервер.ПользовательскийПрефикс(ДанныеXDTO.КлючевыеСвойства.Номер);
	Если ЗначениеЗаполнено(ПользовательскийПрефикс) Тогда
		// Выполним поиск пользовательского префикса среди префиксов валют.
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ПользовательскийПрефикс", ПользовательскийПрефикс + "%");
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Валюты.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Валюты КАК Валюты
			|ГДЕ
			|	Валюты.Наименование ПОДОБНО &ПользовательскийПрефикс";
		
		Если Запрос.Выполнить().Выбрать().Количество() > 0 Тогда
			НомерДокумента = ДанныеXDTO.КлючевыеСвойства.Номер;
			// Удалим из номера документа пользовательский префикс.
			НомерБезПрефикса = СтрЗаменить(НомерДокумента, ПользовательскийПрефикс, "");
			НомерБезПрефиксов = ПрефиксацияОбъектовКлиентСервер.УдалитьПрефиксыИзНомераОбъекта(НомерБезПрефикса, Истина, Истина);
			СтандартныйПрефикс = СтрЗаменить(НомерБезПрефикса, НомерБезПрефиксов, "");
			НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(НомерДокумента, Истина, Истина);
			
			НомерДокумента = СтандартныйПрефикс
				+ СтроковыеФункцииКлиентСервер.ДополнитьСтроку(НомерНаПечать, 11 - СтрДлина(СтандартныйПрефикс));
				
			// Выполним поиск авансовго отчета по номеру без пользовательского префикса.
			ПодотчетноеЛицо = RM_ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(
				КомпонентыОбмена,
				ДанныеXDTO.ПодотчетноеЛицо,
				RM_ОбменДаннымиXDTOСервер.ПКОПоИмени(КомпонентыОбмена, "Справочник_ФизическиеЛица_Получение"), 
				"ПолучитьСсылку").Ссылка;
				
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Дата", ДанныеXDTO.КлючевыеСвойства.Дата);
			Запрос.УстановитьПараметр("Номер", НомерДокумента);
			Запрос.УстановитьПараметр("ПодотчетноеЛицо", ПодотчетноеЛицо);
			Запрос.Текст =
				"ВЫБРАТЬ
				|	АвансовыйОтчет.Ссылка КАК Ссылка
				|ИЗ
				|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
				|ГДЕ
				|	АвансовыйОтчет.Дата = &Дата
				|	И АвансовыйОтчет.Номер = &Номер
				|	И АвансовыйОтчет.Мультивалютный
				|	И АвансовыйОтчет.ПодотчетноеЛицо = &ПодотчетноеЛицо";
				
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ИспользованиеПКО.Документ_АвансовыйОтчет_Получение = Ложь;
				
				ШаблонПредупреждения = НСтр("ru = 'Авансовый отчет №%1 от %2 не может быть загружен.
					|Загрузка ранее выгруженных мультивалютных авансовых отчетов не поддерживается.
					|Документ первоисточник: %3';
					|en = 'Expense report №%1 from %2 cannot be imported.
					|Import of previously exported multicurrency expense reports is not supported.
					|Document source: %3'");
				
				ТекстПредупреждения = СтрШаблон(ШаблонПредупреждения,
					ДанныеXDTO.КлючевыеСвойства.Номер,
					ДанныеXDTO.КлючевыеСвойства.Дата,
					Выборка.Ссылка);
				
				КомпонентыОбмена.СостояниеОбменаДанными.РезультатВыполненияОбмена = Перечисления.РезультатыВыполненияОбмена.ВыполненоСПредупреждениями; 
				RM_ОбменДаннымиXDTOСервер.ЗаписатьВПротоколВыполнения(
					КомпонентыОбмена, ТекстПредупреждения, Неопределено, Ложь);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	
	#Область ПТУЧерезПодотчетноеЛицо
	
	Если ДанныеXDTO.Свойство("Товары") И ДанныеXDTO.Товары.Количество() > 0 Тогда
		
		ДатаНачалаПечатиЕдиногоАвансовогоОтчета = Константы.ДатаНачалаПечатиЕдиногоАвансовогоОтчета.Получить();
		Если ДанныеXDTO.КлючевыеСвойства.Дата < ДатаНачалаПечатиЕдиногоАвансовогоОтчета Тогда 
			ИспользованиеПКО.Документ_АвансовыйОтчет_Получение = Ложь;
			ИспользованиеПКО.Документ_ПТУЧерезПодотчетноеЛицо_Получение = Истина;
			Возврат;
		КонецЕсли;
		
		АвансовыйОтчет = RM_ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(
			КомпонентыОбмена,
			ДанныеXDTO.КлючевыеСвойства,
			RM_ОбменДаннымиXDTOСервер.ПКОПоИмени(КомпонентыОбмена, "Документ_АвансовыйОтчет_Получение"), 
			"ПолучитьСсылку");
			
		ДанныеXDTO.Вставить("АвансовыйОтчет", ДанныеXDTO.КлючевыеСвойства);
			
		КлючевыеПоляПоступления = "Поставщик, ДатаВходящегоДокумента, НомерВходящегоДокумента";
		КлючиДокументовПоступления = ДанныеXDTO.Товары.Скопировать();
		КлючиДокументовПоступления.Свернуть(КлючевыеПоляПоступления);
		
		ЭтоНовыйАвансовыйОтчет = ТипЗнч(АвансовыйОтчет) = Тип("ДокументОбъект.АвансовыйОтчет");
		
		Если ЭтоНовыйАвансовыйОтчет И КлючиДокументовПоступления.Количество() = 1 Тогда
			ИспользованиеПКО.Документ_ПТУЧерезПодотчетноеЛицо_Получение = Истина;
		Иначе
			// ПТУ будут создаваться из ПКО Авансового отчета.
			ДанныеXDTO.Вставить("КлючиДокументовПоступления", КлючиДокументовПоступления);
			ДанныеXDTO.Вставить("КлючевыеПоляПоступления",    КлючевыеПоляПоступления);
			ДанныеXDTO.Вставить("ЭтоНовыйАвансовыйОтчет",     ЭтоНовыйАвансовыйОтчет);
			ДанныеXDTO.Вставить("АвансовыйОтчетСсылка",       АвансовыйОтчет.Ссылка);
			ИспользованиеПКО.Удалить("Документ_ПТУЧерезПодотчетноеЛицо_Получение");
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
КонецПроцедуры
