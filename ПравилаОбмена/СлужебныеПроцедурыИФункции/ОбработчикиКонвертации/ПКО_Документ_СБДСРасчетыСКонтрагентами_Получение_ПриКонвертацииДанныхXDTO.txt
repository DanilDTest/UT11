Процедура ПКО_Документ_СБДСРасчетыСКонтрагентами_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	ПолученныеДанные.Проведен = Истина;
	ПолученныеДанные.ПроведеноБанком = ЗначениеЗаполнено(ПолученныеДанные.ДатаПроведенияБанком);
	ДобавитьВалютуВДопСвойства(ПолученныеДанные, ДанныеXDTO);
	ВидРасчетов = "СПоставщиком";
	Если ДанныеXDTO.Свойство("ВидРасчетов") Тогда
		ВидРасчетов = ДанныеXDTO.ВидРасчетов.Значение;
	КонецЕсли;
	
	Если ВидРасчетов = "СПоставщиком" Тогда
		ПолученныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику;
	ИначеЕсли ВидРасчетов = "СПокупателем" Тогда
		ПолученныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту;
	Иначе
		ПолученныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств;
	КонецЕсли;
	// Другие значения; ОплатаПоКредитам, ВыплатаПоДепозитам, ВыплатаПоЗаймамВыданным - по ТЧ РасшифровкаПлатежа.
	Если ДанныеXDTO.РасшифровкаПлатежа.Количество() = 1 Тогда
		ВидРасчетовРасширенный = ДанныеXDTO.РасшифровкаПлатежа[0].ВидРасчетовРасширенный;
		Если Найти(НРЕГ(ВидРасчетовРасширенный), "займ") > 0 Тогда
			ПолученныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов;
		КонецЕсли;
		Если Найти(НРЕГ(ВидРасчетовРасширенный), "кредит") > 0 Тогда
			ПолученныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам;
		КонецЕсли;
	КонецЕсли;
	
	// СтатьяДвиженияДенежныхСредств
	СтатьяДДС = ДанныеXDTO.РасшифровкаПлатежа[0].СтатьяДДС;
	Если ЗначениеЗаполнено(СтатьяДДС)
		И (ПолученныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств
		ИЛИ ДанныеXDTO.РасшифровкаПлатежа.Количество() = 1) Тогда
		
		ПолученныеДанные.ДополнительныеСвойства.Вставить("СтатьяДвиженияДенежныхСредств", СтатьяДДС);
	КонецЕсли;
	
	ЗагрузитьДополнительныеРеквизиты(ПолученныеДанные, ДанныеXDTO, КомпонентыОбмена);
	
	// Расшифровка платежа
	ЗаполнятьДоговор = (ВидРасчетов = "СПокупателем" И КомпонентыОбмена.ПараметрыКонвертации.ИспользуютсяДоговорыСКлиентами)
					ИЛИ (ВидРасчетов = "СПоставщиком" И КомпонентыОбмена.ПараметрыКонвертации.ИспользуютсяДоговорыСПоставщиками);
	
	
	МассивСтрокРасшифровкаПлатежа = Новый Массив;
	ПравилаЗаполнения = Новый Соответствие;
	ПравилаЗаполнения.Вставить("Сумма", "Сумма");
	ПравилаЗаполнения.Вставить("СуммаВзаиморасчетов", "СуммаВзаиморасчетов");
	ПравилаЗаполнения.Вставить("СтатьяДвиженияДенежныхСредств", "СтатьяДДС");
	ПравилаЗаполнения.Вставить("СтавкаНДС", "СтавкаНДС");
	ПравилаЗаполнения.Вставить("СуммаНДС", "СуммаНДС");
	
	Для Каждого СтрокаXDTO Из ДанныеXDTO.РасшифровкаПлатежа Цикл
		СтруктураДанныхСтроки = Новый Структура;
		ЗаполнитьСтруктуруДанныхСтроки(ПравилаЗаполнения, СтрокаXDTO, СтруктураДанныхСтроки);
		ДобавитьВалютуВРасшифровкуПлатежа(СтруктураДанныхСтроки, СтрокаXDTO);
		
		ИнструкцияЗаказ = Неопределено;
		Если ЗначениеЗаполнено(СтрокаXDTO.ДокументРасчетов) Тогда
			ИнструкцияЗаказ = ЗначениеВИнструкциюПКО(КомпонентыОбмена, СтрокаXDTO.ДокументРасчетов);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ИнструкцияЗаказ) И ЗначениеЗаполнено(СтрокаXDTO.Заказ) Тогда
			ИнструкцияЗаказ = ЗначениеВИнструкциюПКО(КомпонентыОбмена, СтрокаXDTO.Заказ);
		КонецЕсли; 
		Если ЗначениеЗаполнено(ИнструкцияЗаказ) Тогда
		    СтруктураДанныхСтроки.Вставить("Заказ", ИнструкцияЗаказ);	
		Иначе
			ДобавитьДоговорВРасшифровкуПлатежа(ЗаполнятьДоговор, СтруктураДанныхСтроки, СтрокаXDTO);
		КонецЕсли;
		
		МассивСтрокРасшифровкаПлатежа.Добавить(СтруктураДанныхСтроки);
	КонецЦикла;
	
	ПолученныеДанные.ДополнительныеСвойства.Вставить("РасшифровкаПлатежа", МассивСтрокРасшифровкаПлатежа);
КонецПроцедуры
