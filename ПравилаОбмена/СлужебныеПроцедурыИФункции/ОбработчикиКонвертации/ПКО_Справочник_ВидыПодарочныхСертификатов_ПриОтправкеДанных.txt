Процедура ПКО_Справочник_ВидыПодарочныхСертификатов_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	ТипПериодаДействия = Неопределено;
	КоличествоПериодовДействия = Неопределено;
	Если ДанныеИБ.ПериодДействия = Перечисления.Периодичность.День Тогда
		ТипПериодаДействия = "День";
		КоличествоПериодовДействия = ДанныеИБ.КоличествоПериодовДействия;
	ИначеЕсли ДанныеИБ.ПериодДействия = Перечисления.Периодичность.Неделя Тогда
		ТипПериодаДействия = "День";
		КоличествоПериодовДействия = ДанныеИБ.КоличествоПериодовДействия * 7;
	ИначеЕсли ДанныеИБ.ПериодДействия = Перечисления.Периодичность.Декада Тогда
		ТипПериодаДействия = "День";
		КоличествоПериодовДействия = ДанныеИБ.КоличествоПериодовДействия * 10;
	ИначеЕсли ДанныеИБ.ПериодДействия = Перечисления.Периодичность.Месяц Тогда
		ТипПериодаДействия = "Месяц";
		КоличествоПериодовДействия = ДанныеИБ.КоличествоПериодовДействия;
	ИначеЕсли ДанныеИБ.ПериодДействия = Перечисления.Периодичность.Квартал Тогда
		ТипПериодаДействия = "Месяц";
		КоличествоПериодовДействия = ДанныеИБ.КоличествоПериодовДействия * 3;
	ИначеЕсли ДанныеИБ.ПериодДействия = Перечисления.Периодичность.Полугодие Тогда
		ТипПериодаДействия = "Месяц";
		КоличествоПериодовДействия = ДанныеИБ.КоличествоПериодовДействия * 6;
	ИначеЕсли ДанныеИБ.ПериодДействия = Перечисления.Периодичность.Год Тогда
		ТипПериодаДействия = "Месяц";
		КоличествоПериодовДействия = ДанныеИБ.КоличествоПериодовДействия * 12;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТипПериодаДействия) И ЗначениеЗаполнено(КоличествоПериодовДействия) Тогда
		ДанныеXDTO.Вставить("ТипПериодаДействия", ТипПериодаДействия);
		ДанныеXDTO.Вставить("КоличествоПериодовДействия", КоличествоПериодовДействия);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВидыПодарочныхСертификатовШаблоныКодовПодарочныхСертификатов.НомерСтроки КАК НомерСтроки,
		|	ВидыПодарочныхСертификатовШаблоныКодовПодарочныхСертификатов.ДлинаШтрихкода КАК ДлинаШтрихкода,
		|	ВидыПодарочныхСертификатовШаблоныКодовПодарочныхСертификатов.НачалоДиапазонаШтрихкода КАК НачалоДиапазонаШтрихкода,
		|	ВидыПодарочныхСертификатовШаблоныКодовПодарочныхСертификатов.КонецДиапазонаШтрихкода КАК КонецДиапазонаШтрихкода,
		|	ВидыПодарочныхСертификатовШаблоныКодовПодарочныхСертификатов.ДлинаМагнитногоКода КАК ДлинаМагнитногоКода,
		|	ВидыПодарочныхСертификатовШаблоныКодовПодарочныхСертификатов.НачалоДиапазонаМагнитногоКода КАК НачалоДиапазонаМагнитногоКода,
		|	ВидыПодарочныхСертификатовШаблоныКодовПодарочныхСертификатов.КонецДиапазонаМагнитногоКода КАК КонецДиапазонаМагнитногоКода,
		|	ВидыПодарочныхСертификатовШаблоныКодовПодарочныхСертификатов.ШаблонМагнитнойКарты КАК ШаблонМагнитнойКарты
		|ПОМЕСТИТЬ втШаблоныКодовПС
		|ИЗ
		|	Справочник.ВидыПодарочныхСертификатов.ШаблоныКодовПодарочныхСертификатов КАК ВидыПодарочныхСертификатовШаблоныКодовПодарочныхСертификатов
		|ГДЕ
		|	ВидыПодарочныхСертификатовШаблоныКодовПодарочныхСертификатов.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты КАК ШаблонМагнитнойКарты,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.ДоступностьДорожки1 КАК ДоступностьДорожки,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.Префикс1 КАК Префикс,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.Суффикс1 КАК Суффикс,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.ДлинаКода1 КАК ДлинаКода,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.РазделительБлоков1 КАК РазделительБлоков,
		|	ШаблоныМагнитныхКартПоляДорожки1.Поле КАК Поле,
		|	ШаблоныМагнитныхКартПоляДорожки1.НомерБлока КАК НомерБлока,
		|	ШаблоныМагнитныхКартПоляДорожки1.НомерПервогоСимволаПоля КАК НомерПервогоСимволаПоля,
		|	ШаблоныМагнитныхКартПоляДорожки1.ДлинаПоля КАК ДлинаПоля,
		|	""Дорожка1"" КАК Дорожка
		|ИЗ
		|	втШаблоныКодовПС КАК втШаблоныКодовПС
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШаблоныМагнитныхКарт.ПоляДорожки1 КАК ШаблоныМагнитныхКартПоляДорожки1
		|		ПО втШаблоныКодовПС.ШаблонМагнитнойКарты = ШаблоныМагнитныхКартПоляДорожки1.Ссылка
		|			И (втШаблоныКодовПС.ШаблонМагнитнойКарты.ДоступностьДорожки1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.ДоступностьДорожки2,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.Префикс2,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.Суффикс2,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.ДлинаКода2,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.РазделительБлоков2,
		|	ШаблоныМагнитныхКартПоляДорожки2.Поле,
		|	ШаблоныМагнитныхКартПоляДорожки2.НомерБлока,
		|	ШаблоныМагнитныхКартПоляДорожки2.НомерПервогоСимволаПоля,
		|	ШаблоныМагнитныхКартПоляДорожки2.ДлинаПоля,
		|	""Дорожка2""
		|ИЗ
		|	втШаблоныКодовПС КАК втШаблоныКодовПС
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШаблоныМагнитныхКарт.ПоляДорожки2 КАК ШаблоныМагнитныхКартПоляДорожки2
		|		ПО втШаблоныКодовПС.ШаблонМагнитнойКарты = ШаблоныМагнитныхКартПоляДорожки2.Ссылка
		|			И (втШаблоныКодовПС.ШаблонМагнитнойКарты.ДоступностьДорожки2)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.ДоступностьДорожки3,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.Префикс3,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.Суффикс3,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.ДлинаКода3,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты.РазделительБлоков3,
		|	ШаблоныМагнитныхКартПоляДорожки3.Поле,
		|	ШаблоныМагнитныхКартПоляДорожки3.НомерБлока,
		|	ШаблоныМагнитныхКартПоляДорожки3.НомерПервогоСимволаПоля,
		|	ШаблоныМагнитныхКартПоляДорожки3.ДлинаПоля,
		|	""Дорожка3""
		|ИЗ
		|	втШаблоныКодовПС КАК втШаблоныКодовПС
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШаблоныМагнитныхКарт.ПоляДорожки3 КАК ШаблоныМагнитныхКартПоляДорожки3
		|		ПО втШаблоныКодовПС.ШаблонМагнитнойКарты = ШаблоныМагнитныхКартПоляДорожки3.Ссылка
		|			И (втШаблоныКодовПС.ШаблонМагнитнойКарты.ДоступностьДорожки3)
		|ИТОГИ ПО
		|	ШаблонМагнитнойКарты,
		|	Дорожка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втШаблоныКодовПС.НомерСтроки КАК НомерСтроки,
		|	втШаблоныКодовПС.ДлинаШтрихкода КАК ДлинаШтрихкода,
		|	втШаблоныКодовПС.НачалоДиапазонаШтрихкода КАК НачалоДиапазонаШтрихкода,
		|	втШаблоныКодовПС.КонецДиапазонаШтрихкода КАК КонецДиапазонаШтрихкода,
		|	втШаблоныКодовПС.ДлинаМагнитногоКода КАК ДлинаМагнитногоКода,
		|	втШаблоныКодовПС.НачалоДиапазонаМагнитногоКода КАК НачалоДиапазонаМагнитногоКода,
		|	втШаблоныКодовПС.КонецДиапазонаМагнитногоКода КАК КонецДиапазонаМагнитногоКода,
		|	втШаблоныКодовПС.ШаблонМагнитнойКарты КАК ШаблонМагнитнойКартыСсылка
		|ИЗ
		|	втШаблоныКодовПС КАК втШаблоныКодовПС";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	
	Результат = Запрос.ВыполнитьПакет();
	Шаблоны = Новый Соответствие;
	СтруктураШаблонов = Новый Структура("Дорожка1, Дорожка2, Дорожка3");
	
	
	ВыборкаШаблоны = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаШаблоны.Следующий() Цикл
		ВыборкаДорожки = ВыборкаШаблоны.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДорожки.Следующий() Цикл
			ПоляДорожки 		= Новый Массив;
			СтруктураДорожки 	= Новый Структура("ДоступностьДорожки, Префикс, Суффикс, ДлинаКода, РазделительБлоков, ПоляДорожки");
			
			ЗаполнитьЗначенияСвойств(СтруктураДорожки, ВыборкаДорожки);
			
			ВыборкаПоляДорожки = ВыборкаДорожки.Выбрать();
			Пока ВыборкаПоляДорожки.Следующий() Цикл
				СтруктураПолейДорожки 	= Новый Структура("Поле, НомерБлока, НомерПервогоСимволаПоля, ДлинаПоля");
				ЗаполнитьЗначенияСвойств(СтруктураПолейДорожки, ВыборкаПоляДорожки);
				ПоляДорожки.Добавить(СтруктураПолейДорожки);
			КонецЦикла;
			
			СтруктураДорожки.ПоляДорожки = ПоляДорожки;
			
			СтруктураШаблонов[ВыборкаДорожки.Дорожка] = СтруктураДорожки;
		КонецЦикла;
		
		Шаблоны.Вставить(ВыборкаШаблоны.ШаблонМагнитнойКарты, СтруктураШаблонов);
	КонецЦикла;
	
	ШаблоныКодов = Результат[2].Выгрузить();
	ШаблоныКодов.Колонки.Добавить("ШаблонМагнитнойКарты");
	Для Каждого Строка Из ШаблоныКодов Цикл
		Если ЗначениеЗаполнено(Строка.ШаблонМагнитнойКартыСсылка) Тогда
			Если Шаблоны[Строка.ШаблонМагнитнойКартыСсылка] <> Неопределено  Тогда
				Строка.ШаблонМагнитнойКарты = ЗначениеВСтрокуВнутр(Шаблоны[Строка.ШаблонМагнитнойКартыСсылка]);
			Иначе
				Строка.ШаблонМагнитнойКарты = "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ДанныеXDTO.Вставить("ШаблоныКодов", ШаблоныКодов);
КонецПроцедуры
