Процедура ПКО_Документ_ЗаказПоставщику_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	ПолученныеДанные.Проведен    = Истина;
	ПолученныеДанные.Согласован  = Истина;
	ПолученныеДанные.ХозяйственнаяОперация  = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыЗаказовПоставщикам") Тогда
		ПолученныеДанные.Статус  = Перечисления.СтатусыЗаказовПоставщикам.Согласован;
	Иначе
		ПолученныеДанные.Статус  = Перечисления.СтатусыЗаказовПоставщикам.Закрыт;
	КонецЕсли;
	
	ДобавитьВалютуВДопСвойства(ПолученныеДанные, ДанныеXDTO);
	ДобавитьДоговорВДопСвойства(ПолученныеДанные, ДанныеXDTO, КомпонентыОбмена);
	
	ПравилаЗаполнения = Новый Соответствие;
	ПравилаЗаполнения.Вставить("Номенклатура",   "Номенклатура");
	ПравилаЗаполнения.Вставить("SKUКонтрагента", "НоменклатураПартнера");
	ПравилаЗаполнения.Вставить("Количество",     "Количество");
	ПравилаЗаполнения.Вставить("Сумма",          "Сумма");
	ПравилаЗаполнения.Вставить("Цена",           "Цена");
	ПравилаЗаполнения.Вставить("СтавкаНДС",      "СтавкаНДС");
	ПравилаЗаполнения.Вставить("СуммаНДС",       "СуммаНДС");
	Если ЗначениеФО("ИспользоватьХарактеристикиНоменклатуры", КомпонентыОбмена) Тогда
		ПравилаЗаполнения.Вставить("Характеристика",     "Характеристика");
	КонецЕсли;
	Если ЗначениеФО("ИспользоватьУпаковкиНоменклатуры", КомпонентыОбмена) Тогда
		ПравилаЗаполнения.Вставить("Упаковка",           "Упаковка");
		ПравилаЗаполнения.Вставить("КоличествоУпаковок", "КоличествоУпаковок");
	КонецЕсли;
	ПравилаЗаполнения.Вставить("ОжидаемаяДатаПоставки", "ДатаПоступления");
	
	ЗагрузитьДополнительныеРеквизиты(ПолученныеДанные, ДанныеXDTO, КомпонентыОбмена);
	
	ПоступлениеОднойДатой = Ложь;
	Если ДанныеXDTO.Свойство("ОтгружатьЗаказЦеликом") Тогда
		ПоступлениеОднойДатой = ДанныеXDTO.ОтгружатьЗаказЦеликом;
	КонецЕсли;
	
	ПолученныеДанные.ПоступлениеОднойДатой = ПоступлениеОднойДатой;
		
	ДатаПоступленияШапки = Дата(1,1,1,0,0,0);
	Если ДанныеXDTO.Свойство("ОжидаемаяДатаПоставки") И ДанныеXDTO.ОжидаемаяДатаПоставки <> Неопределено Тогда
		ДатаПоступленияШапки = ДанныеXDTO.ОжидаемаяДатаПоставки;
	КонецЕсли;
	
	// Товары 
	МассивСтрокТовары = Новый Массив;
	Если ДанныеXDTO.Свойство("Товары")
		И ЗначениеЗаполнено(ДанныеXDTO.Товары) Тогда
		
		Для Каждого Строка Из ДанныеXDTO.Товары Цикл
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			СуммаСНДС = Строка.Сумма;
			Если СтруктураДанныхСтроки.Свойство("СуммаНДС") И НЕ ПолученныеДанные.ЦенаВключаетНДС Тогда
				СуммаСНДС = СуммаСНДС + СтруктураДанныхСтроки.СуммаНДС
			КонецЕсли;
			
			СтруктураДанныхСтроки.Вставить("СуммаСНДС", СуммаСНДС);
			Если СтруктураДанныхСтроки.Свойство("КоличествоУпаковок") И СтруктураДанныхСтроки.КоличествоУпаковок Тогда
			    Если СтруктураДанныхСтроки.Свойство("Упаковка") И СтруктураДанныхСтроки.Свойство("Сумма") Тогда
					СтруктураДанныхСтроки.Вставить("Цена", СтруктураДанныхСтроки.Сумма / СтруктураДанныхСтроки.КоличествоУпаковок);
				КонецЕсли;
			Иначе
				СтруктураДанныхСтроки.Вставить("КоличествоУпаковок", СтруктураДанныхСтроки.Количество);
			КонецЕсли;
			ОбработатьСтавкуНДСПриПолучении(Строка, СтруктураДанныхСтроки, ПолученныеДанные, КомпонентыОбмена.ПараметрыКонвертации);
	
			Если ПоступлениеОднойДатой = Истина Или Не СтруктураДанныхСтроки.Свойство("ДатаПоступления") Тогда
				СтруктураДанныхСтроки.Вставить("ДатаПоступления", ДатаПоступленияШапки);
			Иначе
				ДатаПоступленияШапки = Макс(ДатаПоступленияШапки, Дата(СтруктураДанныхСтроки.ДатаПоступления));
			КонецЕсли;
	
			МассивСтрокТовары.Добавить(СтруктураДанныхСтроки);
		КонецЦикла;
	КонецЕсли;
	
	// Услуги  загружаются в ТЧ Товары с другим видом запасов.
	Если ДанныеXDTO.Свойство("Услуги")
		И ЗначениеЗаполнено(ДанныеXDTO.Услуги) Тогда
	
		Для Каждого Строка Из ДанныеXDTO.Услуги Цикл
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			СуммаСНДС = Строка.Сумма;
			Если СтруктураДанныхСтроки.Свойство("СуммаНДС") И НЕ ПолученныеДанные.ЦенаВключаетНДС Тогда
				СуммаСНДС = СуммаСНДС + СтруктураДанныхСтроки.СуммаНДС
			КонецЕсли;
			
			СтруктураДанныхСтроки.Вставить("СуммаСНДС", СуммаСНДС);
			СтруктураДанныхСтроки.Вставить("КоличествоУпаковок", СтруктураДанныхСтроки.Количество);
			ОбработатьСтавкуНДСПриПолучении(Строка, СтруктураДанныхСтроки, ПолученныеДанные, КомпонентыОбмена.ПараметрыКонвертации);
	
			Если ПоступлениеОднойДатой = Истина Или Не СтруктураДанныхСтроки.Свойство("ДатаПоступления") Тогда
				СтруктураДанныхСтроки.Вставить("ДатаПоступления", ДатаПоступленияШапки);
			Иначе
				ДатаПоступленияШапки = Макс(ДатаПоступленияШапки, Дата(СтруктураДанныхСтроки.ДатаПоступления));
			КонецЕсли;
	
			МассивСтрокТовары.Добавить(СтруктураДанныхСтроки);
		КонецЦикла;
	КонецЕсли;
	
	Если МассивСтрокТовары.Количество() > 0 Тогда
		ПолученныеДанные.ДополнительныеСвойства.Вставить("Товары", МассивСтрокТовары);
	КонецЕсли;
	
	//Если ПоступлениеОднойДатой = Ложь Тогда
	ПолученныеДанные.ДатаПоступления = ДатаПоступленияШапки;
	//КонецЕсли;
	
	// Этапы графика оплаты
	Если ДанныеXDTO.Свойство("ЭтапыОплаты")
		И ЗначениеЗаполнено(ДанныеXDTO.ЭтапыОплаты) Тогда
		
		ПравилаЗаполнения = Новый Соответствие;
		ПравилаЗаполнения.Вставить("ВариантОплаты", "ВариантОплаты");
		ПравилаЗаполнения.Вставить("ДатаПлатежа", "ДатаПлатежа");
		ПравилаЗаполнения.Вставить("ПроцентПлатежа","ПроцентПлатежа");
		ПравилаЗаполнения.Вставить("КоличествоДнейОтсрочки", "Сдвиг");
		ПравилаЗаполнения.Вставить("СуммаПлатежа", "СуммаПлатежа");
		
		ДанныеXDTO.Вставить("ФормаОплаты", ДанныеXDTO.ЭтапыОплаты[0].ФормаОплаты);
		
		ЭтапыГрафикаОплаты = Новый Массив;
		Для Каждого ЭтапОплатыXDTO Из ДанныеXDTO.ЭтапыОплаты Цикл
			ЭтапГрафикаОплаты = ДанныеКоллекцииВВидеСтруктуры(ЭтапОплатыXDTO, ПравилаЗаполнения);
	
			ЭтапыГрафикаОплаты.Добавить(ЭтапГрафикаОплаты);
		КонецЦикла;
		
	
		Если ЭтапыГрафикаОплаты.Количество() > 0 Тогда
			ПолученныеДанные.ДополнительныеСвойства.Вставить("ЭтапыГрафикаОплаты", ЭтапыГрафикаОплаты);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
