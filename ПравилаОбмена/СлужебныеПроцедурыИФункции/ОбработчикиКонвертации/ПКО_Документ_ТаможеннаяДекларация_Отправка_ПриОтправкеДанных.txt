Процедура ПКО_Документ_ТаможеннаяДекларация_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	ВыгрузитьПодразделение(ДанныеИБ, ДанныеXDTO);
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	// Данные шапки документа необходимы для вычисления
	// курса и кратности взаиморасчетов.
	ШапкаДокумента = 
		"ВЫБРАТЬ
		|	ДанныеШапкиДокумента.Валюта,
		|	ДанныеШапкиДокумента.ВалютаВзаиморасчетов
		|ПОМЕСТИТЬ ДанныеШапкиДокумента
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеШапкиДокумента
		|ГДЕ
		|	ДанныеШапкиДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(КурсВалютыДокумента.Курс, 1) КАК КурсВзаиморасчетов,
		|	ЕСТЬNULL(КурсВалютыДокумента.Кратность, 1) КАК КратностьВзаиморасчетов
		|ИЗ
		|	ДанныеШапкиДокумента КАК ДанныеШапкиДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
		|				&Дата,
		|				Валюта В
		|					(ВЫБРАТЬ
		|						Док.ВалютаВзаиморасчетов
		|					ИЗ
		|						ДанныеШапкиДокумента КАК Док)) КАК КурсВалютыДокумента
		|		ПО ДанныеШапкиДокумента.ВалютаВзаиморасчетов = КурсВалютыДокумента.Валюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	Запрос = Новый Запрос;
	Запрос.Текст = ШапкаДокумента;
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Запрос.УстановитьПараметр("Дата", ДанныеИБ.Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ДанныеXDTO.Вставить("КурсВзаиморасчетов", Выборка.КурсВзаиморасчетов);
	ДанныеXDTO.Вставить("КратностьВзаиморасчетов", Выборка.КратностьВзаиморасчетов);
	ДанныеXDTO.Вставить("КурсДокумента", Выборка.КурсВзаиморасчетов);
	ДанныеXDTO.Вставить("КратностьДокумента", Выборка.КратностьВзаиморасчетов);
	
	// Дополнительные свойства для договора
	Если ЗначениеЗаполнено(ДанныеИБ.Договор) Тогда
		ДанныеXDTO.Вставить("Договор", ДанныеИБ.Договор);
		
		ПравилоДоговоры = КомпонентыОбмена.ПравилаОбработкиДанных.Найти("Справочник_ДоговорыКонтрагентов_Отправка", "Имя");
		Если Не ПравилоДоговоры = Неопределено Тогда
			RM_ОбменДаннымиXDTOСервер.ВыгрузкаОбъектаВыборки(КомпонентыОбмена, 
				ДанныеИБ.Договор, 
				ПравилоДоговоры);
		КонецЕсли;
	Иначе
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.Контрагент = ДанныеИБ.Контрагент;
		ПараметрыПоУмолчанию.Организация = ДанныеИБ.Организация;
		ПараметрыПоУмолчанию.ВалютаВзаиморасчетов = ДанныеИБ.ВалютаВзаиморасчетов;
		ПараметрыПоУмолчанию.ВидДоговора = "Прочее";
		ПараметрыПоУмолчанию.Дата = ДанныеИБ.Дата;
		ПараметрыПоУмолчанию.Номер = ДанныеИБ.Номер;
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = Ложь;
		
		Заказ = Новый Структура("Заказ, Соглашение, Сделка", Неопределено, ДанныеИБ.Соглашение, Неопределено);
		Договор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена, Заказ, ДанныеИБ);
		ДанныеXDTO.Вставить("Договор", Договор);
	КонецЕсли;
	
	// Табличные части
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДанныеТовары.НомерРаздела КАК НомерРаздела,
		|	ДанныеТовары.Номенклатура КАК Номенклатура,
		|	&ТекстЗапросаХарактеристика,
		|	ДанныеТовары.ДокументПоступления КАК ДокументПоступления,
		|	ДанныеТовары.Количество КАК Количество,
		|	ДанныеТовары.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
		|	ДанныеТовары.СуммаНДС КАК СуммаНДС,
		|	ДанныеТовары.СуммаПошлины КАК СуммаПошлины,
		|	ДанныеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
		|	&ТекстЗапросаСерия,
		|	&ТекстЗапросаУпаковка
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ДанныеТовары
		|ГДЕ
		|	ДанныеТовары.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеРазделы.НомерРаздела КАК НомерРаздела,
		|	ДанныеРазделы.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
		|	ДанныеРазделы.СтавкаНДС КАК СтавкаНДС,
		|	ДанныеРазделы.СуммаНДС КАК СуммаНДС,
		|	ВЫРАЗИТЬ(ДанныеРазделы.СтавкаПошлины КАК ЧИСЛО(10, 2)) КАК СтавкаПошлины,
		|	ДанныеРазделы.СуммаПошлины КАК СуммаПошлины
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт.Разделы КАК ДанныеРазделы
		|ГДЕ
		|	ДанныеРазделы.Ссылка = &Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаХарактеристика",
		ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "ДанныеТовары"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаУпаковка",
		ПолучитьТекстЗапросаУпаковки(КомпонентыОбмена, "ДанныеТовары"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаСерия",
		ПолучитьТекстЗапросаСерии(КомпонентыОбмена, "ДанныеТовары"));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Запрос.УстановитьПараметр("Дата", ДанныеИБ.Дата);
	
	Выборка = Запрос.ВыполнитьПакет();
	
	Товары = Выборка[0].Выгрузить();
	ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, Товары);
	
	ДанныеXDTO.Вставить("Товары", Товары);
	ДанныеXDTO.Вставить("Разделы", Выборка[1].Выгрузить());
КонецПроцедуры
