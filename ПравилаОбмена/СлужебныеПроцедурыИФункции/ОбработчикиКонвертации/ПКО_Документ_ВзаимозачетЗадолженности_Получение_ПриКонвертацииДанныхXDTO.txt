Процедура ПКО_Документ_ВзаимозачетЗадолженности_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	ПолученныеДанные.Проведен = Истина;
	Если ДанныеXDTO.ВидОперации.Значение = "ПроведениеВзаимозачета" Тогда
		ПолученныеДанные.ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.Произвольный;
	Иначе
		// вид операции определяется по типу расчетов дебиторской или кредиторской задолженности.
		ВидРасчетов = "";
		Если ДанныеXDTO.Свойство("ДебиторскаяЗадолженность") И ЗначениеЗаполнено(ДанныеXDTO.ДебиторскаяЗадолженность) 
			И ДанныеXDTO.ДебиторскаяЗадолженность.Количество() > 0 Тогда
			ВидРасчетов = ДанныеXDTO.ДебиторскаяЗадолженность[0].ВидРасчетов.Значение;
		ИначеЕсли ДанныеXDTO.Свойство("КредиторскаяЗадолженность") И ЗначениеЗаполнено(ДанныеXDTO.КредиторскаяЗадолженность) 
			И ДанныеXDTO.КредиторскаяЗадолженность.Количество() > 0 Тогда
			ВидРасчетов = ДанныеXDTO.КредиторскаяЗадолженность[0].ВидРасчетов.Значение;
		КонецЕсли;
		Если ВидРасчетов = "СПокупателем" Тогда
			ПолученныеДанные.ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.МеждуКлиентами;
		ИначеЕсли ВидРасчетов = "СПоставщиком" Тогда
			ПолученныеДанные.ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.МеждуПоставщиками;
		Иначе
			ПолученныеДанные.ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.Произвольный;
		КонецЕсли;
	КонецЕсли;
	ПравилаЗаполнения = Новый Соответствие;
	ПравилаЗаполнения.Вставить("Сумма",                "Сумма");
	ПравилаЗаполнения.Вставить("СуммаВзаиморасчетов",  "СуммаВзаиморасчетов");
	
	ЗагрузитьТЧКорректировкаДолга(КомпонентыОбмена, ДанныеXDTO, ПолученныеДанные, "ДебиторскаяЗадолженность", "ДебиторскаяЗадолженность", ПравилаЗаполнения);
	ЗагрузитьТЧКорректировкаДолга(КомпонентыОбмена, ДанныеXDTO, ПолученныеДанные, "КредиторскаяЗадолженность", "КредиторскаяЗадолженность", ПравилаЗаполнения);
КонецПроцедуры
