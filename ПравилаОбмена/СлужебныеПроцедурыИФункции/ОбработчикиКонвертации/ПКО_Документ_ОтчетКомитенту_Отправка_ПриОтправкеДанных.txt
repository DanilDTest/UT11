Процедура ПКО_Документ_ОтчетКомитенту_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	ВыгрузитьПодразделение(ДанныеИБ, ДанныеXDTO);
	
	// Дополнительные свойства для договора
	Если ЗначениеЗаполнено(ДанныеИБ.Договор) Тогда
		ДанныеXDTO.Вставить("Договор", ДанныеИБ.Договор);
	Иначе
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.Контрагент = ДанныеИБ.Контрагент;
		ПараметрыПоУмолчанию.Организация = ДанныеИБ.Организация;
		ПараметрыПоУмолчанию.ВалютаВзаиморасчетов = ДанныеИБ.Валюта;
		ПараметрыПоУмолчанию.ВидДоговора = "СКомитентом";
		ПараметрыПоУмолчанию.Дата = ДанныеИБ.Дата;
		ПараметрыПоУмолчанию.Номер = ДанныеИБ.Номер;
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = Ложь;
		
		Заказ = Новый Структура("Заказ, Соглашение, Сделка", Неопределено, ДанныеИБ.Соглашение, Неопределено);
		Договор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена, Заказ, ДанныеИБ);
		ДанныеXDTO.Вставить("Договор", Договор);
	КонецЕсли;
	
	// Увеличиваем суммы документа на модуль отрицательных сумм
	ЗапросОтрицательныеСуммы = Новый Запрос;
	ЗапросОтрицательныеСуммы.Текст = "ВЫБРАТЬ
	|ВЫБОР КОГДА СуммаПродажи < 0 ТОГДА
	|	(-1)*СуммаПродажи 
	|ИНАЧЕ 0 КОНЕЦ КАК СуммаПродажи,
	|ВЫБОР КОГДА СуммаВознаграждения < 0 ТОГДА
	|	(-1)*СуммаВознаграждения 
	|ИНАЧЕ 0 КОНЕЦ КАК СуммаВознаграждения
	|ИЗ Документ.ОтчетКомитенту.Товары
	|ГДЕ Ссылка = &Ссылка
	|	И (СуммаПродажи < 0 ИЛИ СуммаВознаграждения < 0)
	|ИТОГИ Сумма(СуммаПродажи), Сумма(СуммаВознаграждения) ПО ОБЩИЕ";
	ЗапросОтрицательныеСуммы.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	РезультатЗапроса = ЗапросОтрицательныеСуммы.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Выборка.Следующий();
		ДанныеXDTO.Вставить("Сумма", ДанныеИБ.СуммаДокумента + Выборка.СуммаПродажи);
		ДанныеXDTO.Вставить("СуммаВознаграждения", ДанныеИБ.СуммаВознаграждения + Выборка.СуммаВознаграждения);
	КонецЕсли;
	
	ВыгрузитьКурсИКратностьВзаиморасчетов(ДанныеXDTO, ДанныеИБ.Валюта, ДанныеИБ.Дата);
	
	ДанныеXDTO.Вставить("СуммаВключаетНДС", Истина);
	Если НЕ ЗначениеЗаполнено(ДанныеИБ.СтавкаНДСВознаграждения) Тогда
		ДанныеXDTO.Вставить("СтавкаНДСВознаграждения", "БезНДС");
	КонецЕсли;
	
	//Товары
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтрокиДокумента,
		|	Товары.Номенклатура КАК Номенклатура,
		|	&ТекстЗапросаХарактеристика,
		|	&ТекстЗапросаУпаковка,
		|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Товары.Количество КАК Количество,
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	ВЫБОР
		|		КОГДА Товары.СуммаПродажи / Товары.Количество < 0.01
		|			ТОГДА 0.01
		|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаПродажи / Товары.Количество КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК Цена,
		|	ВЫБОР
		|		КОГДА Товары.СуммаСНДС / Товары.Количество < 0.01
		|			ТОГДА 0.01
		|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаСНДС / Товары.Количество КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК ЦенаПоступления,
		|	ВЫБОР
		|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
		|				ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
		|			ТОГДА ВЫРАЗИТЬ(Товары.СуммаПродажи * 0.1 / 1.1 КАК ЧИСЛО(15, 2))
		|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
		|				ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
		|			ТОГДА ВЫРАЗИТЬ(Товары.СуммаПродажи * 0.18 / 1.18 КАК ЧИСЛО(15, 2))
		|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
		|				ИЛИ Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
		|			ТОГДА ВЫРАЗИТЬ(Товары.СуммаПродажи * 0.2 / 1.2 КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДС,
		|	Товары.СуммаСНДС КАК СуммаПоступления,
		|	Товары.СуммаПродажи КАК Сумма,
		|	Товары.СуммаВознаграждения КАК СуммаВознаграждения,
		|	ВЫРАЗИТЬ(&КоэффициентПересчета * Товары.СуммаВознаграждения КАК ЧИСЛО(15, 2)) КАК СуммаНДСВознаграждения,
		|	Товары.Покупатель КАК ПокупательИсточник,
		|	ВЫБОР
		|		КОГДА Товары.Покупатель ССЫЛКА Справочник.Контрагенты
		|			ТОГДА Товары.Покупатель
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|	КОНЕЦ КАК Покупатель,
		|	Товары.Покупатель ССЫЛКА Справочник.Организации КАК Интеркампани,
		|	Товары.ДатаСчетаФактуры КАК ДатаРеализации
		|ИЗ
		|	Документ.ОтчетКомитенту.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаХарактеристика",
		ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "Товары"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаУпаковка",
		ПолучитьТекстЗапросаУпаковки(КомпонентыОбмена, "Товары"));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Запрос.УстановитьПараметр("КоэффициентПересчета", ?(ДанныеИБ.СуммаВознаграждения = 0, 0, ДанныеИБ.СуммаНДСВознаграждения / ДанныеИБ.СуммаВознаграждения));
	
	Товары = Запрос.Выполнить().Выгрузить();
	ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, Товары);
	
	СтрокиИнтеркампани = Товары.НайтиСтроки(Новый Структура("Интеркампани", Истина));
	Для Каждого СтрокаИнтеркампани Из СтрокиИнтеркампани Цикл
		Если ЗначениеЗаполнено(СтрокаИнтеркампани.ПокупательИсточник)
			И ТипЗнч(СтрокаИнтеркампани.ПокупательИсточник) = Тип("СправочникСсылка.Организации") Тогда
			СтрокаИнтеркампани.Покупатель = КонтрагентИзОрганизации(СтрокаИнтеркампани.ПокупательИсточник, КомпонентыОбмена);
		КонецЕсли;
	КонецЦикла;
	
	ДанныеXDTO.Вставить("Товары", Товары);
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
КонецПроцедуры
