Процедура ПКО_Справочник_ДисконтныеКарты_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Контрагент = ДанныеИБ.Контрагент;
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Контрагент = ПартнерыИКонтрагенты.ПолучитьКонтрагентаПартнераПоУмолчанию(ДанныеИБ.Партнер);
		Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
			Контрагент = КонтрагентИзПартнера(ДанныеИБ.Партнер, КомпонентыОбмена);
		КонецЕсли;
	КонецЕсли;
	
	Если СтекВыгрузки.Количество() > 1 Тогда
	
		ТипКарты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.Владелец, "ТипКарты");
	
		НомерКарты = "";				
		Если ТипКарты = Перечисления.ТипыКарт.Штриховая Тогда
			НомерКарты = ДанныеИБ.Штрихкод;
		ИначеЕсли ТипКарты = Перечисления.ТипыКарт.Магнитная Тогда
			НомерКарты = ДанныеИБ.МагнитныйКод;
		Иначе
			Если ЗначениеЗаполнено(ДанныеИБ.Штрихкод) Тогда
				НомерКарты = ДанныеИБ.Штрихкод;
			ИначеЕсли ЗначениеЗаполнено(ДанныеИБ.МагнитныйКод) Тогда
				НомерКарты = ДанныеИБ.МагнитныйКод;
			КонецЕсли;
		КонецЕсли;
			
		Если НЕ ЗначениеЗаполнено(НомерКарты) ИЛИ НЕ ЗначениеЗаполнено(Контрагент) Тогда
			ДанныеXDTO = Неопределено;
			Возврат;
		КонецЕсли;
	
		ДанныеXDTO.Вставить("НомерКарты", НомерКарты);
		ДанныеXDTO.Вставить("ВладелецКарты", Контрагент);
	
	Иначе
		ДанныеXDTO.КлючевыеСвойства.Вставить("НомерКарты", ДанныеИБ.ДополнительныеСвойства.НомерКарты);
		ДанныеXDTO.КлючевыеСвойства.Вставить("ВладелецКарты", Контрагент);
		
		Если ДанныеИБ.ДополнительныеСвойства.Свойство("ПрограммаЛояльности") Тогда
			ДанныеXDTO.Вставить("ПрограммаЛояльности", ДанныеИБ.ДополнительныеСвойства.ПрограммаЛояльности);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
