Процедура ПКО_Документ_ОтчетОРозничныхПродажах_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	ДобавитьВалютуВДопСвойства(ПолученныеДанные, ДанныеXDTO);
	Если НЕ ЗначениеЗаполнено(ПолученныеДанные.ВидЦены) И ЗначениеЗаполнено(ПолученныеДанные.Склад) Тогда
		ПолученныеДанные.ВидЦены = ПолученныеДанные.Склад.РозничныйВидЦены;
	КонецЕсли;
	
	//ЗаполнитьНалогообложениеНДСПоПолученнымДанным(КомпонентыОбмена, ПолученныеДанные, ДанныеXDTO, Ложь);
	ПризнакНалогообложенияНДС(КомпонентыОбмена,ПолученныеДанные);
	
	ЗагрузитьДополнительныеРеквизиты(ПолученныеДанные, ДанныеXDTO, КомпонентыОбмена);
	
	ПравилаЗаполнения = Новый Соответствие;
	ПравилаЗаполнения.Вставить("Номенклатура",  "Номенклатура");
	ПравилаЗаполнения.Вставить("Количество",    "Количество");
	ПравилаЗаполнения.Вставить("Сумма",         "Сумма");
	ПравилаЗаполнения.Вставить("Цена",          "Цена");
	ПравилаЗаполнения.Вставить("СтавкаНДС",     "СтавкаНДС");
	ПравилаЗаполнения.Вставить("СуммаНДС",      "СуммаНДС");
	ПравилаЗаполнения.Вставить("ПроцентСкидки", "ПроцентРучнойСкидки");
	ПравилаЗаполнения.Вставить("СуммаСкидки",   "СуммаРучнойСкидки");
	Если ЗначениеФО("ИспользоватьХарактеристикиНоменклатуры", КомпонентыОбмена) Тогда
		ПравилаЗаполнения.Вставить("Характеристика",     "Характеристика");
	КонецЕсли;
	Если ЗначениеФО("ИспользоватьУпаковкиНоменклатуры", КомпонентыОбмена) Тогда
		ПравилаЗаполнения.Вставить("Упаковка",           "Упаковка");
		ПравилаЗаполнения.Вставить("КоличествоУпаковок", "КоличествоУпаковок");
	КонецЕсли;
	Если ЗначениеФО("ИспользоватьСерииНоменклатуры", КомпонентыОбмена) Тогда
		ПравилаЗаполнения.Вставить("Серия",              "Серия");
	КонецЕсли;
	ПравилаЗаполнения.Вставить("ЗаказКлиента", "RM_ЗаказКлиента");      
	ПравилаЗаполнения.Вставить("Допродажа", "RM_Допродажа");  
	
	
	// Товары 
	МассивСтрокТовары = Новый Массив;
	Если ДанныеXDTO.Свойство("Товары")
		И ЗначениеЗаполнено(ДанныеXDTO.Товары) Тогда
		
		Для Каждого Строка Из ДанныеXDTO.Товары Цикл
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			
			Если НЕ СтруктураДанныхСтроки.Свойство("КоличествоУпаковок") Тогда
				СтруктураДанныхСтроки.Вставить("КоличествоУпаковок", СтруктураДанныхСтроки.Количество);
			КонецЕсли;
			Если СтруктураДанныхСтроки.Свойство("Сумма") Тогда
				СтруктураДанныхСтроки.Вставить("Цена", СтруктураДанныхСтроки.Сумма / СтруктураДанныхСтроки.КоличествоУпаковок);
			КонецЕсли;
		
			МассивСтрокТовары.Добавить(СтруктураДанныхСтроки);
		КонецЦикла;
	КонецЕсли;
	
	Если ДанныеXDTO.Свойство("ТоварыПродажа")
		И ЗначениеЗаполнено(ДанныеXDTO.ТоварыПродажа) Тогда
		
		Для Каждого Строка Из ДанныеXDTO.ТоварыПродажа Цикл
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			
			Если НЕ СтруктураДанныхСтроки.Свойство("КоличествоУпаковок") Тогда
				СтруктураДанныхСтроки.Вставить("КоличествоУпаковок", СтруктураДанныхСтроки.Количество);
			КонецЕсли;
			Если СтруктураДанныхСтроки.Свойство("Сумма") Тогда
				СтруктураДанныхСтроки.Вставить("Цена", СтруктураДанныхСтроки.Сумма / СтруктураДанныхСтроки.КоличествоУпаковок);
			КонецЕсли;
			
			МассивСтрокТовары.Добавить(СтруктураДанныхСтроки);
		КонецЦикла;
	КонецЕсли;
	
	Если ДанныеXDTO.Свойство("ТоварыВозвратПродажи")
		И ЗначениеЗаполнено(ДанныеXDTO.ТоварыВозвратПродажи) Тогда
		
		ТоварыВозвратПродажи = ДанныеXDTO.ТоварыВозвратПродажи.СкопироватьКолонки();
		
		Для Каждого Строка Из ДанныеXDTO.ТоварыВозвратПродажи Цикл
				
			Строка.Количество = - ?(ЗначениеЗаполнено(Строка.Количество), Строка.Количество, 0);
			Строка.Сумма      = - ?(ЗначениеЗаполнено(Строка.Сумма), Строка.Сумма, 0);
			Строка.СуммаНДС   = - ?(ЗначениеЗаполнено(Строка.СуммаНДС), Строка.СуммаНДС, 0);
			
			Если ЗначениеЗаполнено(Строка.КоличествоУпаковок) И ЗначениеЗаполнено(Строка.Упаковка) Тогда
				Строка.КоличествоУпаковок = -Строка.КоличествоУпаковок;
				Строка.Цена = Строка.Сумма / Строка.КоличествоУпаковок;
			Иначе
				Строка.КоличествоУпаковок = Строка.Количество;
			КонецЕсли;
			
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			МассивСтрокТовары.Добавить(СтруктураДанныхСтроки);
		КонецЦикла;
	КонецЕсли;
	
	// Услуги загружаются в ТЧ Товары
	Если ДанныеXDTO.Свойство("Услуги")
		И ЗначениеЗаполнено(ДанныеXDTO.Услуги) Тогда
		
		Для Каждого Строка Из ДанныеXDTO.Услуги Цикл
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			
			СтруктураДанныхСтроки.Вставить("КоличествоУпаковок", СтруктураДанныхСтроки.Количество);
			МассивСтрокТовары.Добавить(СтруктураДанныхСтроки);
		КонецЦикла;
	КонецЕсли;
	
	Если МассивСтрокТовары.Количество() > 0 Тогда
		ПолученныеДанные.ДополнительныеСвойства.Вставить("Товары", МассивСтрокТовары);
	КонецЕсли;
	
	//Оплата платежными картами
	МассивСтрокОплатаПК = Новый Массив;
	
	Если ДанныеXDTO.Свойство("ОплатаПлатежнымиКартами")
		И ЗначениеЗаполнено(ДанныеXDTO.ОплатаПлатежнымиКартами) Тогда
		
		Для Каждого Строка Из ДанныеXDTO.ОплатаПлатежнымиКартами Цикл
			СтруктураДанныхСтроки = Новый Структура;
			СтруктураДанныхСтроки.Вставить("Сумма", Строка.СуммаОплаты);
			СтруктураДанныхСтроки.Вставить("НомерПлатежнойКарты", Строка.НомерКарты);
		
		
			Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) < ВерсияФорматаЧислом("1.4") Тогда  
				СтруктураЭТ = ?(ТипЗнч(Строка.ЭквайринговыйТерминал) = Тип("Структура"), Строка.ЭквайринговыйТерминал, Новый Структура("Номер, Ссылка"));
				СтруктураЭТ.Вставить("БанковскийСчетОрганизации", Строка.БанковскийСчетОрганизации);
				СтруктураЭТ.Вставить("Эквайрер", Строка.Эквайрер);
				
				// Готовим инструкцию для конвертации Эквайрингового терминала.
				Инструкция = Новый Структура;
				Инструкция.Вставить("Значение", СтруктураЭТ);
				
				Если ЗначениеЗаполнено(СтруктураЭТ.Номер) Тогда
					Инструкция.Вставить("ИмяПКО", "Справочник_ЭквайрингТерм_Получение_КлючСв");
				ИначеЕсли ЗначениеЗаполнено(СтруктураЭТ.БанковскийСчетОрганизации) И ЗначениеЗаполнено(СтруктураЭТ.Эквайрер) Тогда
					Инструкция.Вставить("ИмяПКО", "Справочник_ЭквайрингТермБезНомера_Получение_КлючСв");
				Иначе
					Инструкция = Неопределено;
				КонецЕсли;
				
				СтруктураДанныхСтроки.Вставить("ЭквайринговыйТерминал", Инструкция);
			Иначе //Версия 1.4 и выше
				Инструкция = Новый Структура;
				Инструкция.Вставить("Значение", Строка.ЭквайринговыйТерминал);
				Инструкция.Вставить("ИмяПКО", "Справочник_ЭквайринговыеТерминалы_Получение");
				
				СтруктураДанныхСтроки.Вставить("ЭквайринговыйТерминал", Инструкция);
			КонецЕсли;  
			              
			              
			СтруктураВидыОплаты = Новый Структура("ВидОплаты", Неопределено);
			ЗаполнитьЗначенияСвойств(СтруктураВидыОплаты, Строка);
			
			Если НЕ СтруктураВидыОплаты.ВидОплаты = Неопределено Тогда		              
				Инструкция = Новый Структура;
				Инструкция.Вставить("Значение", Строка.ВидОплаты);
				Инструкция.Вставить("ИмяПКО", "Справочник_ВидыОплаты_Получение"); 
			
				СтруктураДанныхСтроки.Вставить("RM_ВидОплаты",Инструкция); 
			КонецЕсли;
	
			
			МассивСтрокОплатаПК.Добавить(СтруктураДанныхСтроки);
		
		КонецЦикла;
		
		ПолученныеДанные.ДополнительныеСвойства.Вставить("ОплатаПлатежнымиКартами", МассивСтрокОплатаПК);	
	КонецЕсли;
	
	//Подарочные сертификаты
	МассивСтрокПС = Новый Массив; 
	
	Если ДанныеXDTO.Свойство("ОплатаСертификатами")
		И ЗначениеЗаполнено(ДанныеXDTO.ОплатаСертификатами) Тогда
		
		Для каждого Строка Из ДанныеXDTO.ОплатаСертификатами Цикл
			СтруктураДанныхСтроки = Новый Структура;
			СтруктураДанныхСтроки.Вставить("Сумма", Строка.Сумма);
			СтруктураДанныхСтроки.Вставить("RM_Номинал", Строка.Номинал);
			СтруктураДанныхСтроки.Вставить("RM_Количество", Строка.Количество);
	
			
			// Готовим инструкцию для конвертации подарочного сертификата.
			Инструкция = Новый Структура;
			СтруктураПодарочногоСертификата = Новый Структура;
			СтруктураПодарочногоСертификата.Вставить("Наименование", Строка.СерийныйНомер);
			
			Инструкция.Вставить("ИмяПКО", "Справочник_ПодарочныеСертификаты_ИзСтруктуры");
			Инструкция.Вставить("Значение", СтруктураПодарочногоСертификата);
			СтруктураДанныхСтроки.Вставить("ПодарочныйСертификат", Инструкция);
			
			МассивСтрокПС.Добавить(СтруктураДанныхСтроки);
	
		
		КонецЦикла;
		
		ПолученныеДанные.ДополнительныеСвойства.Вставить("ПодарочныеСертификаты", МассивСтрокПС);	
	КонецЕсли;
	
	
	//Серии
	МассивСерии = Новый Массив;
	
	ПравилаЗаполнения = Новый Соответствие;
	ПравилаЗаполнения.Вставить("Серия",  "Серия");
	ПравилаЗаполнения.Вставить("Количество",    "Количество");
	ПравилаЗаполнения.Вставить("Номенклатура",         "Номенклатура");
	
	Если ДанныеXDTO.Свойство("Серии")
		И ЗначениеЗаполнено(ДанныеXDTO.Серии) Тогда
		
		Для каждого Строка Из ДанныеXDTO.Серии Цикл
		
		СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			
		МассивСерии.Добавить(СтруктураДанныхСтроки);
		КонецЦикла;
		
		ПолученныеДанные.ДополнительныеСвойства.Вставить("Серии", МассивСерии);	
	КонецЕсли;
	
	Для Каждого СтрокаТЧ из ПолученныеДанные.ОплатаБонуснымиБаллами Цикл
		СтрокаТЧ.ДатаОплаты = ПолученныеДанные.Дата;
	КонецЦикла;
	
	// Штрихкоды упаковок.
	//ЗагрузитьШтрихкодыУпаковок(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена, "АкцизныеМарки", "АкцизнаяМарка");
КонецПроцедуры
