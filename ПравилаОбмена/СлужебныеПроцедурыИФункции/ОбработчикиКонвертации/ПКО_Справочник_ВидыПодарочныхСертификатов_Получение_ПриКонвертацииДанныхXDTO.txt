Процедура ПКО_Справочник_ВидыПодарочныхСертификатов_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	Если ДанныеXDTO.Свойство("ТипПериодаДействия") И ДанныеXDTO.Свойство("КоличествоПериодовДействия") Тогда
		Если ДанныеXDTO.ТипПериодаДействия = "День" Тогда
			Если ДанныеXDTO.КоличествоПериодовДействия % 10 = 0 Тогда
			    ПолученныеДанные.ПериодДействия = Перечисления.Периодичность.Декада;
			    ПолученныеДанные.КоличествоПериодовДействия = ДанныеXDTO.КоличествоПериодовДействия / 10;
			ИначеЕсли ДанныеXDTO.КоличествоПериодовДействия % 7 = 0 Тогда
			    ПолученныеДанные.ПериодДействия = Перечисления.Периодичность.Неделя;
			    ПолученныеДанные.КоличествоПериодовДействия = ДанныеXDTO.КоличествоПериодовДействия / 7;
			Иначе
			    ПолученныеДанные.ПериодДействия = Перечисления.Периодичность.День;
			    ПолученныеДанные.КоличествоПериодовДействия = ДанныеXDTO.КоличествоПериодовДействия;
			КонецЕсли;
		Иначе // ТипПериодаДействия = "Месяц"
			Если ДанныеXDTO.КоличествоПериодовДействия % 12 = 0 Тогда
			    ПолученныеДанные.ПериодДействия = Перечисления.Периодичность.Год;
			    ПолученныеДанные.КоличествоПериодовДействия = ДанныеXDTO.КоличествоПериодовДействия / 12;
			ИначеЕсли ДанныеXDTO.КоличествоПериодовДействия % 6 = 0 Тогда
			    ПолученныеДанные.ПериодДействия = Перечисления.Периодичность.Полугодие;
			    ПолученныеДанные.КоличествоПериодовДействия = ДанныеXDTO.КоличествоПериодовДействия / 6;
			ИначеЕсли ДанныеXDTO.КоличествоПериодовДействия % 3 = 0 Тогда
			    ПолученныеДанные.ПериодДействия = Перечисления.Периодичность.Квартал;
			    ПолученныеДанные.КоличествоПериодовДействия = ДанныеXDTO.КоличествоПериодовДействия / 3;
			Иначе
			    ПолученныеДанные.ПериодДействия = Перечисления.Периодичность.Месяц;
			    ПолученныеДанные.КоличествоПериодовДействия = ДанныеXDTO.КоличествоПериодовДействия;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ДанныеXDTO.Свойство("ШаблоныКодов") И ДанныеXDTO.ШаблоныКодов.Количество() > 0 Тогда
		ШаблоныКодов = Новый Массив;
		ЕстьДанныеШтрихкода = Ложь;
		ЕстьДанныеМагнитные = Ложь;
		Для Каждого Строка Из ДанныеXDTO.ШаблоныКодов Цикл
			СтруктураКодов = Новый Структура("ШаблонМагнитнойКарты, НачалоДиапазонаШтрихкода, НачалоДиапазонаМагнитногоКода, КонецДиапазонаШтрихкода, КонецДиапазонаМагнитногоКода, ДлинаШтрихкода, ДлинаМагнитногоКода");
			Если ЗначениеЗаполнено(Строка.ШаблонМагнитнойКарты) Тогда
				СтруктураКодов.ШаблонМагнитнойКарты = ШаблонМагнитнойКарты(ЗначениеИзСтрокиВнутр(Строка.ШаблонМагнитнойКарты), КомпонентыОбмена.РежимЗагрузкиДанныхВИнформационнуюБазу);
			КонецЕсли;
			Если Строка.НачалоДиапазонаШтрихКода = 0 Тогда
				СтруктураКодов.НачалоДиапазонаШтрихКода = "0";
			Иначе
				СтруктураКодов.НачалоДиапазонаШтрихКода = СтрЗаменить(Строка.НачалоДиапазонаШтрихКода, " ", "");
			КонецЕсли;
			Если Строка.НачалоДиапазонаМагнитногоКода = 0 Тогда
				СтруктураКодов.НачалоДиапазонаМагнитногоКода = "0";
			Иначе
				СтруктураКодов.НачалоДиапазонаМагнитногоКода = СтрЗаменить(Строка.НачалоДиапазонаМагнитногоКода, " ", "");
			КонецЕсли;
			СтруктураКодов.КонецДиапазонаМагнитногоКода = СтрЗаменить(Строка.КонецДиапазонаМагнитногоКода, " ", "");
			СтруктураКодов.КонецДиапазонаШтрихКода      = СтрЗаменить(Строка.КонецДиапазонаШтрихКода, " ", "");
			СтруктураКодов.ДлинаШтрихкода               = Строка.ДлинаШтрихкода;
			СтруктураКодов.ДлинаМагнитногоКода          = Строка.ДлинаМагнитногоКода;
			
			ЕстьДанныеШтрихкода = ЕстьДанныеШтрихкода ИЛИ ЗначениеЗаполнено(СтруктураКодов.ДлинаШтрихкода);
			ЕстьДанныеМагнитные = ЕстьДанныеМагнитные ИЛИ ЗначениеЗаполнено(СтруктураКодов.ДлинаМагнитногоКода);
			
			ШаблоныКодов.Добавить(СтруктураКодов);
		КонецЦикла;
		Если ЕстьДанныеШтрихкода И ЕстьДанныеМагнитные Тогда
			ПолученныеДанные.ТипКарты = Перечисления.ТипыКарт.Смешанная;
		ИначеЕсли ЕстьДанныеМагнитные Тогда
			ПолученныеДанные.ТипКарты = Перечисления.ТипыКарт.Магнитная;
		Иначе
			ПолученныеДанные.ТипКарты = Перечисления.ТипыКарт.Штриховая;
		КонецЕсли;
		ПолученныеДанные.ДополнительныеСвойства.Вставить("ШаблоныКодовПодарочныхСертификатов", ШаблоныКодов);
	КонецЕсли;
КонецПроцедуры
