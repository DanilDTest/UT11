Процедура ПКО_Документ_ВнутреннееПотребление_ВЭксплуатацию_Отпра_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	СкладДляВыгрузки = СкладДляВыгрузки(ДанныеИБ.Склад, КомпонентыОбмена.ПараметрыКонвертации);
	ДанныеXDTO.Вставить("Склад", СкладДляВыгрузки);
	
	ВыгрузитьПодразделениеИзРеквизитаДокумента(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, "Склад");
	
	ВыгрузитьНалогообложениеНДС(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Ложь, Ложь);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтрокиДокумента,
		|	Товары.Номенклатура КАК Номенклатура,
		|	&ТекстЗапросаХарактеристика,
		|	&ТекстЗапросаСерия,
		|	&ТекстЗапросаУпаковка,
		|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Товары.Количество КАК Количество,
		|	&ТипЗапасов КАК ТипЗапасов,
		|	Товары.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Товары.Ссылка.Подразделение КАК Подразделение,
		|	Товары.КатегорияЭксплуатации.СрокЭксплуатации КАК СрокЭксплуатации,
		|	Товары.СтатьяРасходов.Наименование КАК СтатьяРасходовНаименование,
		|	Товары.КатегорияЭксплуатации.Наименование КАК КатегорияЭксплуатацииНаименование,
		|	Товары.СтатьяРасходов.КорреспондирующийСчет КАК СтатьяРасходовКорСчет,
		|	Товары.СтатьяРасходов КАК СтатьяЗатрат,
		|	Товары.ИнвентарныйНомер КАК ИнвентарныйНомер
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииЭксплуатации КАК КатегорииЭксплуатации
		|		ПО Товары.КатегорияЭксплуатации = КатегорииЭксплуатации.Ссылка
		|ГДЕ
		|	Товары.Ссылка = &Ссылка";
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаХарактеристика",
		ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "Товары"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаУпаковка",
		ПолучитьТекстЗапросаУпаковки(КомпонентыОбмена, "Товары"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаСерия",
		ПолучитьТекстЗапросаСерии(КомпонентыОбмена, "Товары"));
	
	ТипЗапасовВЗапросе = """СобственныеТовары""";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТипЗапасов", ТипЗапасовВЗапросе);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	ТаблицаТовары = Запрос.Выполнить().Выгрузить();
	ТаблицаТовары.Колонки.Добавить("НаименованиеНазначенияИспользования");
	ТаблицаТовары.Колонки.Добавить("НаименованиеСпособаОтраженияРасходов");
	ТаблицаТовары.Колонки.Добавить("ПодразделениеЗатрат");
	
	ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, ТаблицаТовары);
	
	Для Каждого Строка Из ТаблицаТовары Цикл
		
		Строка.НаименованиеНазначенияИспользования  = Строка.КатегорияЭксплуатацииНаименование;
		Строка.НаименованиеСпособаОтраженияРасходов = Строка.СтатьяРасходовНаименование;
		
		Если ЗначениеЗаполнено(Строка.СтатьяРасходовКорСчет) Тогда
			НаименованиеСпособаОтраженияРасходов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	    		НСтр("ru = '%1 счет( %2)';
					|en = '%1 account (%2)'"),
	    		СокрЛП(Строка.НаименованиеСпособаОтраженияРасходов),
	    		Строка.СтатьяРасходовКорСчет);
			Строка.НаименованиеСпособаОтраженияРасходов = НаименованиеСпособаОтраженияРасходов;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.Подразделение) Тогда
			СтруктураПодразделение = Новый Структура;
			ВыгрузитьПодразделение(ДанныеИБ, СтруктураПодразделение, Строка.Подразделение);
			Строка.ПодразделениеЗатрат = СтруктураПодразделение.Подразделение;
		КонецЕсли;
	
	КонецЦикла;
	
	ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
КонецПроцедуры
