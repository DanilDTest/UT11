Процедура ПКО_Спр_ИсторияСтатусовИнтернетЗаказов_Получение_ПередЗаписьюПолученныхДанных(ПолученныеДанные, ДанныеИБ, КонвертацияСвойств, КомпонентыОбмена)
	Документ_ЗаказКлиента_Получение	= RM_ОбменДаннымиXDTOСервер.ПКОПоИмени(КомпонентыОбмена,	"Документ_ЗаказКлиента_Получение");
		Справочник_Пользователи			= RM_ОбменДаннымиXDTOСервер.ПКОПоИмени(КомпонентыОбмена,	"Справочник_Пользователи");   
		Перечисления_Статусы			= КомпонентыОбмена.ПравилаКонвертацииПредопределенныхДанных.Найти("Перечисление_RM_СтатусыИнтернетЗаказов", "ИмяПКПД");
		
		СтруктураИзмеренийРегистра = Новый Структура;
		СтруктураИзмеренийРегистра.Вставить("ЗаказКлиента");
		СтруктураИзмеренийРегистра.Вставить("Период");
		
		Для Каждого ИзмерениеРегистра Из СтруктураИзмеренийРегистра Цикл
			Значение = ПолученныеДанные.ДополнительныеСвойства[ИзмерениеРегистра.Ключ];
			
			Если Значение = Неопределено Тогда
				Продолжить;
			ИначеЕсли ТипЗнч(Значение) = Тип("Структура") Тогда
				
				Если ИзмерениеРегистра.Ключ = "ЗаказКлиента" Тогда
					ПКО = Документ_ЗаказКлиента_Получение;
				КонецЕсли;
				
				Значение = RM_ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(КомпонентыОбмена, 
					Значение, 
					ПКО, 
					"ПолучитьСсылку").Ссылка;		
			КонецЕсли;
		
			 ПолученныеДанные.Отбор[ИзмерениеРегистра.Ключ].Значение = Значение;
			 ПолученныеДанные.Отбор[ИзмерениеРегистра.Ключ].Использование = Истина;
		КонецЦикла;
		
		СтруктураСсылочныхПолей = СтруктураИзмеренийРегистра;
		СтруктураСсылочныхПолей.Вставить("Ответственный"); 
		
		// Добавление записей в набор записей.		
		Если ПолученныеДанные.ДополнительныеСвойства.Записи <> Неопределено Тогда
			
			мИсторияСтатусовИнтернетЗаказов = ПолученныеДанные.Метаданные();
		
			ТаблицаДанных = Новый ТаблицаЗначений;
			Для Каждого Реквизит Из мИсторияСтатусовИнтернетЗаказов.СтандартныеРеквизиты Цикл
				ТаблицаДанных.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);	
			КонецЦикла;
			
			Для Каждого Реквизит Из мИсторияСтатусовИнтернетЗаказов.Измерения Цикл
				ТаблицаДанных.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);	
			КонецЦикла;
			
			Для Каждого Реквизит Из мИсторияСтатусовИнтернетЗаказов.Ресурсы Цикл
				ТаблицаДанных.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);	
			КонецЦикла;
			
			Для Каждого Реквизит Из мИсторияСтатусовИнтернетЗаказов.Реквизиты Цикл
				ТаблицаДанных.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);	
			КонецЦикла;
			
			Для Каждого Запись Из ПолученныеДанные.ДополнительныеСвойства.Записи Цикл
				
				НоваяСтрокаДанных          = ТаблицаДанных.Добавить();
				НоваяСтрокаДанных.Период = Запись.Период;    
				НоваяСтрокаДанных.МестноеВремя = Запись.МестноеВремя;    
				
				Если НЕ ПолученныеДанные.ДополнительныеСвойства.Записи.Колонки.Найти("СтатусЗначениеПеречисления") = Неопределено
					И ЗначениеЗаполнено(Запись.СтатусЗначениеПеречисления)
					И ТипЗнч(Запись.СтатусЗначениеПеречисления) = Тип("Структура") Тогда    
					НоваяСтрокаДанных.Статус = Перечисления_Статусы.КонвертацииЗначенийПриПолучении.Получить(Запись.СтатусЗначениеПеречисления.Значение);
				Иначе
					НоваяСтрокаДанных.Статус = ЗначениеПеречисленияПоСинониму("RM_СтатусыИнтернетЗаказов", Запись.Статус);      
				КонецЕсли;
						
				Для Каждого ИзмерениеРегистра Из СтруктураСсылочныхПолей Цикл
					
					Значение = Запись[ИзмерениеРегистра.Ключ];
					
					Если ТипЗнч(Значение) = Тип("Структура") Тогда
						
						Если ИзмерениеРегистра.Ключ = "ЗаказКлиента" Тогда
							ПКО = Документ_ЗаказКлиента_Получение;
						ИначеЕсли ИзмерениеРегистра.Ключ = "Ответственный" Тогда
							ПКО = Справочник_Пользователи;
						КонецЕсли;
						
						Значение = RM_ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(КомпонентыОбмена, 
							Значение, 
							ПКО, 
							"ПолучитьСсылку").Ссылка;	
						
					КонецЕсли;
						
					НоваяСтрокаДанных[ИзмерениеРегистра.Ключ] = Значение;
		
				КонецЦикла;			
			КонецЦикла;
			
			// Исключаем затирание данных неподлежащих обмену
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТаблицаДанных.Период КАК Период,
			|	ТаблицаДанных.ЗаказКлиента КАК ЗаказКлиента,
			|	ТаблицаДанных.Статус КАК Статус,
			|	ТаблицаДанных.Ответственный КАК Ответственный,
			|	ТаблицаДанных.МестноеВремя КАК МестноеВремя
			|ПОМЕСТИТЬ ВТДанные
			|ИЗ
			|	&ТаблицаДанных КАК ТаблицаДанных
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТДанные.Период КАК Период,
			|	ВТДанные.ЗаказКлиента КАК ЗаказКлиента,
			|	ВТДанные.Статус КАК Статус,
			|	ВТДанные.Ответственный КАК Ответственный,
			|	ВТДанные.МестноеВремя КАК МестноеВремя,
			|	ЕСТЬNULL(RM_ИсторияСтатусовИнтернетЗаказов.ДокументРегистратор, НЕОПРЕДЕЛЕНО) КАК ДокументРегистратор,
			|	ЕСТЬNULL(RM_ИсторияСтатусовИнтернетЗаказов.ОтправленоВБУС, ЛОЖЬ) КАК ОтправленоВБУС
			|ИЗ
			|	ВТДанные КАК ВТДанные
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.RM_ИсторияСтатусовИнтернетЗаказов КАК RM_ИсторияСтатусовИнтернетЗаказов
			|		ПО ВТДанные.Период = RM_ИсторияСтатусовИнтернетЗаказов.Период
			|			И ВТДанные.ЗаказКлиента = RM_ИсторияСтатусовИнтернетЗаказов.ЗаказКлиента";
			
			Запрос.УстановитьПараметр("ТаблицаДанных",	ТаблицаДанных);
			
			ТаблицаДанных = Запрос.Выполнить().Выгрузить();
			ПолученныеДанные.Загрузить(ТаблицаДанных);
			
		КонецЕсли;
КонецПроцедуры
