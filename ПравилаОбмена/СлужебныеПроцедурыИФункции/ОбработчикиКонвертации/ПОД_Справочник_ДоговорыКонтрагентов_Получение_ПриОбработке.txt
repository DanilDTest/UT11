Процедура ПОД_Справочник_ДоговорыКонтрагентов_Получение_ПриОбработке(ДанныеXDTO, ИспользованиеПКО, КомпонентыОбмена)
	// Если обе функциональные опции отключены, то грузить договора не имеет смысла.
	Если Не КомпонентыОбмена.ПараметрыКонвертации.ИспользуютсяДоговорыСКлиентами
		И Не КомпонентыОбмена.ПараметрыКонвертации.ИспользуютсяДоговорыСПоставщиками Тогда
	
		ИспользованиеПКО.Справочник_ДоговорыКонтрагентов_Получение = Ложь;
		Возврат;
		
	КонецЕсли;
	
	// Определим тип договора для проверки конкретной функциональной опции.
	ТипДоговора = Неопределено;
	ВидДоговора = Неопределено;
	
	Если ДанныеXDTO.КлючевыеСвойства.Свойство("ВидДоговора") Тогда
		
		ВидДоговора = ДанныеXDTO.КлючевыеСвойства.ВидДоговора;
		
		Если  ТипЗнч(ВидДоговора) = Тип("Структура")
			И ВидДоговора.Свойство("Значение") Тогда
		    
		    ТипДоговора = ВидДоговора.Значение;
		    
		КонецЕсли;
		
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ТипДоговора)
		Или (Не КомпонентыОбмена.ПараметрыКонвертации.ИспользуютсяДоговорыСКлиентами
		И (ТипДоговора = "СПокупателем"
		Или ТипДоговора = "СКомиссионером"
		Или ТипДоговора = "СКомиссионеромНаЗакупку"))
		Или (Не КомпонентыОбмена.ПараметрыКонвертации.ИспользуютсяДоговорыСПоставщиками
		И (ТипДоговора = "СПоставщиком"
		Или ТипДоговора = "СКомитентом"
		Или ТипДоговора = "СКомитентомНаЗакупку"
		Или ТипДоговора = "Прочее")) Тогда
		
		ИспользованиеПКО.Справочник_ДоговорыКонтрагентов_Получение = Ложь;
		Возврат;
	
	КонецЕсли;
	
	
	// Определим признак ранее созданного виртуального договора. 
	// Если договор был создан из совокупности других объектов, его загружать не следует.
	ДопРеквизиты = Неопределено;
	
	Если ДанныеXDTO.Свойство("ДополнительныеРеквизиты", ДопРеквизиты)
		И ТипЗнч(ДопРеквизиты) = Тип("ТаблицаЗначений") И ДопРеквизиты.Количество() > 0 Тогда
	
		Для Каждого ДопРеквизит Из ДопРеквизиты Цикл
			Если ДопРеквизит.ЗначениеСвойства = "ВиртуальныйДоговор" Тогда
				// Пришел виртуальный договор.
				ИспользованиеПКО.Справочник_ДоговорыКонтрагентов_Получение = Ложь;
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ТипДоговора = "СПокупателем" И ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами")
		Или ТипДоговора = "СПоставщиком" И ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСПоставщиками") Тогда
		
		// Если нет ни одного соглашения с настройкой ИспользуютсяДоговорыКонтрагентов,
		// то договор не загружаем.
		Запрос = Новый Запрос("ВЫБРАТЬ
			|	Соглашения.Ссылка
			|ИЗ
			|	Справочник.СоглашенияСКлиентами КАК Соглашения
			|ГДЕ
			|	Соглашения.ИспользуютсяДоговорыКонтрагентов
			|	И НЕ Соглашения.ПометкаУдаления
			|	И Соглашения.Контрагент В (&Контрагенты)
			|	И Соглашения.Организация В (&Организации)
			|");
		
		Если ТипДоговора = "СПоставщиком" Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "СоглашенияСКлиентами", "СоглашенияСПоставщиками");
		КонецЕсли;
		
		Если ДанныеXDTO.КлючевыеСвойства.Свойство("ВалютаВзаиморасчетов")
			И ТипЗнч(ДанныеXDTO.КлючевыеСвойства.ВалютаВзаиморасчетов) = Тип("Структура")
			И ДанныеXDTO.КлючевыеСвойства.ВалютаВзаиморасчетов.Свойство("Ссылка")
			И ТипЗнч(ДанныеXDTO.КлючевыеСвойства.ВалютаВзаиморасчетов.Ссылка) = Тип("Структура")
			И ДанныеXDTO.КлючевыеСвойства.ВалютаВзаиморасчетов.Ссылка.Свойство("Значение") Тогда
			
			Валюта = RM_ОбменДаннымиXDTOСервер.СсылкаОбъектаПоУИДОбъектаXDTO(
				Строка(ДанныеXDTO.КлючевыеСвойства.ВалютаВзаиморасчетов.Ссылка.Значение),
				Тип("СправочникСсылка.Валюты"),
				КомпонентыОбмена);
			Запрос.Текст = Запрос.Текст + Символы.ПС + " И Соглашения.Валюта = &Валюта";
			Запрос.УстановитьПараметр("Валюта", Валюта);
		КонецЕсли;
		
		Контрагенты = Новый Массив;
		Контрагенты.Добавить(RM_ОбменДаннымиXDTOСервер.СсылкаОбъектаПоУИДОбъектаXDTO(
			Строка(ДанныеXDTO.КлючевыеСвойства.Контрагент.Ссылка.Значение),
			Тип("СправочникСсылка.Контрагенты"),
			КомпонентыОбмена));
		Контрагенты.Добавить(Справочники.Контрагенты.ПустаяСсылка());
		Организации = Новый Массив;
		Организации.Добавить(RM_ОбменДаннымиXDTOСервер.СсылкаОбъектаПоУИДОбъектаXDTO(
			Строка(ДанныеXDTO.КлючевыеСвойства.Организация.Ссылка.Значение),
			Тип("СправочникСсылка.Организации"),
			КомпонентыОбмена));
		Организации.Добавить(Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("Контрагенты", Контрагенты);
		Запрос.УстановитьПараметр("Организации", Организации);
		
		Результат = Запрос.Выполнить();
		ИспользованиеПКО.Справочник_ДоговорыКонтрагентов_Получение = НЕ Результат.Пустой();
		
		Возврат;
	
	КонецЕсли;
КонецПроцедуры
