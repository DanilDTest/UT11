Процедура ПКО_Документ_ВозвратТоваровПоставщику_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	СкладДляВыгрузки = СкладДляВыгрузки(ДанныеИБ.Склад, КомпонентыОбмена.ПараметрыКонвертации);
	ДанныеXDTO.Вставить("Склад", СкладДляВыгрузки);
	
	// ВалютаВзаиморасчетов нужна для дальнейшего расчета курса и кратности.
	// РасчетыВУсловныхЕдиницах вычисляются параллельно, чтобы при необходимости не делать то же самое второй раз.
	РасчетыВУсловныхЕдиницах = Ложь;
	ВалютаВзаиморасчетов     = ДанныеИБ.Валюта;
	
	Если ДанныеИБ.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту Тогда
		Если ЗначениеЗаполнено(ДанныеИБ.Соглашение) Тогда
			ВалютаВзаиморасчетов     = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.Соглашение, "Валюта");
			РасчетыВУсловныхЕдиницах = ВзаиморасчетыСервер.РасчетыВУсловныхЕдиницах(ДанныеИБ.Соглашение);
		Иначе
			Если ДанныеИБ.РасшифровкаПлатежа.Количество() > 0 Тогда
				ВалютаВзаиморасчетов     = ДанныеИБ.РасшифровкаПлатежа[0].ВалютаВзаиморасчетов;
				РасчетыВУсловныхЕдиницах = (ДанныеИБ.Валюта = Константы.ВалютаРегламентированногоУчета.Получить() И ДанныеИБ.Валюта <> ВалютаВзаиморасчетов);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ВыгрузитьПодразделениеИзРеквизитаДокумента(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, "Склад");
	ВыгрузитьНалогообложениеНДС(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Ложь, Ложь);
	
	Если Не ЗначениеЗаполнено(ДанныеИБ.ХозяйственнаяОперация) Тогда
		ДанныеXDTO.Вставить("ВидОперации", "ВозвратПоставщику");
	КонецЕсли;
	
	ДанныеXDTO.Вставить("ДокументПоступления", Неопределено);
	ВыгрузитьКурсИКратностьВзаиморасчетов(ДанныеXDTO, ВалютаВзаиморасчетов, ДанныеИБ.Дата);
	
	// Товары
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВозвратТоваровПоставщикуВидыЗапасов.НомерСтроки КАК НомерСтроки,
		|	ВЫРАЗИТЬ(ВозвратТоваровПоставщикуВидыЗапасов.ДокументПоступления КАК Документ.ПриобретениеТоваровУслуг) КАК ДокументПоступления
		|ПОМЕСТИТЬ втДокументыПоступления
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.ВидыЗапасов КАК ВозвратТоваровПоставщикуВидыЗапасов
		|ГДЕ
		|	ВозвратТоваровПоставщикуВидыЗапасов.ДокументПоступления.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
		|	И ВозвратТоваровПоставщикуВидыЗапасов.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	&ТекстЗапросаХарактеристика,
		|	&ТекстЗапросаУпаковка,
		|	&ТекстЗапросаСерия,
		|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВидыЗапасов.Количество КАК Количество,
		|	ВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
		|	ВЫБОР
		|		КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
		|			ТОГДА ВидыЗапасов.СуммаСНДС
		|		ИНАЧЕ ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС
		|	КОНЕЦ КАК Сумма,
		|	ВидыЗапасов.СуммаНДС КАК СуммаНДС,
		|	ВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
		|				ТОГДА ВидыЗапасов.СуммаСНДС / ВидыЗапасов.Количество
		|			ИНАЧЕ (ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) / ВидыЗапасов.Количество
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	ВидыЗапасов.НомерГТД.Код КАК НомерГТД,
		|	ВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВидыЗапасов.Ссылка.ВозвратПринятойМногооборотнойТары КАК ВозвратПринятойМногооборотнойТары,
		|	ВидыЗапасов.Ссылка.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
		|				ТОГДА ВидыЗапасов.СуммаСНДС / ВидыЗапасов.КоличествоУпаковок
		|			ИНАЧЕ (ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) / ВидыЗапасов.КоличествоУпаковок
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ЦенаЗаУпаковку,
		|	ВЫБОР
		|		КОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|				И ВидыЗапасов.Ссылка.ВозвратПринятойМногооборотнойТары
		|			ТОГДА ""ВозвратнаяТара""
		|		КОГДА ВидыЗапасов.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровКомитенту)
		|			ТОГДА ВЫРАЗИТЬ(""КомиссионныеТовары"" КАК СТРОКА(18))
		|		ИНАЧЕ ВЫРАЗИТЬ(""СобственныеТовары"" КАК СТРОКА(18))
		|	КОНЕЦ КАК ТипЗапасов,
		|	втДокументыПоступления.ДокументПоступления КАК ДокументПоступления
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.ВидыЗапасов КАК ВидыЗапасов
		|		ЛЕВОЕ СОЕДИНЕНИЕ втДокументыПоступления КАК втДокументыПоступления
		|		ПО ВидыЗапасов.НомерСтроки = втДокументыПоступления.НомерСтроки
		|ГДЕ
		|	ВидыЗапасов.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасшифровкаПлатежа.Заказ КАК Заказ
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.РасшифровкаПлатежа КАК РасшифровкаПлатежа
		|ГДЕ
		|	РасшифровкаПлатежа.Ссылка = &Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаХарактеристика",
		ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "ВидыЗапасов.АналитикаУчетаНоменклатуры"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаУпаковка",
		ПолучитьТекстЗапросаУпаковки(КомпонентыОбмена, "ВидыЗапасов"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаСерия",
		ПолучитьТекстЗапросаСерии(КомпонентыОбмена, "ВидыЗапасов.АналитикаУчетаНоменклатуры"));
		
		
	#Область МаркировкиУпаковки
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() +
		"ВЫБРАТЬ
		|	ВозвратТоваровПоставщикуШтрихкодыУпаковок.НомерСтроки КАК НомерСтрокиДокумента,
		|	ВозвратТоваровПоставщикуШтрихкодыУпаковок.ШтрихкодУпаковки КАК ШтрихкодУпаковки,
		|	ШтрихкодыУпаковокТоваров.ТипУпаковки КАК ТипУпаковки,
		|	ШтрихкодыУпаковокТоваров.Номенклатура КАК Номенклатура,
		|	ШтрихкодыУпаковокТоваров.Характеристика КАК Характеристика,
		|	ШтрихкодыУпаковокТоваров.Серия КАК Серия,
		|	ШтрихкодыУпаковокТоваров.Упаковка КАК Упаковка,
		|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода КАК ЗначениеШтрихкода
		|ПОМЕСТИТЬ втШтрихкодыУпаковок
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.ШтрихкодыУпаковок КАК ВозвратТоваровПоставщикуШтрихкодыУпаковок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
		|		ПО ВозвратТоваровПоставщикуШтрихкодыУпаковок.ШтрихкодУпаковки = ШтрихкодыУпаковокТоваров.Ссылка
		|ГДЕ
		|	ВозвратТоваровПоставщикуШтрихкодыУпаковок.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втШтрихкодыУпаковок.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	втШтрихкодыУпаковок.Номенклатура КАК Номенклатура,
		|	&ТипАкцизнойМарки,
		|	&ТекстЗапросаХарактеристикаАкцизныеМарки,
		|	&ТекстЗапросаСерияАкцизныеМарки,
		|	&ТекстЗапросаУпаковкаАкцизныеМарки,
		|	втШтрихкодыУпаковок.ЗначениеШтрихкода КАК НомерАкцизнойМарки
		|ИЗ
		|	втШтрихкодыУпаковок КАК втШтрихкодыУпаковок
		|ГДЕ
		|	втШтрихкодыУпаковок.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втШтрихкодыУпаковок.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	втШтрихкодыУпаковок.ШтрихкодУпаковки КАК МаркировкаУпаковки
		|ИЗ
		|	втШтрихкодыУпаковок КАК втШтрихкодыУпаковок
		|ГДЕ
		|	НЕ втШтрихкодыУпаковок.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)
		|	И НЕ втШтрихкодыУпаковок.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МультитоварнаяУпаковка)";
	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаХарактеристикаАкцизныеМарки",
			ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "втШтрихкодыУпаковок"));
			
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаСерияАкцизныеМарки",
			ПолучитьТекстЗапросаСерии(КомпонентыОбмена, "втШтрихкодыУпаковок"));
			
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаУпаковкаАкцизныеМарки",
			ПолучитьТекстЗапросаУпаковки(КомпонентыОбмена, "втШтрихкодыУпаковок", Ложь));
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТипАкцизнойМарки",
			ПолучитьТекстЗапросаТипАкцизнойМарки(КомпонентыОбмена, "втШтрихкодыУпаковок"));
			
	#КонецОбласти
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Запрос.УстановитьПараметр("Дата",   ДанныеИБ.Дата);
	Результат = Запрос.ВыполнитьПакет();
	
	Товары = Результат[1].Выгрузить();
	
	Если ЗначениеЗаполнено(ДанныеИБ.ДокументПоступления) И ОбщегоНазначения.СсылкаСуществует(ДанныеИБ.ДокументПоступления)
		И НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.ДокументПоступления, "ХозяйственнаяОперация") = Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо Тогда
		ДанныеXDTO.Вставить("ДокументПоступления", ДанныеИБ.ДокументПоступления);
		Товары.ЗаполнитьЗначения(Неопределено, "ДокументПоступления");
	КонецЕсли;
	
	ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, Товары);
	
	НДСПоСтавкам2и4 = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.Контрагент, "НДСпоСтавкам4и2");
	ОпределитьСтавкуНДС_Отправка(Товары, НДСПоСтавкам2и4);
	ДанныеXDTO.Вставить("Товары", Товары);
	
	Если ЗначениеЗаполнено(ДанныеИБ.Договор) Тогда
		ДанныеXDTO.Вставить("Договор", ДанныеИБ.Договор);
	Иначе
		// Заказ поставщику берем из табличной части "Расшифровка платежа"
		// Если там указано несколько заказов или в качестве заказа указан документ, не являющийся заказом, то ничего не делаем
		
		ТабЗаказов = Результат[2].Выгрузить();
		
		Если ТабЗаказов.Количество() = 1 И ТипЗнч(ТабЗаказов[0].Заказ) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			ЗаказПоставщику = ТабЗаказов[0].Заказ;
		Иначе
			ЗаказПоставщику = Неопределено;
		КонецЕсли;
		
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.Контрагент               = ДанныеИБ.Контрагент;
		ПараметрыПоУмолчанию.Организация              = ДанныеИБ.Организация;
		ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = ВалютаВзаиморасчетов;
		ПараметрыПоУмолчанию.Дата                     = ДанныеИБ.Дата;
		ПараметрыПоУмолчанию.Номер                    = ДанныеИБ.Номер;
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = РасчетыВУсловныхЕдиницах;
		ПараметрыПоУмолчанию.ВидДоговора              = ?(ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту,
			"СКомитентом", "СПоставщиком");
		
		Заказ = Новый Структура("Заказ, Соглашение, Сделка", ЗаказПоставщику, ДанныеИБ.Соглашение, ДанныеИБ.Сделка);
		
		Договор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена, Заказ, ДанныеИБ);
		
		ДанныеXDTO.Вставить("Договор", Договор);
		
	КонецЕсли;
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.7") Тогда
		АкцизныеМарки = Результат[Результат.Количество() - 2].Выгрузить();
		ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, АкцизныеМарки);
		ДанныеXDTO.Вставить("АкцизныеМарки", АкцизныеМарки);
	КонецЕсли;
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.7") Тогда
		МаркировкиУпаковок = Результат[Результат.Количество() - 1].Выгрузить();
		ДанныеXDTO.Вставить("МаркировкиУпаковок", МаркировкиУпаковок);
	КонецЕсли;
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
КонецПроцедуры
