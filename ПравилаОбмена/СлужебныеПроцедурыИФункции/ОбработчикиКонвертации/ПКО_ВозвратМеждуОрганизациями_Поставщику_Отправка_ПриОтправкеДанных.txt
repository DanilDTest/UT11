Процедура ПКО_ВозвратМеждуОрганизациями_Поставщику_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерДок = Лев(ДанныеИБ.Номер, 5) + "И" + Сред(ДанныеИБ.Номер, 7);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДок);
	
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеИБ.РасшифровкаПлатежа.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("ВалютаВзаиморасчетов", ДанныеИБ.РасшифровкаПлатежа[0].ВалютаВзаиморасчетов);
	Иначе
		ДанныеXDTO.Вставить("ВалютаВзаиморасчетов", ДанныеИБ.Валюта);
	КонецЕсли;
	
	СкладДляВыгрузки = СкладДляВыгрузки(ДанныеИБ.Склад, КомпонентыОбмена.ПараметрыКонвертации);
	ДанныеXDTO.Вставить("Склад", СкладДляВыгрузки);
	
	ВыгрузитьПодразделениеИзРеквизитаДокумента(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, "Склад");
	ВыгрузитьНалогообложениеНДС(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Ложь, Ложь);
	
	Если ДанныеИБ.РасчетыЧерезОтдельногоКонтрагента Тогда
		КонтрагентСсылка = ДанныеИБ.Контрагент;
	Иначе
		КонтрагентСсылка = КонтрагентИзОрганизации(ДанныеИБ.ОрганизацияПолучатель, КомпонентыОбмена);
	КонецЕсли;
	ДанныеXDTO.Вставить("Контрагент", КонтрагентСсылка);
	
	#Область Договор
	
	ИнструкцияДоговор = Неопределено;
	Если ДанныеИБ.РасчетыЧерезОтдельногоКонтрагента
		И ЗначениеЗаполнено(ДанныеИБ.ДоговорПокупки)
		И ОбщегоНазначения.СсылкаСуществует(ДанныеИБ.ДоговорПокупки) Тогда
		
		ИнструкцияДоговор = Новый Структура;
		ИнструкцияДоговор.Вставить("ИмяПКО",   "Справочник_ДоговорыКонтрагентов");
		ИнструкцияДоговор.Вставить("Значение", ДанныеИБ.ДоговорПокупки);
	
	ИначеЕсли ЗначениеЗаполнено(ДанныеИБ.Договор) Тогда
		
		ДанныеДоговора = ДанныеДоговораМеждуОрганизациями(КомпонентыОбмена, ДанныеИБ.Договор);
		ИнструкцияДоговор = Новый Структура("Значение, ИмяПКО", ДанныеДоговора, "Справочник_ДоговорыКонтрагентов_ИзСтруктуры");
		
	Иначе
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.Организация = ДанныеИБ.Организация;
		ПараметрыПоУмолчанию.Контрагент  = КонтрагентСсылка;
		Если ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями Тогда
			ПараметрыПоУмолчанию.ВидДоговора = "СПоставщиком";
		Иначе
			ПараметрыПоУмолчанию.ВидДоговора = "СКомитентом";
		КонецЕсли;
		ПараметрыПоУмолчанию.ВалютаВзаиморасчетов = ДанныеXDTO.ВалютаВзаиморасчетов;
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах =
			ДанныеИБ.Валюта = Константы.ВалютаРегламентированногоУчета.Получить()
			И ДанныеИБ.Валюта <> ДанныеXDTO.ВалютаВзаиморасчетов;
		
		ИнструкцияДоговор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию,
			КомпонентыОбмена,
			ДанныеИБ.Договор);
	КонецЕсли;
	ДанныеXDTO.Вставить("Договор", ИнструкцияДоговор);
	
	#КонецОбласти
	
	Если ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями Тогда
		ДанныеXDTO.Вставить("ВидОперации", "ВозвратПоставщику");
	Иначе
		ДанныеXDTO.Вставить("ВидОперации", "ВозвратКомитенту");
	КонецЕсли;
	
	ВыгрузитьКурсИКратностьВзаиморасчетов(ДанныеXDTO, ДанныеXDTO.ВалютаВзаиморасчетов, ДанныеИБ.Дата);
	
	// Табличная часть
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	&ТекстЗапросаХарактеристика,
		|	&ТекстЗапросаУпаковка,
		|	&ТекстЗапросаСерия,
		|	ВидыЗапасов.Количество КАК Количество,
		|	ВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
		|	ВидыЗапасов.СуммаНДС КАК СуммаНДС,
		|	ВидыЗапасов.НомерГТД.Код КАК НомерГТД,
		|	ВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
		|				ТОГДА ВидыЗапасов.СуммаСНДС / ВидыЗапасов.Количество
		|			ИНАЧЕ (ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) / ВидыЗапасов.Количество
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	ВЫБОР
		|		КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
		|			ТОГДА ВидыЗапасов.СуммаСНДС
		|		ИНАЧЕ ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС
		|	КОНЕЦ КАК Сумма,
		|	ВЫБОР
		|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзТекущегоДокумента)
		|			ТОГДА ВЫБОР
		|					КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
		|						ТОГДА ВидыЗапасов.СуммаСНДС
		|					ИНАЧЕ ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС
		|				КОНЕЦ
		|		КОГДА ВидыЗапасов.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.Вручную)
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(&Курс, 0) > 0
		|							И ЕСТЬNULL(&Кратность, 0) > 0
		|						ТОГДА ВЫРАЗИТЬ(ВидыЗапасов.СебестоимостьРегл / &Курс / &Кратность КАК ЧИСЛО(15, 2))
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Себестоимость,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
		|				ТОГДА ВидыЗапасов.СуммаСНДС / ВидыЗапасов.КоличествоУпаковок
		|			ИНАЧЕ (ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) / ВидыЗапасов.КоличествоУпаковок
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ЦенаЗаУпаковку
		|ИЗ
		|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
		|ГДЕ
		|	ВидыЗапасов.Ссылка = &Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаХарактеристика",
		ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "ВидыЗапасов.АналитикаУчетаНоменклатуры"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаУпаковка",
		ПолучитьТекстЗапросаУпаковки(КомпонентыОбмена, "ВидыЗапасов"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаСерия",
		ПолучитьТекстЗапросаСерии(КомпонентыОбмена, "ВидыЗапасов.АналитикаУчетаНоменклатуры"));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Если ДанныеИБ.Валюта = ВалютаРегламентированногоУчета(КомпонентыОбмена) Тогда
		Запрос.УстановитьПараметр("Курс", 1);
		Запрос.УстановитьПараметр("Кратность", 1);
	Иначе
		КурсВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДанныеИБ.Валюта, ДанныеИБ.Дата);
		Запрос.УстановитьПараметр("Курс", КурсВалюты.Курс);
		Запрос.УстановитьПараметр("Кратность", КурсВалюты.Кратность);
	КонецЕсли;
		
	Товары = Запрос.Выполнить().Выгрузить();
	Товары.Колонки.Добавить("ТипЗапасов");
	ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, Товары);
	Товары.ЗаполнитьЗначения(?(ДанныеXDTO.ВидОперации = "ВозвратПоставщику", "СобственныеТовары", "КомиссионныеТовары"), "ТипЗапасов");
	ДанныеXDTO.Вставить("Товары", Товары);
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
КонецПроцедуры
