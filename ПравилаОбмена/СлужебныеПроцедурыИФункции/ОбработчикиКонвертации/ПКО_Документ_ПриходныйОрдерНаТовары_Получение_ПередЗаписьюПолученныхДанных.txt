Процедура ПКО_Документ_ПриходныйОрдерНаТовары_Получение_ПередЗаписьюПолученныхДанных(ПолученныеДанные, ДанныеИБ, КонвертацияСвойств, КомпонентыОбмена)
	ДанныеДляЗаписиВИБ = ?(ДанныеИБ = Неопределено, ПолученныеДанные, ДанныеИБ);
	Если ЗначениеЗаполнено(ПолученныеДанные.Распоряжение) Тогда
		Если ТипЗнч(ПолученныеДанные.Распоряжение) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") 
			И ЗначениеЗаполнено(ПолученныеДанные.Распоряжение.ЗаказПоставщику) Тогда
			ПолученныеДанные.Распоряжение = ПолученныеДанные.Распоряжение.ЗаказПоставщику;	
		ИначеЕсли ТипЗнч(ПолученныеДанные.Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров") 
			И ЗначениеЗаполнено(ПолученныеДанные.Распоряжение.ЗаказНаПеремещение) Тогда
			ПолученныеДанные.Распоряжение = ПолученныеДанные.Распоряжение.ЗаказНаПеремещение;		
		КонецЕсли;  
		Если НЕ ЗначениеЗаполнено(ДанныеДляЗаписиВИБ.ХозяйственнаяОперация) Тогда
			ПолученныеДанные.ХозяйственнаяОперация = ПолученныеДанные.Распоряжение.ХозяйственнаяОперация;    
		Иначе
			ПолученныеДанные.ХозяйственнаяОперация = ДанныеДляЗаписиВИБ.ХозяйственнаяОперация;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПолученныеДанные.Распоряжение)
		И (ТипЗнч(ПолученныеДанные.Распоряжение) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг")
		ИЛИ ТипЗнч(ПолученныеДанные.Распоряжение) = Тип("ДокументСсылка.ЗаказПоставщику")) Тогда
		ПолученныеДанные.Отправитель = ПолученныеДанные.Распоряжение.Партнер;
	КонецЕсли;
	         
	
	Если ЗначениеЗаполнено(ПолученныеДанные.Склад) Тогда
	 	
	 	ИспользоватьПомещения = СкладыСервер.ИспользоватьСкладскиеПомещения(ПолученныеДанные.Склад, ПолученныеДанные.Дата, Истина);
	 	Если НЕ ЗначениеЗаполнено(ПолученныеДанные.Помещение) 
	 		И ИспользоватьПомещения Тогда
	 	  	ПолученныеДанные.Помещение = ПолучитьПомещениеПоУмолчанию(ПолученныеДанные.Склад);     
	 	КонецЕсли;
	 	
	 	Если НЕ ЗначениеЗаполнено(ПолученныеДанные.ЗонаПриемки) 
	 		И ИспользоватьПомещения Тогда
	 	  	ПолученныеДанные.ЗонаПриемки = ЗонаПриемкиПоУмолчанию(ПолученныеДанные.Склад, ПолученныеДанные.Помещение, ПолученныеДанные.ЗонаПриемки);
	 	КонецЕсли;
	 	
	КонецЕсли;
	         
	
	Если НЕ ЗначениеЗаполнено(ПолученныеДанные.Отправитель) Тогда
		ПолученныеДанные.Отправитель = Справочники.Партнеры.НеизвестныйПартнер;
	КонецЕсли;	
	
	Если ДанныеИБ = Неопределено Тогда
		ПолученныеДанные.Статус = Перечисления.СтатусыПриходныхОрдеров.Принят;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПолученныеДанные.СкладскаяОперация) Тогда
		Если НЕ ЗначениеЗаполнено(ДанныеДляЗаписиВИБ.СкладскаяОперация) Тогда
			ПолученныеДанные.СкладскаяОперация = СкладыКлиентСервер.СкладскаяОперацияПриемкиПоХозяйственнойОперации(ПолученныеДанные.ХозяйственнаяОперация);
		Иначе
			ПолученныеДанные.СкладскаяОперация = ДанныеДляЗаписиВИБ.СкладскаяОперация;
		КонецЕсли;   
	КонецЕсли;        
	     
	    
	//Если НЕ ДанныеИБ = Неопределено Тогда
	
	//	ОснованиеИБ = ДанныеИБ.RM_ДокументОснование;
	//	ОснованиеПолученных = ПолученныеДанные.RM_ДокументОснование;     
		
	//	Если НЕ ОснованиеИБ = ОснованиеПолученных
	//		И НЕ ЗначениеЗаполнено(ОснованиеПолученных) ИЛИ НЕ ОбщегоНазначения.СсылкаСуществует(ОснованиеПолученных) Тогда
	//		ПолученныеДанные.RM_ДокументОснование = ОснованиеИБ;
	//	КонецЕсли;
		
	//КонецЕсли;
	
	ПараметрыУказанияСерий = Новый ФиксированнаяСтруктура(НоменклатураСервер.ПараметрыУказанияСерий(ПолученныеДанные, Документы.ПриходныйОрдерНаТовары));
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ПолученныеДанные, ПараметрыУказанияСерий);
КонецПроцедуры
