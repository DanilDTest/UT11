Процедура ПКО_ПередачаМеждуОрганизациями_ПТУ_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	ДатаДок  = НачалоДня(ДанныеИБ.Дата);
	НомерДок = Лев(ДанныеИБ.Номер, 5) + "И" + Сред(ДанныеИБ.Номер, 7);
	
	НомерВхДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(НомерДок, Ложь, Истина);
	
	Если ДанныеИБ.РасчетыЧерезОтдельногоКонтрагента Тогда
		КонтрагентСсылка = ДанныеИБ.Контрагент;
	Иначе
		КонтрагентСсылка = КонтрагентИзОрганизации(ДанныеИБ.Организация, КомпонентыОбмена);
	КонецЕсли;
	
	Если СтекВыгрузки.Количество() > 1 Тогда
		ДанныеXDTO.Вставить("Дата",  ДатаДок);
		ДанныеXDTO.Вставить("Номер", НомерДок);
	
		Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.6") Тогда 
			ДанныеXDTO.Вставить("Контрагент", КонтрагентСсылка);
			ДанныеXDTO.Вставить("НомерВходящегоДокумента", НомерВхДокумента);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	ДанныеXDTO.КлючевыеСвойства.Вставить("Дата",  ДатаДок);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДок);
		
	ВалютаРеглУчета  = Константы.ВалютаРегламентированногоУчета.Получить();
	СкладДляВыгрузки = СкладДляВыгрузки(ДанныеИБ.Склад, КомпонентыОбмена.ПараметрыКонвертации);	
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.6") Тогда
		ДанныеXDTO.КлючевыеСвойства.Вставить("НомерВходящегоДокумента", НомерВхДокумента);
	Иначе
		ДанныеXDTO.Вставить("НомерВходящегоДокумента", НомерВхДокумента);
	Конецесли;
	ДанныеXDTO.Вставить("Склад",                   СкладДляВыгрузки);
	
	ВыгрузитьПодразделениеИзРеквизитаДокумента(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, "Склад");
	ВыгрузитьНалогообложениеНДС(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.6") Тогда
		ДанныеXDTO.КлючевыеСвойства.Вставить("Контрагент", КонтрагентСсылка);
	Иначе
		ДанныеXDTO.Вставить("Контрагент", КонтрагентСсылка);
	КонецЕсли;
	
	Если ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
		
		ДанныеXDTO.Вставить("ВидОперации",          "ПокупкаУПоставщика");
		ДанныеXDTO.Вставить("ВалютаВзаиморасчетов", ДанныеИБ.ВалютаВзаиморасчетов);
		
		Если ДанныеИБ.Валюта = ВалютаРеглУчета
			Или ДанныеИБ.ВалютаВзаиморасчетов = ВалютаРеглУчета Тогда
			
			ДанныеXDTO.Вставить("КурсВзаиморасчетов",      ДанныеИБ.Курс);
			ДанныеXDTO.Вставить("КратностьВзаиморасчетов", ДанныеИБ.Кратность);
			
		Иначе
			ВыгрузитьКурсИКратностьВзаиморасчетов(ДанныеXDTO, ДанныеИБ.Валюта, ДанныеИБ.Дата);
		КонецЕсли;
		
	Иначе
		
		ДанныеXDTO.Вставить("ВидОперации",          "ПриемНаКомиссию");
		ДанныеXDTO.Вставить("ВалютаВзаиморасчетов", ДанныеИБ.Валюта);
		
		Если ДанныеИБ.Валюта <> ВалютаРеглУчета Тогда
			ВыгрузитьКурсИКратностьВзаиморасчетов(ДанныеXDTO, ДанныеИБ.Валюта, ДанныеИБ.Дата);
		Иначе
			ДанныеXDTO.Вставить("КурсВзаиморасчетов",      1);
			ДанныеXDTO.Вставить("КратностьВзаиморасчетов", 1);
		КонецЕсли;
		
	КонецЕсли;
	
	#Область Договор
	
	ИнструкцияДоговор = Неопределено;
	Если ДанныеИБ.РасчетыЧерезОтдельногоКонтрагента
		И ЗначениеЗаполнено(ДанныеИБ.ДоговорПокупки)
		И ОбщегоНазначения.СсылкаСуществует(ДанныеИБ.ДоговорПокупки) Тогда
		
		ИнструкцияДоговор = Новый Структура;
		ИнструкцияДоговор.Вставить("ИмяПКО",   "Справочник_ДоговорыКонтрагентов");
		ИнструкцияДоговор.Вставить("Значение", ДанныеИБ.ДоговорПокупки);
		
	ИначеЕсли ЗначениеЗаполнено(ДанныеИБ.Договор) Тогда
		
		ДанныеДоговора = ДанныеДоговораМеждуОрганизациями(КомпонентыОбмена, ДанныеИБ.Договор);
		ИнструкцияДоговор = Новый Структура("Значение, ИмяПКО", ДанныеДоговора, "Справочник_ДоговорыКонтрагентов_ИзСтруктуры");
	
	Иначе
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.Организация = ДанныеИБ.ОрганизацияПолучатель;
		ПараметрыПоУмолчанию.Контрагент  = КонтрагентСсылка;
		Если ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
			ПараметрыПоУмолчанию.ВидДоговора              = "СПоставщиком";
			ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = ДанныеИБ.ВалютаВзаиморасчетов;
			ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = (ДанныеИБ.Валюта = ВалютаРеглУчета И ДанныеИБ.Валюта <> ДанныеИБ.ВалютаВзаиморасчетов);
		Иначе
			ПараметрыПоУмолчанию.ВидДоговора              = "СКомитентом";
			ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = ДанныеИБ.Валюта;
			ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = Ложь;
		КонецЕсли;
		
		ИнструкцияДоговор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию,
			КомпонентыОбмена,
			ДанныеИБ.Договор);
	КонецЕсли;
	ДанныеXDTO.Вставить("Договор", ИнструкцияДоговор);
	
	#КонецОбласти
	
	// Табличные части
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Товары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
		|	Товары.Количество КАК Количество,
		|	Товары.Цена КАК Цена,
		|	Товары.Сумма КАК Сумма,
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	Товары.СуммаНДС КАК СуммаНДС,
		|	Товары.НомерГТД.Код КАК НомерГТД,
		|	Товары.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	Товары.СтатьяРасходов КАК СтатьяРасходов,
		|	Товары.СуммаСНДС КАК СуммаСНДС,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Серия КАК Серия,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.КоличествоУпаковок КАК КоличествоУпаковок
		|ПОМЕСТИТЬ ВременнаяТаблицаТовары
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблицаТовары.Номенклатура.Наименование КАК Содержание,
		|	ВременнаяТаблицаТовары.Количество КАК Количество,
		|	ВременнаяТаблицаТовары.Цена КАК Цена,
		|	ВременнаяТаблицаТовары.Сумма КАК Сумма,
		|	ВременнаяТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
		|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаНДС
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|ГДЕ
		|	(ВременнаяТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|			ИЛИ ВременнаяТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Аналитика.Номенклатура КАК Номенклатура,
		|	Аналитика.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВидыЗапасов.Количество КАК Количество,
		|	ВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
		|	ВидыЗапасов.СуммаНДС КАК СуммаНДС,
		|	ВидыЗапасов.НомерГТД.Код КАК НомерГТД,
		|	ВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
		|				ТОГДА ВидыЗапасов.СуммаСНДС / ВидыЗапасов.Количество
		|			ИНАЧЕ (ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) / ВидыЗапасов.Количество
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	ВЫБОР
		|		КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
		|			ТОГДА ВидыЗапасов.СуммаСНДС
		|		ИНАЧЕ ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС
		|	КОНЕЦ КАК Сумма,
		|	Аналитика.Характеристика КАК Характеристика,
		|	Аналитика.Серия КАК Серия,
		|	ВидыЗапасов.Упаковка КАК Упаковка,
		|	ВидыЗапасов.КоличествоУпаковок КАК КоличествоУпаковок
		|ПОМЕСТИТЬ ВидыЗапасов
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
		|ГДЕ
		|	ВидыЗапасов.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ТаблицаТоварыПоМаксСтроке
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ТаблицаТовары
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТовары.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВложенныйЗапрос.Цена КАК Цена,
		|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
		|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
		|	ВложенныйЗапрос.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВложенныйЗапрос.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	ВложенныйЗапрос.Количество КАК Количество,
		|	ВложенныйЗапрос.Сумма КАК Сумма,
		|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
		|	&ТекстЗапросаХарактеристика,
		|	&ТекстЗапросаСерия,
		|	&ТекстЗапросаУпаковка
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВидыЗапасов.Номенклатура КАК Номенклатура,
		|		ВидыЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|		ВидыЗапасов.Цена КАК Цена,
		|		ВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
		|		ВидыЗапасов.НомерГТД КАК НомерГТД,
		|		ВидыЗапасов.СтранаПроисхождения КАК СтранаПроисхождения,
		|		ЕСТЬNULL(ПорядокСтрокТаблицыТовары.НомерСтроки, 0) КАК НомерСтрокиДокумента,
		|		СУММА(ВидыЗапасов.Количество) КАК Количество,
		|		СУММА(ВидыЗапасов.Сумма) КАК Сумма,
		|		СУММА(ВидыЗапасов.СуммаНДС) КАК СуммаНДС,
		|		ВидыЗапасов.Характеристика КАК Характеристика,
		|		ВидыЗапасов.Серия КАК Серия,
		|		ВидыЗапасов.Упаковка КАК Упаковка,
		|		ВидыЗапасов.КоличествоУпаковок КАК КоличествоУпаковок
		|	ИЗ
		|		ВидыЗапасов КАК ВидыЗапасов
		|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоварыПоМаксСтроке КАК ПорядокСтрокТаблицыТовары
		|			ПО ВидыЗапасов.Номенклатура = ПорядокСтрокТаблицыТовары.Номенклатура
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВидыЗапасов.Номенклатура,
		|		ВидыЗапасов.ЕдиницаИзмерения,
		|		ВидыЗапасов.Цена,
		|		ВидыЗапасов.СтавкаНДС,
		|		ВидыЗапасов.НомерГТД,
		|		ВидыЗапасов.СтранаПроисхождения,
		|		ЕСТЬNULL(ПорядокСтрокТаблицыТовары.НомерСтроки, 0),
		|		ВидыЗапасов.Характеристика,
		|		ВидыЗапасов.Серия,
		|		ВидыЗапасов.Упаковка,
		|		ВидыЗапасов.КоличествоУпаковок) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиДокумента";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаХарактеристика",
		ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "ВложенныйЗапрос"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаУпаковка",
		ПолучитьТекстЗапросаУпаковки(КомпонентыОбмена, "ВложенныйЗапрос"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаСерия",
		ПолучитьТекстЗапросаСерии(КомпонентыОбмена, "ВложенныйЗапрос"));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаТовары     = РезультатыЗапроса[4].Выгрузить();
	ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, ТаблицаТовары);
	ТаблицаТовары.Колонки.Добавить("ТипЗапасов");
	
	Если ДанныеXDTO.ВидОперации = "ПриемНаКомиссию" Тогда
		ТаблицаТовары.ЗаполнитьЗначения("КомиссионныеТовары", "ТипЗапасов");
	Иначе
		ТаблицаТовары.ЗаполнитьЗначения("СобственныеТовары", "ТипЗапасов");
		// Услуги выгружаются только для операции реализации в другую организацию.
		ДанныеXDTO.Вставить("Услуги", РезультатыЗапроса[1].Выгрузить());
	КонецЕсли;
	
	ЗаполнитьВидДеятельностиНДСВТЧ(КомпонентыОбмена, ДанныеИБ, ТаблицаТовары, "ЗакупкаПодДеятельность", "ПередачаПодДеятельность");
	
	ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
КонецПроцедуры
