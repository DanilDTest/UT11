Процедура ПКО_Документ_ЗаявкаНаРасходДСВыплатаЗарплаты_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	ПолученныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты;
	ПолученныеДанные.ПриоритетОплаты = Справочники.ПриоритетыОплаты.ПолучитьПриоритетПоУмолчанию(Неопределено);
	
	ПолученныеДанные.Проведен = Истина;
	
	Если ПолученныеДанные.ФормаОплатыЗаявки = Перечисления.ФормыОплаты.Наличная Тогда
		ПолученныеДанные.ХозяйственнаяОперацияПоЗарплате = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу;	
	ИначеЕсли ПолученныеДанные.ФормаОплатыЗаявки = Перечисления.ФормыОплаты.Безналичная Тогда
		// Необходимым и достаточным условием того, что это зарплатный проект, считаем заполненность свойств Контрагент и Банковский счет.
		Если ДанныеXDTO.Свойство("Контрагент") И ЗначениеЗаполнено(ДанныеXDTO.Контрагент)
			И ДанныеXDTO.Свойство("БанковскийСчет") И ЗначениеЗаполнено(ДанныеXDTO.БанковскийСчет) Тогда
			
			ПолученныеДанные.ХозяйственнаяОперацияПоЗарплате = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту;
		Иначе
			ПолученныеДанные.ХозяйственнаяОперацияПоЗарплате = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета;
		КонецЕсли;
	КонецЕсли;
	
	ПолученныеДанные.СтатьяДвиженияДенежныхСредств = 
		Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(
			?(ПолученныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты,
				ПолученныеДанные.ХозяйственнаяОперацияПоЗарплате, ПолученныеДанные.ХозяйственнаяОперация));
	
	НомерВедомостиНаВыплатуЗарплаты	= "";
	ДатаВедомостиНаВыплатуЗарплаты	= '00010101';
	
	РасшифровкаПлатежаXDTO = Неопределено;
	Если ДанныеXDTO.Свойство("РасшифровкаПлатежа", РасшифровкаПлатежаXDTO)
		И ЗначениеЗаполнено(РасшифровкаПлатежаXDTO) Тогда
		
		МассивРасшифровкаПлатежа = Новый Массив;
		
		Если ПолученныеДанные.ХозяйственнаяОперацияПоЗарплате = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета Тогда
			МассивЛицевыеСчетаСотрудников = Новый Массив;
			
			ПравилаЗаполнения = Новый Структура;
			ПравилаЗаполнения.Вставить("Сотрудник", "ФизическоеЛицо");
			ПравилаЗаполнения.Вставить("БанковскийСчет", "ЛицевойСчет");
			ПравилаЗаполнения.Вставить("Сумма", "Сумма");
			
			СуммаИтого = 0;
			Для Каждого СтрокаРасшифровкаПлатежаXDTO Из РасшифровкаПлатежаXDTO Цикл
				СтрокаРасшифровкаПлатежа = ДанныеКоллекцииВВидеСтруктуры(СтрокаРасшифровкаПлатежаXDTO, ПравилаЗаполнения);		
				МассивЛицевыеСчетаСотрудников.Добавить(СтрокаРасшифровкаПлатежа);
				
				НомерВедомостиНаВыплатуЗарплаты	= СтрокаРасшифровкаПлатежаXDTO.НомерВедомостиНаВыплатуЗарплаты;
				ДатаВедомостиНаВыплатуЗарплаты	= СтрокаРасшифровкаПлатежаXDTO.ДатаВедомостиНаВыплатуЗарплаты;
				
				СуммаИтого = СуммаИтого + СтрокаРасшифровкаПлатежа.Сумма;
			КонецЦикла;
			
			Если МассивЛицевыеСчетаСотрудников.Количество() > 0 Тогда
				ПолученныеДанные.ДополнительныеСвойства.Вставить("ЛицевыеСчетаСотрудников", МассивЛицевыеСчетаСотрудников);
			КонецЕсли; 
			
			СтрокаРасшифровкаПлатежа = Новый Структура("Сумма", СуммаИтого);
			МассивРасшифровкаПлатежа.Добавить(СтрокаРасшифровкаПлатежа);
		Иначе
			ПравилаЗаполнения = Новый Соответствие;
			ПравилаЗаполнения.Вставить("Сумма", "Сумма");
			ПравилаЗаполнения.Вставить("СтатьяДДС", "СтатьяДвиженияДенежныхСредств");
			
			Для Каждого СтрокаРасшифровкаПлатежаXDTO Из РасшифровкаПлатежаXDTO Цикл
				СтрокаРасшифровкаПлатежа = ДанныеКоллекцииВВидеСтруктуры(СтрокаРасшифровкаПлатежаXDTO, ПравилаЗаполнения);		
				МассивРасшифровкаПлатежа.Добавить(СтрокаРасшифровкаПлатежа);
				
				НомерВедомостиНаВыплатуЗарплаты	= СтрокаРасшифровкаПлатежаXDTO.НомерВедомостиНаВыплатуЗарплаты;
				ДатаВедомостиНаВыплатуЗарплаты	= СтрокаРасшифровкаПлатежаXDTO.ДатаВедомостиНаВыплатуЗарплаты;
			КонецЦикла;
		КонецЕсли;
		
		Если МассивРасшифровкаПлатежа.Количество() > 0 Тогда
			ПолученныеДанные.ДополнительныеСвойства.Вставить("РасшифровкаПлатежа", МассивРасшифровкаПлатежа);
		КонецЕсли;
	КонецЕсли;
	
	ПолученныеДанные.ДополнительныеСвойства.Вставить("НомерВедомостиНаВыплатуЗарплаты",	НомерВедомостиНаВыплатуЗарплаты);
	ПолученныеДанные.ДополнительныеСвойства.Вставить("ДатаВедомостиНаВыплатуЗарплаты",	ДатаВедомостиНаВыплатуЗарплаты);
КонецПроцедуры
