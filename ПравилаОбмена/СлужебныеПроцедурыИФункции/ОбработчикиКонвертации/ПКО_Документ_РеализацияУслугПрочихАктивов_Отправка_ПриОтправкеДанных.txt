Процедура ПКО_Документ_РеализацияУслугПрочихАктивов_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Номер = 	Лев(ДанныеИБ.Номер, 5) + "П" + Сред(ДанныеИБ.Номер, 7);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", Номер);
	
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	ДанныеXDTO.Вставить("ВидОперации", "РеализацияКлиенту");
	ДанныеXDTO.Вставить("ВидЭД", "ТОРГ12");
	
	ДанныеXDTO.Вставить("ГлавныйБухгалтер", ДанныеИБ.ГлавныйБухгалтер.ФизическоеЛицо);
	ДанныеXDTO.Вставить("Руководитель", ДанныеИБ.Руководитель.ФизическоеЛицо);
	
	ВыгрузитьПодразделение(ДанныеИБ, ДанныеXDTO);
	ВыгрузитьНалогообложениеНДС(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Ложь);
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	// Дополнительные свойства для договора
	Если ЗначениеЗаполнено(ДанныеИБ.Договор) Тогда
		ДанныеXDTO.Вставить("Договор", ДанныеИБ.Договор);
	Иначе
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.Контрагент = ДанныеИБ.Контрагент;
		ПараметрыПоУмолчанию.Организация = ДанныеИБ.Организация;
		ПараметрыПоУмолчанию.ВалютаВзаиморасчетов = ДанныеИБ.ВалютаВзаиморасчетов;
		ПараметрыПоУмолчанию.ВидДоговора = "СПокупателем";
		ПараметрыПоУмолчанию.Дата = ДанныеИБ.Дата;
		ПараметрыПоУмолчанию.Номер = ДанныеИБ.Номер;
		Если ЗначениеЗаполнено(ДанныеИБ.Соглашение) Тогда
			РасчетыВУсловныхЕдиницах = ВзаиморасчетыСервер.РасчетыВУсловныхЕдиницах(ДанныеИБ.Соглашение);
		Иначе
			РасчетыВУсловныхЕдиницах = (ДанныеИБ.Валюта = ВалютаРеглУчета И ДанныеИБ.Валюта <> ДанныеИБ.ВалютаВзаиморасчетов);
		КонецЕсли;
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = РасчетыВУсловныхЕдиницах;
		
		Заказ = Новый Структура("Заказ, Соглашение, Сделка", Неопределено, ДанныеИБ.Соглашение, Неопределено);
		Договор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена, Заказ, ДанныеИБ);
		ДанныеXDTO.Вставить("Договор", Договор);
	КонецЕсли;
	
	// Данные шапки документа необходимы для вычисления
	// курса и кратности взаиморасчетов.
	ШапкаДокумента = 
		"ВЫБРАТЬ
		|	ДанныеШапкиДокумента.Валюта,
		|	ДанныеШапкиДокумента.ВалютаВзаиморасчетов,
		|	ДанныеШапкиДокумента.Курс КАК КурсВзаиморасчетов,
		|	ДанныеШапкиДокумента.Кратность КАК КратностьВзаиморасчетов
		|ПОМЕСТИТЬ ДанныеШапкиДокумента
		|ИЗ
		|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеШапкиДокумента
		|ГДЕ
		|	ДанныеШапкиДокумента.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
		
	Если ДанныеИБ.Валюта = ВалютаРеглУчета
		Или ДанныеИБ.ВалютаВзаиморасчетов = ВалютаРеглУчета Тогда
		ДанныеОперации = "
			|ВЫБРАТЬ
			|	ДанныеШапкиДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
			|	ДанныеШапкиДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов
			|ИЗ
			|	ДанныеШапкиДокумента КАК ДанныеШапкиДокумента
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////";
	Иначе
		ДанныеОперации = "
			|ВЫБРАТЬ
			|	ЕСТЬNULL(КурсВалютыДокумента.Курс, 1) КАК КурсВзаиморасчетов,
			|	ЕСТЬNULL(КурсВалютыДокумента.Кратность, 1) КАК КратностьВзаиморасчетов
			|ИЗ
			|	ДанныеШапкиДокумента КАК ДанныеШапкиДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
			|				&Дата,
			|				Валюта В
			|					(ВЫБРАТЬ
			|						Док.Валюта
			|					ИЗ
			|						ДанныеШапкиДокумента КАК Док)) КАК КурсВалютыДокумента
			|		ПО ДанныеШапкиДокумента.Валюта = КурсВалютыДокумента.Валюта
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////";
	КонецЕсли;
		
	УслугиДокумента = "
		|ВЫБРАТЬ
		|	РеализацияУслугПрочихАктивовДоходы.Содержание КАК Содержание,
		|	РеализацияУслугПрочихАктивовДоходы.Количество КАК Количество,
		|	РеализацияУслугПрочихАктивовДоходы.Цена КАК Цена,
		|	РеализацияУслугПрочихАктивовДоходы.Сумма КАК Сумма,
		|	РеализацияУслугПрочихАктивовДоходы.СтавкаНДС КАК СтавкаНДС,
		|	РеализацияУслугПрочихАктивовДоходы.СуммаНДС КАК СуммаНДС,
		|	РеализацияУслугПрочихАктивовДоходы.НомерСтроки КАК НомерСтрокиДокумента,
		|	ВЫБОР
		|		КОГДА СтатьиДоходов.СчетУчета ЕСТЬ NULL
		|			ТОГДА """"
		|		КОГДА ТИПЗНАЧЕНИЯ(СтатьиДоходов.СчетУчета) = ТИП(СТРОКА)
		|			ТОГДА СтатьиДоходов.СчетУчета
		|	КОНЕЦ КАК СчетДоходов
		|ИЗ
		|	Документ.РеализацияУслугПрочихАктивов.Доходы КАК РеализацияУслугПрочихАктивовДоходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
		|		ПО РеализацияУслугПрочихАктивовДоходы.СтатьяДоходов = СтатьиДоходов.Ссылка
		|ГДЕ
		|	РеализацияУслугПрочихАктивовДоходы.Ссылка = &Ссылка";
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ШапкаДокумента
		+ ДанныеОперации
		+ УслугиДокумента;
		
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Запрос.УстановитьПараметр("Дата", ДанныеИБ.Дата);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеОперации = РезультатыЗапроса[1].Выбрать();
	Если ДанныеОперации.Следующий() Тогда
		ДанныеXDTO.Вставить("КурсВзаиморасчетов",      ДанныеОперации.КурсВзаиморасчетов);
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", ДанныеОперации.КратностьВзаиморасчетов);
	КонецЕсли;
	
	ТабУслуги = РезультатыЗапроса[2].Выгрузить();
	ДанныеXDTO.Вставить("Услуги", ТабУслуги);
КонецПроцедуры
