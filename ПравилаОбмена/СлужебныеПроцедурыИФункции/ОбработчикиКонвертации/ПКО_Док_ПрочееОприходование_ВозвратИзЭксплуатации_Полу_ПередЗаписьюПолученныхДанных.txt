Процедура ПКО_Док_ПрочееОприходование_ВозвратИзЭксплуатации_Полу_ПередЗаписьюПолученныхДанных(ПолученныеДанные, ДанныеИБ, КонвертацияСвойств, КомпонентыОбмена)
	ЗаполнитьСкладПоУмолчанию(ПолученныеДанные, ДанныеИБ, КомпонентыОбмена);
	ЗаполнитьПодразделениеПоУмолчанию(ПолученныеДанные, ДанныеИБ, КомпонентыОбмена);
	ДокументСсылка = ?(ДанныеИБ = Неопределено, ПолученныеДанные.ПолучитьСсылкуНового(), ДанныеИБ.Ссылка);
	ЗагрузитьДополнительныеСведения(ДокументСсылка, ПолученныеДанные.ДополнительныеСвойства, КомпонентыОбмена);
	
	// Заполним таблицу для поиска партий ТМЦ в эксплуатации.
	НомерСтроки = 0;
	ТаблицаПартииТМЦ = КомпонентыОбмена.ПараметрыКонвертации.ТаблицаПартииТМЦ;
	Для Каждого ИсходныеДанные Из ПолученныеДанные.ДополнительныеСвойства.Товары Цикл
		НомерСтроки = НомерСтроки + 1;
		Если ИсходныеДанные.Свойство("ДокументПередачи") И ИсходныеДанные.Свойство("ФизическоеЛицо") Тогда
			СтрокаПартииТМЦ = ТаблицаПартииТМЦ.Добавить();
			СтрокаПартииТМЦ.ПрочееОприходованиеТоваров = ДокументСсылка;
			СтрокаПартииТМЦ.НомерСтроки                = НомерСтроки;
			
			ДокументПередачи = RM_ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(
				КомпонентыОбмена,
				ИсходныеДанные.ДокументПередачи,
				RM_ОбменДаннымиXDTOСервер.ПКОПоИмени(КомпонентыОбмена, "Документ_ВнутреннееПотреблениеТоваров_Получение"), 
				"ПолучитьСсылку");
				
			СтрокаПартииТМЦ.ДокументПередачи = ДокументПередачи.Ссылка;
			
			ФизическоеЛицо = RM_ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(
				КомпонентыОбмена,
				ИсходныеДанные.ФизическоеЛицо,
				RM_ОбменДаннымиXDTOСервер.ПКОПоИмени(КомпонентыОбмена, "Справочник_ФизическиеЛица_Получение"), 
				"ПолучитьСсылку");
				
			СтрокаПартииТМЦ.ФизическоеЛицо = ФизическоеЛицо.Ссылка;
			
			Если ИсходныеДанные.Свойство("ИнвентарныйНомер") Тогда
				СтрокаПартииТМЦ.ИнвентарныйНомер = ИсходныеДанные.ИнвентарныйНомер;
			КонецЕсли;	
		
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеИБ <> Неопределено Тогда
		ЗаполнитьСвойстваШапкиОбъекта(КонвертацияСвойств, ПолученныеДанные, ДанныеИБ);
		
		МассивКлючевыхПолей = Новый Массив;
		МассивКлючевыхПолей.Добавить("Номенклатура");
		МассивКлючевыхПолей.Добавить("Характеристика");
		МассивКлючевыхПолей.Добавить("Упаковка");
		МассивКлючевыхПолей.Добавить("Серия");
		МассивКлючевыхПолей.Добавить("ФизическоеЛицо");
		
		RM_ОбменДаннымиXDTOСервер.ЗаполнитьТабличнуюЧастьОбъектаНачальнымиДанными(
				ПолученныеДанные.Товары,
				ДанныеИБ.Товары,
				МассивКлючевыхПолей,
				Неопределено,
				"Количество, КоличествоУпаковок, Цена, Сумма, СтатьяРасходовДоходов");
		
		ДанныеИБ.Товары.Загрузить(ПолученныеДанные.Товары.Выгрузить());
		ПолученныеДанные = Неопределено;
	КонецЕсли;
	
	ДанныеДляЗаписиВИБ = ?(ДанныеИБ = Неопределено, ПолученныеДанные, ДанныеИБ);
	Если Не ЗначениеЗаполнено(ДанныеДляЗаписиВИБ.Валюта) Тогда
		ДанныеДляЗаписиВИБ.Валюта = ВалютаРегламентированногоУчета(КомпонентыОбмена);
	КонецЕсли;
	
	Для Каждого Строка Из ДанныеДляЗаписиВИБ.Товары Цикл
		Если Не ЗначениеЗаполнено(Строка.ИдентификаторСтроки) Тогда
			Строка.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
