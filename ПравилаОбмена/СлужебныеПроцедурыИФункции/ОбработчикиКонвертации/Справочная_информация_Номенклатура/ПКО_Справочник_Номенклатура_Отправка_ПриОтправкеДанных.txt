Процедура ПКО_Справочник_Номенклатура_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда	
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеИБ.НаименованиеПолное) Тогда
		ДанныеXDTO.КлючевыеСвойства.Вставить("НаименованиеПолное", ДанныеИБ.Наименование);
	КонецЕсли;
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Истина);
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.8") Тогда
	    
	    РасширениеФайла = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.ФайлКартинки, "Расширение");
		ФайлыКартинок = РасширенияИзображений();
	
		Если ФайлыКартинок.Найти(РасширениеФайла) <> Неопределено Тогда
			ДанныеXDTO.Вставить("ОсновнаяКартинка", ЗначениеВИнструкциюПКО(КомпонентыОбмена, ДанныеИБ.ФайлКартинки));
		КонецЕсли;
		
		ДанныеXDTO.Вставить("ВидПродукцииИС", ДанныеИБ.ОсобенностьУчета);
		
		ДанныеXDTO.Вставить("Производитель", ДанныеИБ.Производитель);
		ДанныеXDTO.Вставить("Марка", ДанныеИБ.Марка);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеИБ.ЕдиницаИзмерения) Тогда
		
		ЕдиницаПоУмолчанию = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("796",,,Справочники.НаборыУпаковок.БазовыеЕдиницыИзмерения);	
		Если ЕдиницаПоУмолчанию = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка() Тогда
			ЕдиницаПоУмолчанию = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию("шт", Истина,,Справочники.НаборыУпаковок.БазовыеЕдиницыИзмерения);
		КонецЕсли;
		
		ДанныеXDTO.Вставить("ЕдиницаИзмерения", ЕдиницаПоУмолчанию);
	
	КонецЕсли;
	
	Если СвойствоФорматаОбмена(КомпонентыОбмена, "Справочник.ГруппыАналитическогоУчетаНоменклатуры")
		И ЗначениеЗаполнено(ДанныеИБ.ГруппаАналитическогоУчета) Тогда
		ДанныеXDTO.Вставить("ГруппаАналитическогоУчета", ЗначениеВИнструкциюПКО(КомпонентыОбмена, ДанныеИБ.ГруппаАналитическогоУчета));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеИБ.ВидАлкогольнойПродукции) Тогда
		СтруктураВидАП = Новый Структура("Код, Наименование, ВидЛицензии");
		ЗаполнитьЗначенияСвойств(СтруктураВидАП, ДанныеИБ.ВидАлкогольнойПродукции);
		Если ЗначениеЗаполнено(ДанныеИБ.ВидАлкогольнойПродукции.ВидЛицензии) Тогда
			ВидЛицензии = "";
			Если ДанныеИБ.ВидАлкогольнойПродукции.ВидЛицензии = Перечисления.ВидыЛицензийАлкогольнойПродукции.Пиво Тогда
				ВидЛицензии = "Пиво";
			ИначеЕсли ДанныеИБ.ВидАлкогольнойПродукции.ВидЛицензии = Перечисления.ВидыЛицензийАлкогольнойПродукции.АлкогольнаяПродукция Тогда
				ВидЛицензии = "АлкогольнаяПродукция";
			ИначеЕсли ДанныеИБ.ВидАлкогольнойПродукции.ВидЛицензии = Перечисления.ВидыЛицензийАлкогольнойПродукции.СпиртосодержащаяПищеваяПродукция Тогда
				ВидЛицензии = "СпиртосодержащаяПищеваяПродукция";
			ИначеЕсли ДанныеИБ.ВидАлкогольнойПродукции.ВидЛицензии = Перечисления.ВидыЛицензийАлкогольнойПродукции.СпиртосодержащаяНеПищеваяПродукция Тогда
				ВидЛицензии = "СпиртосодержащаяНеПищеваяПродукция";
			КонецЕсли;
			СтруктураВидАП.Вставить("ВидЛицензии", ВидЛицензии);
		КонецЕсли;
		ДанныеXDTO.Вставить("ВидАлкогольнойПродукции", СтруктураВидАП);
	Иначе
		ДанныеXDTO.Вставить("ВидАлкогольнойПродукции", Неопределено);
	КонецЕсли;
	
	//Код ТНВЭД
	Если ЗначениеЗаполнено(ДанныеИБ.КодТНВЭД)
	И ОбщегоНазначения.СсылкаСуществует(ДанныеИБ.КодТНВЭД) Тогда
	
		ДанныеXDTO.Вставить("КодТНВЭД", ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеИБ.КодТНВЭД, "Код, Наименование"));
	КонецЕсли;
	
	//Код КодОКВЭД
	Если ЗначениеЗаполнено(ДанныеИБ.КодОКВЭД)
	И ОбщегоНазначения.СсылкаСуществует(ДанныеИБ.КодОКВЭД) Тогда
	
		ДанныеXDTO.Вставить("КодОКВЭД", ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеИБ.КодОКВЭД, "Код, Наименование"));
	КонецЕсли;
	
	//Код КодОКП
	Если ЗначениеЗаполнено(ДанныеИБ.КодОКП)
	И ОбщегоНазначения.СсылкаСуществует(ДанныеИБ.КодОКП) Тогда
	
		ДанныеXDTO.Вставить("КодОКП", ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеИБ.КодОКП, "Код, Наименование"));
	КонецЕсли;
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.6") Тогда
		ДанныеXDTO.Вставить("ЦеноваяГруппа",   ДанныеИБ.ЦеноваяГруппа);
		ДанныеXDTO.Вставить("ВидНоменклатуры", ДанныеИБ.ВидНоменклатуры);
		ДанныеXDTO.Вставить("Крепость",        ДанныеИБ.Крепость);
		
		Если ЗначениеЗаполнено(ДанныеИБ.ВидАлкогольнойПродукции) Тогда
			ДанныеXDTO.Вставить("Маркируемый", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				ДанныеИБ.ВидАлкогольнойПродукции, "Маркируемый"));
		КонецЕсли;	
	КонецЕсли;
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.7") Тогда
		//ДанныеXDTO.Вставить("Весовой", ДанныеИБ.ВесИспользовать);
		ПризнакПредметаРасчета = РозничныеПродажиКлиентСервер.ПризнакПредметаРасчетаФискальнойОперации(
			ДанныеИБ.ТипНоменклатуры,
			ДанныеИБ.ПодакцизныйТовар);
		ДанныеXDTO.Вставить("ПризнакПредметаРасчета", ОбщегоНазначения.ИмяЗначенияПеречисления(ПризнакПредметаРасчета));		
	КонецЕсли;
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.5") Тогда   
		ДанныеXDTO.Вставить("КодВидаНоменклатурнойКлассификации", ДанныеИБ.КодВидаНоменклатурнойКлассификации);
	КонецЕсли;     
	
	ВыгрузитьПереводыРеквизитов(ДанныеИБ.Ссылка, ДанныеXDTO);        
	
	
	ДанныеXDTO.Вставить("RM_ЗапретПродажи ", СтрНайти(ДанныеИБ.Наименование, "(ЗАПРЕТ)") > 0);  
	ДанныеXDTO.Вставить("RM_Распродажа", ВРЕГ(Лев(ДанныеИБ.Наименование, 3)) = "(S)");      
	
	
	СтруктураДополнительныхРеквизитов = Новый Структура;
	СтруктураДополнительныхРеквизитов.Вставить("УдалитьТабачнаяПродукция", ДанныеИБ.УдалитьТабачнаяПродукция);
	СтруктураДополнительныхРеквизитов.Вставить("УдалитьСырьевойТовар", ДанныеИБ.УдалитьСырьевойТовар);
	СтруктураДополнительныхРеквизитов.Вставить("УдалитьОбувнаяПродукция", ДанныеИБ.УдалитьОбувнаяПродукция);
	СтруктураДополнительныхРеквизитов.Вставить("ПродукцияМаркируемаяДляГИСМ", ДанныеИБ.ПродукцияМаркируемаяДляГИСМ);
	СтруктураДополнительныхРеквизитов.Вставить("ПоставляетсяВМногооборотнойТаре", ДанныеИБ.ПоставляетсяВМногооборотнойТаре);
	СтруктураДополнительныхРеквизитов.Вставить("ПодконтрольнаяПродукцияВЕТИС", ДанныеИБ.ПодконтрольнаяПродукцияВЕТИС);
	СтруктураДополнительныхРеквизитов.Вставить("ПлощадьМожноУказыватьВДокументах", ДанныеИБ.ПлощадьМожноУказыватьВДокументах);
	СтруктураДополнительныхРеквизитов.Вставить("ПлощадьИспользовать", ДанныеИБ.ПлощадьИспользовать);
	СтруктураДополнительныхРеквизитов.Вставить("ОбъемМожноУказыватьВДокументах", ДанныеИБ.ОбъемМожноУказыватьВДокументах);
	СтруктураДополнительныхРеквизитов.Вставить("ОбъемИспользовать", ДанныеИБ.ОбъемИспользовать);
	СтруктураДополнительныхРеквизитов.Вставить("ОбособленнаяЗакупкаПродажа", ДанныеИБ.ОбособленнаяЗакупкаПродажа);
	СтруктураДополнительныхРеквизитов.Вставить("ОблагаетсяНДСУПокупателя", ДанныеИБ.ОблагаетсяНДСУПокупателя);
	СтруктураДополнительныхРеквизитов.Вставить("ОблагаетсяНДПИПоПроцентнойСтавке", ДанныеИБ.ОблагаетсяНДПИПоПроцентнойСтавке);
	СтруктураДополнительныхРеквизитов.Вставить("НаименованиеПолное", ДанныеИБ.НаименованиеПолное);
	СтруктураДополнительныхРеквизитов.Вставить("КоэффициентЕдиницыДляОтчетов", ДанныеИБ.КоэффициентЕдиницыДляОтчетов);
	СтруктураДополнительныхРеквизитов.Вставить("КодДляПоиска", ДанныеИБ.КодДляПоиска);
	СтруктураДополнительныхРеквизитов.Вставить("КиЗГИСМ", ДанныеИБ.КиЗГИСМ);
	СтруктураДополнительныхРеквизитов.Вставить("ИспользоватьУпаковки", ДанныеИБ.ИспользоватьУпаковки);
	СтруктураДополнительныхРеквизитов.Вставить("ИспользоватьИндивидуальныйШаблонЭтикетки", ДанныеИБ.ИспользоватьИндивидуальныйШаблонЭтикетки);
	СтруктураДополнительныхРеквизитов.Вставить("ИспользоватьИндивидуальныйШаблонЦенника", ДанныеИБ.ИспользоватьИндивидуальныйШаблонЦенника);
	СтруктураДополнительныхРеквизитов.Вставить("ИмпортнаяАлкогольнаяПродукция", ДанныеИБ.ИмпортнаяАлкогольнаяПродукция);
	СтруктураДополнительныхРеквизитов.Вставить("ЕстьТоварыДругогоКачества", ДанныеИБ.ЕстьТоварыДругогоКачества);
	СтруктураДополнительныхРеквизитов.Вставить("ДлинаМожноУказыватьВДокументах", ДанныеИБ.ДлинаМожноУказыватьВДокументах);
	СтруктураДополнительныхРеквизитов.Вставить("ДлинаИспользовать", ДанныеИБ.ДлинаИспользовать);
	СтруктураДополнительныхРеквизитов.Вставить("ВесЧислитель", ДанныеИБ.ВесЧислитель);
	СтруктураДополнительныхРеквизитов.Вставить("ВестиУчетСертификатовНоменклатуры", ДанныеИБ.ВестиУчетСертификатовНоменклатуры);
	СтруктураДополнительныхРеквизитов.Вставить("ВестиУчетПоГТД", ДанныеИБ.ВестиУчетПоГТД);
	СтруктураДополнительныхРеквизитов.Вставить("ВесМожноУказыватьВДокументах", ДанныеИБ.ВесМожноУказыватьВДокументах);
	СтруктураДополнительныхРеквизитов.Вставить("ВесИспользовать", ДанныеИБ.ВесИспользовать);
	СтруктураДополнительныхРеквизитов.Вставить("ВесЗнаменатель", ДанныеИБ.ВесЗнаменатель);
	СтруктураДополнительныхРеквизитов.Вставить("Артикул", ДанныеИБ.Артикул);
	СтруктураДополнительныхРеквизитов.Вставить("АлкогольнаяПродукцияВоВскрытойТаре", ДанныеИБ.АлкогольнаяПродукцияВоВскрытойТаре);
	СтруктураДополнительныхРеквизитов.Вставить("АлкогольнаяПродукция", ДанныеИБ.АлкогольнаяПродукция);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ШиринаИзделия", ДанныеИБ.RM_ШиринаИзделия);
	СтруктураДополнительныхРеквизитов.Вставить("RM_СтартПродаж", ДанныеИБ.RM_СтартПродаж);
	СтруктураДополнительныхРеквизитов.Вставить("RM_СрокГодностиДоДаты", ДанныеИБ.RM_СрокГодностиДоДаты);
	СтруктураДополнительныхРеквизитов.Вставить("RM_Подзаголовок", ДанныеИБ.RM_Подзаголовок);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ПереходныйАртикул", ДанныеИБ.RM_ПереходныйАртикул);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ОтгружатьУпаковками", ДанныеИБ.RM_ОтгружатьУпаковками);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ОсобыеУсловияСборкиИКонтроля", ДанныеИБ.RM_ОсобыеУсловияСборкиИКонтроля);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ОписаниеДляСайта", ДанныеИБ.RM_ОписаниеДляСайта);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ОкончаниеПродаж", ДанныеИБ.RM_ОкончаниеПродаж);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ОбъемИзделия", ДанныеИБ.RM_ОбъемИзделия);
	СтруктураДополнительныхРеквизитов.Вставить("RM_Маркет", ДанныеИБ.RM_Маркет);
	СтруктураДополнительныхРеквизитов.Вставить("RM_КодТранслит", ДанныеИБ.RM_КодТранслит);
	СтруктураДополнительныхРеквизитов.Вставить("RM_Импортер", ДанныеИБ.RM_Импортер);
	СтруктураДополнительныхРеквизитов.Вставить("RM_Изготовитель", ДанныеИБ.RM_Изготовитель);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ДополнительноеОписаниеНоменклатурыВФорматеHTML", ДанныеИБ.RM_ДополнительноеОписаниеНоменклатурыВФорматеHTML);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ВысотаИзделия", ДанныеИБ.RM_ВысотаИзделия);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ВыгружатьНаСайтОРТ", ДанныеИБ.RM_ВыгружатьНаСайтОРТ);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ВыгружатьНаСайтДискаунтер", ДанныеИБ.RM_ВыгружатьНаСайтДискаунтер);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ВыгружатьНаСайт", ДанныеИБ.RM_ВыгружатьНаСайт);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ВестиУчетПоСериям", ДанныеИБ.RM_ВестиУчетПоСериям);
	СтруктураДополнительныхРеквизитов.Вставить("RM_ВестиПартионныйУчетПоСериям", ДанныеИБ.RM_ВестиПартионныйУчетПоСериям);
	СтруктураДополнительныхРеквизитов.Вставить("RM_MOQ", ДанныеИБ.RM_MOQ);
	СтруктураДополнительныхРеквизитов.Вставить("RM_HSCodes", ДанныеИБ.RM_HSCodes);     
	      
	
	ЗаполнитьЗначенияСвойств(СтруктураДополнительныхРеквизитов, ДанныеИБ);             
	
	СтруктураДополнительныхРеквизитов.Вставить("RM_ЗапретПродажи ", СтрНайти(ДанныеИБ.Наименование, "(ЗАПРЕТ)") > 0);    
	ВыгрузитьДополнительныеРеквизитыСвойствоСтрокой(СтруктураДополнительныхРеквизитов, ДанныеXDTO);
КонецПроцедуры
