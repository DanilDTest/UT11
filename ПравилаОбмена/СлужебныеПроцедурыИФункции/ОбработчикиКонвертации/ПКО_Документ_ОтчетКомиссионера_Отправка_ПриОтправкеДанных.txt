Процедура ПКО_Документ_ОтчетКомиссионера_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	ВыгрузитьПодразделение(ДанныеИБ, ДанныеXDTO);
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	// Дополнительные свойства для договора
	Если ЗначениеЗаполнено(ДанныеИБ.Договор) Тогда
		ДанныеXDTO.Вставить("Договор", ДанныеИБ.Договор);
	Иначе
		
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.Контрагент               = ДанныеИБ.Контрагент;
		ПараметрыПоУмолчанию.Организация              = ДанныеИБ.Организация;
		ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = ДанныеИБ.Валюта;
		ПараметрыПоУмолчанию.ВидДоговора              = "СКомиссионером";
		ПараметрыПоУмолчанию.Дата                     = ДанныеИБ.Дата;
		ПараметрыПоУмолчанию.Номер                    = ДанныеИБ.Номер;
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = Ложь;
		
		Заказ = Новый Структура();
		Заказ.Вставить("Заказ",      Неопределено);
		Заказ.Вставить("Соглашение", ДанныеИБ.Соглашение);
		Заказ.Вставить("Сделка",     Неопределено);
		
		Договор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена, Заказ, ДанныеИБ);
		
		ДанныеXDTO.Вставить("Договор", Договор);
		
	КонецЕсли;
	
	ВыгрузитьКурсИКратностьВзаиморасчетов(ДанныеXDTO, ДанныеИБ.Валюта, ДанныеИБ.Дата);
	ДанныеXDTO.Вставить("СуммаВключаетНДС", Истина);
	
	// Статья затрат на вознаграждение
	// Параметры №2,3 и 4 необходимы для вычисления счета затрат в УП/КА.
	Если ЗначениеЗаполнено(ДанныеИБ.СтатьяРасходов) Тогда
		СчетЗатрат = СчетУчетаПоСтатье(ДанныеИБ.СтатьяРасходов, ДанныеИБ.Организация, ДанныеИБ.Подразделение);
		ДанныеXDTO.Вставить("СтатьяЗатрат", ДанныеИБ.СтатьяРасходов);
		ДанныеXDTO.Вставить("СчетЗатрат",   СчетЗатрат);
	КонецЕсли;
	
	// Табличные части
	Запрос = Новый Запрос("ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтрокиДокумента,
		|	Товары.Ссылка,
		|	Товары.Ссылка.Организация КАК Организация,
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Товары.Количество,
		|	Товары.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА Товары.СуммаСНДС / Товары.Количество < 0.01
		|			ТОГДА 0.01
		|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаСНДС / Товары.Количество КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК ЦенаПередачи,
		|	Товары.СуммаСНДС КАК СуммаПередачи,
		|	ВЫБОР
		|		КОГДА Товары.СуммаПродажи / Товары.Количество < 0.01
		|			ТОГДА 0.01
		|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаПродажи / Товары.Количество КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК Цена,
		|	Товары.СуммаПродажи КАК Сумма,
		|	Товары.СуммаПродажиНДС КАК СуммаНДС,
		|	Товары.СуммаВознаграждения КАК СуммаВознаграждения,
		|	Товары.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
		|	ВЫБОР
		|		КОГДА Товары.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА Товары.Ссылка.Контрагент
		|		ИНАЧЕ Товары.Покупатель
		|	КОНЕЦ КАК Покупатель,
		|	Товары.Покупатель КАК Покупатель_Исходный,
		|	ВЫБОР
		|		КОГДА Товары.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА НАЧАЛОПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(Товары.ДатаСчетаФактурыКомиссионера, ДЕНЬ)
		|	КОНЕЦ КАК ДатаСФ,
		|	НАЧАЛОПЕРИОДА(Товары.ДатаСчетаФактурыКомиссионера, ДЕНЬ) КАК ДатаСФ_Исходная,
		|	Товары.НомерСчетаФактурыКомиссионера КАК НомерСФ
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ОтчетКомиссионера.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|	И НЕ Товары.Количество = 0
		|	И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|	И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|СГРУППИРОВАТЬ ПО
		|	Товары.НомерСтроки,
		|	Товары.Ссылка,
		|	Товары.Ссылка.Организация,
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Номенклатура.ЕдиницаИзмерения,
		|	Товары.Количество,
		|	Товары.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА Товары.СуммаСНДС / Товары.Количество < 0.01
		|			ТОГДА 0.01
		|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаСНДС / Товары.Количество КАК ЧИСЛО(15, 2))
		|	КОНЕЦ,
		|	Товары.СуммаСНДС,
		|	ВЫБОР
		|		КОГДА Товары.СуммаПродажи / Товары.Количество < 0.01
		|			ТОГДА 0.01
		|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаПродажи / Товары.Количество КАК ЧИСЛО(15, 2))
		|	КОНЕЦ,
		|	Товары.СуммаПродажи,
		|	Товары.СуммаПродажиНДС,
		|	Товары.СуммаВознаграждения,
		|	Товары.СуммаНДСВознаграждения,
		|	ВЫБОР
		|		КОГДА Товары.Количество < 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Товары.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА НАЧАЛОПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(Товары.ДатаСчетаФактурыКомиссионера, ДЕНЬ)
		|	КОНЕЦ,
		|	НАЧАЛОПЕРИОДА(Товары.ДатаСчетаФактурыКомиссионера, ДЕНЬ),
		|	ВЫБОР
		|		КОГДА Товары.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА Товары.Ссылка.Контрагент
		|		ИНАЧЕ Товары.Покупатель
		|	КОНЕЦ,
		|	Товары.Покупатель,
		|	Товары.НомерСчетаФактурыКомиссионера
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Товары.Ссылка,
		|	Организация,
		|	Покупатель,
		|	ДатаСФ,
		|	НомерСФ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтрокиДокумента,
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.ЕдиницаИзмерения,
		|	Товары.Характеристика,
		|	Товары.Количество,
		|	Товары.СтавкаНДС,
		|	Товары.ЦенаПередачи,
		|	Товары.СуммаПередачи,
		|	Товары.Цена,
		|	Товары.Сумма,
		|	Товары.СуммаНДС,
		|	Товары.СуммаВознаграждения,
		|	Товары.Покупатель,
		|	Товары.ДатаСФ,
		|	Товары.Покупатель_Исходный,
		|	Товары.ДатаСФ_Исходная,
		|	Товары.НомерСФ,
		|	ЛОЖЬ КАК ВидыЗапасовЗаполнены,
		|	1 КАК Коэффициент,
		|	1 КАК КлючСтроки,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(30)) КАК НомерГТД,
		|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаПроисхождения,
		|	NULL КАК ТипЗапасов,
		|	Товары.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
		|ИЗ
		|	Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ВидыЗапасов.Количество КАК Количество,
		|	ВидыЗапасов.НомерГТД.Код КАК НомерГТД,
		|	ВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВЫБОР
		|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|			ТОГДА ВЫРАЗИТЬ(""КомиссионныеТовары"" КАК Строка(18))
		|		ИНАЧЕ ВЫРАЗИТЬ(""СобственныеТовары"" КАК Строка(18))
		|	КОНЕЦ КАК ТипЗапасов,
		|	ВЫБОР
		|		КОГДА ВидыЗапасов.Количество < 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Сторно,
		|	ВидыЗапасов.ДатаСчетаФактурыКомиссионера КАК ДатаСФ,
		|	ВидыЗапасов.НомерСчетаФактурыКомиссионера КАК НомерСФ,
		|	ВидыЗапасов.Покупатель
		|ИЗ
		|	Документ.ОтчетКомиссионера.ВидыЗапасов КАК ВидыЗапасов
		|ГДЕ
		|	ВидыЗапасов.Ссылка = &Ссылка
		|	И ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|	И ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК КлючСтроки,
		|	Товары.Покупатель,
		|	Товары.ДатаСФ,
		|	ВЫБОР
		|		КОГДА Товары.НомерСФ = """"
		|			ТОГДА ЕСТЬNULL(СчетФактураВыданный.НомерСчетаФактуры, """")
		|		ИНАЧЕ Товары.НомерСФ
		|	КОНЕЦ КАК НомерСФ,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА СчетФактураВыданный.Ссылка ЕСТЬ NULL 
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ) КАК ВыставленСФ,
		|	МАКСИМУМ(ЕСТЬNULL(СчетФактураВыданный.Ссылка, ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка))) КАК СчетФактура,
		|	МИНИМУМ(Товары.НомерСтрокиДокумента) КАК ЗначениеУпорядочивания
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураКомиссионеру.Покупатели КАК СчетФактураВыданный
		|		ПО Товары.Ссылка = СчетФактураВыданный.Ссылка.ДокументОснование
		|			И Товары.Организация = СчетФактураВыданный.Ссылка.Организация
		|			И (Товары.ДатаСФ = НАЧАЛОПЕРИОДА(СчетФактураВыданный.Ссылка.Дата, ДЕНЬ)
		|				ИЛИ Товары.ДатаСФ = ДАТАВРЕМЯ(1, 1, 1))
		|			И (Товары.Покупатель = СчетФактураВыданный.Покупатель
		|				ИЛИ СчетФактураВыданный.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
		|			И (Товары.НомерСФ = СчетФактураВыданный.НомерСчетаФактуры
		|				ИЛИ СчетФактураВыданный.НомерСчетаФактуры = """")
		|			И (НЕ СчетФактураВыданный.Ссылка.ПометкаУдаления)
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Покупатель,
		|	ВЫБОР
		|		КОГДА СчетФактураВыданный.Ссылка.Дата ЕСТЬ NULL 
		|			ТОГДА Товары.ДатаСФ
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(СчетФактураВыданный.Ссылка.Дата, ДЕНЬ)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Товары.НомерСФ = """"
		|			ТОГДА ЕСТЬNULL(СчетФактураВыданный.НомерСчетаФактуры, """")
		|		ИНАЧЕ Товары.НомерСФ
		|	КОНЕЦ,
		|	Товары.ДатаСФ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗначениеУпорядочивания");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыПоиска      = "Номенклатура, Характеристика, ДатаСФ_Исходная, Покупатель_Исходный, НомерСФ";
	ЗаполняемыеРеквизиты = "НомерГТД, СтранаПроисхождения, ТипЗапасов";
	
	ТабТовары = РезультатыЗапроса[1].Выгрузить();
	
	СтруктураПоиска = Новый Структура(РеквизитыПоиска + ",ВидыЗапасовЗаполнены");
	ТабТовары.Индексы.Добавить(РеквизитыПоиска + ",ВидыЗапасовЗаполнены");
	
	ВидыЗапасов = РезультатыЗапроса[2].Выбрать();
	Пока ВидыЗапасов.Следующий() Цикл
	
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВидыЗапасов, "Номенклатура, Характеристика, НомерСФ");
		
		СтруктураПоиска.Покупатель_Исходный  = ВидыЗапасов.Покупатель;
		СтруктураПоиска.ДатаСФ_Исходная      = ВидыЗапасов.ДатаСФ;
		СтруктураПоиска.ВидыЗапасовЗаполнены = Ложь;
		
		НайденныеСтроки     = ТабТовары.НайтиСтроки(СтруктураПоиска);
		ОсталосьВидаЗапасов = ВидыЗапасов.Количество;
	
		Для Каждого СтрокаДокумента Из НайденныеСтроки Цикл
			
			Если ОсталосьВидаЗапасов = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если (СтрокаДокумента.Количество < 0 И ОсталосьВидаЗапасов < 0 И СтрокаДокумента.Количество >= ОсталосьВидаЗапасов)
				Или (СтрокаДокумента.Количество <= ОсталосьВидаЗапасов) Тогда
				
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, ВидыЗапасов, ЗаполняемыеРеквизиты);
				СтрокаДокумента.ВидыЗапасовЗаполнены = Истина;
				ОсталосьВидаЗапасов = ОсталосьВидаЗапасов - СтрокаДокумента.Количество;
				
			Иначе
			
				// Выделение новой строки с заполненным видом запасов.
				НоваяСтрока = ТабТовары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДокумента);
				
				ДоляВидаЗапасовВСтрокеДокумента = ОсталосьВидаЗапасов / СтрокаДокумента.Количество;
				
				НоваяСтрока.Количество             = ОсталосьВидаЗапасов;
				НоваяСтрока.СуммаПередачи          = Окр(СтрокаДокумента.СуммаПередачи * ДоляВидаЗапасовВСтрокеДокумента, 2);
				НоваяСтрока.Сумма                  = Окр(СтрокаДокумента.Сумма * ДоляВидаЗапасовВСтрокеДокумента, 2);
				НоваяСтрока.СуммаНДС               = Окр(СтрокаДокумента.СуммаНДС * ДоляВидаЗапасовВСтрокеДокумента, 2);
				НоваяСтрока.СуммаВознаграждения    = Окр(СтрокаДокумента.СуммаВознаграждения * ДоляВидаЗапасовВСтрокеДокумента, 2);
				НоваяСтрока.СуммаНДСВознаграждения = Окр(СтрокаДокумента.СуммаНДСВознаграждения * ДоляВидаЗапасовВСтрокеДокумента, 2);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВидыЗапасов, ЗаполняемыеРеквизиты);
				
				СтрокаДокумента.Количество             = СтрокаДокумента.Количество - НоваяСтрока.Количество;
				СтрокаДокумента.СуммаПередачи          = СтрокаДокумента.СуммаПередачи - НоваяСтрока.СуммаПередачи;
				СтрокаДокумента.Сумма                  = СтрокаДокумента.Сумма - НоваяСтрока.Сумма;
				СтрокаДокумента.СуммаНДС               = СтрокаДокумента.СуммаНДС - НоваяСтрока.СуммаНДС;
				СтрокаДокумента.СуммаВознаграждения    = СтрокаДокумента.СуммаВознаграждения - НоваяСтрока.СуммаВознаграждения;
				СтрокаДокумента.СуммаНДСВознаграждения = СтрокаДокумента.СуммаНДСВознаграждения - НоваяСтрока.СуммаНДСВознаграждения;
				ОсталосьВидаЗапасов = 0;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Таблица покупателей
	ТабПокупатели = РезультатыЗапроса[3].Выгрузить();
	СтруктураПоиска = Новый Структура("Покупатель, ДатаСФ, НомерСФ");
	
	Для Каждого Строка Из ТабПокупатели Цикл
		НайденныеСтроки = Новый Массив();
		Строка.КлючСтроки = ТабПокупатели.Индекс(Строка) + 1;
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
		НайденныеСтроки = ТабТовары.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрокаТоваров Из НайденныеСтроки Цикл
			СтрокаТоваров.КлючСтроки = Строка.КлючСтроки;
		КонецЦикла;
	КонецЦикла;
	
	ТабТовары.Сортировать("НомерСтрокиДокумента Возр");
	
	ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, ТабТовары, Истина, Ложь);
	
	ДанныеXDTO.Вставить("Товары",     ТабТовары);
	ДанныеXDTO.Вставить("Покупатели", ТабПокупатели);
КонецПроцедуры
