Процедура ПКО_Документ_СчетФактураВыданныйАванс_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	Если ТипЗнч(ДанныеИБ.Контрагент) = Тип("СправочникСсылка.Организации") Тогда
		ОрганизацияКонтрагента = ДанныеИБ.Контрагент;
		СсылкаНаКонтрагента = КонтрагентИзОрганизации(ОрганизацияКонтрагента, КомпонентыОбмена);
	ИначеЕсли ТипЗнч(ДанныеИБ.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		СсылкаНаКонтрагента = ДанныеИБ.Контрагент;
	Иначе
		СсылкаНаКонтрагента = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеИБ.КодВидаОперации) Тогда
		ДанныеXDTO.Вставить("КодВидаОперации", "02");
	КонецЕсли;
	
	Если ДанныеИБ.ВыставленВЭлектронномВиде Тогда
		ДанныеXDTO.Вставить("СпособВыставления", "ВЭлектронномВиде");
	Иначе
		ДанныеXDTO.Вставить("СпособВыставления", "НаБумажномНосителе");
	КонецЕсли; 
	
	ДанныеXDTO.Вставить("Контрагент",       СсылкаНаКонтрагента);
	ДанныеXDTO.Вставить("Выставлен",        ЗначениеЗаполнено(ДанныеИБ.ДатаВыставления));
	ДанныеXDTO.Вставить("Руководитель",     ДанныеИБ.Руководитель.ФизическоеЛицо);
	ДанныеXDTO.Вставить("ГлавныйБухгалтер", ДанныеИБ.ГлавныйБухгалтер.ФизическоеЛицо);
	ДанныеXDTO.Вставить("Валюта",           Константы.ВалютаРегламентированногоУчета.Получить());
	ДанныеXDTO.Вставить("ВидСчетаФактуры",  "НаАванс");
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.7") Тогда
		ДанныеXDTO.Вставить("ИННКонтрагента", ДанныеИБ.ИННКонтрагента);
		ДанныеXDTO.Вставить("КППКонтрагента", ДанныеИБ.КППКонтрагента);
	КонецЕсли;
	
	// Получение информации из документа-основания.
	ДокументОснование_ВалютаВзаиморасчетов     = Неопределено;
	ДокументОснование_ДоговорСсылка            = Неопределено;
	ДокументОснование_РасчетыВУсловныхЕдиницах = Ложь;
	ДокументОснование_ИмяПКО                   = "";
	
	Заказ = Новый Структура("Заказ, Соглашение, Сделка");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.ДокументОснование);
	
	ТипЗначенияДокументаОснования = ТипЗнч(ДанныеИБ.ДокументОснование);
	
	Если ТипЗначенияДокументаОснования = Тип("ДокументСсылка.ПриходныйКассовыйОрдер")
		Или ТипЗначенияДокументаОснования = Тип("ДокументСсылка.РасходныйКассовыйОрдер")
		Или ТипЗначенияДокументаОснования = Тип("ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств")
		Или ТипЗначенияДокументаОснования = Тип("ДокументСсылка.СписаниеБезналичныхДенежныхСредств")
		Или ТипЗначенияДокументаОснования = Тип("ДокументСсылка.ОперацияПоПлатежнойКарте") Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
			|	РасшифровкаПлатежа.Заказ,
			|	РасшифровкаПлатежа.Заказ.Соглашение КАК Соглашение,
			|	РасшифровкаПлатежа.Заказ.Сделка КАК Сделка,
			|	РасшифровкаПлатежа.ВалютаВзаиморасчетов
			|ПОМЕСТИТЬ ДанныеДоговора
			|ИЗ
			|	Документ." + ДанныеИБ.ДокументОснование.Метаданные().Имя + ".РасшифровкаПлатежа КАК РасшифровкаПлатежа
			|ГДЕ
			|	РасшифровкаПлатежа.Ссылка = &Ссылка
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДоговора.Заказ
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДоговора.ВалютаВзаиморасчетов
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДоговора.Соглашение
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДоговора.Сделка
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора";
		
		ДанныеДоговора = Запрос.ВыполнитьПакет();
		
		СверткаПоЗаказам = ДанныеДоговора[1].Выгрузить();
	
		Если СверткаПоЗаказам.Количество() = 1 Тогда
			
			ЗаказКлиента = СверткаПоЗаказам[0].Заказ;
			
			Если ЗначениеЗаполнено(ЗаказКлиента) И ОбщегоНазначения.СсылкаСуществует(ЗаказКлиента) Тогда
				Если ТипЗнч(ЗаказКлиента) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
					ДокументОснование_ДоговорСсылка = ЗаказКлиента;
				ИначеЕсли ТипЗнч(ЗаказКлиента) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
					Заказ.Заказ = ЗаказКлиента;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		СверткаПоВалютеВзаиморасчетов = ДанныеДоговора[2].Выгрузить();
		Если СверткаПоВалютеВзаиморасчетов.Количество() = 1 Тогда
			ДокументОснование_ВалютаВзаиморасчетов = СверткаПоВалютеВзаиморасчетов[0].ВалютаВзаиморасчетов;
		КонецЕсли;
		
		СверткаПоСоглашениям = ДанныеДоговора[3].Выгрузить();
		Если СверткаПоСоглашениям.Количество() = 1 Тогда
			Заказ.Соглашение = СверткаПоСоглашениям[0].Соглашение;
		КонецЕсли;
		
		СверткаПоСделкам = ДанныеДоговора[4].Выгрузить();
		Если СверткаПоСделкам.Количество() = 1 Тогда
			Заказ.Сделка = СверткаПоСделкам[0].Сделка;
		КонецЕсли;
		
		Если ТипЗначенияДокументаОснования = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
			ДокументОснование_ИмяПКО = "Документ_ПКОРасчетыСКонтрагентами_Отправка";
		ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.ОперацияПоПлатежнойКарте") Тогда
			ДокументОснование_ИмяПКО = "Документ_ОперацияПоПлатежнойКарте_Отправка";
		ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств") Тогда
			ДокументОснование_ИмяПКО = "Документ_ПБДСРасчетыСКонтрагентами_Отправка";
		ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
			ДокументОснование_ИмяПКО = "Документ_РКОРасчетыСКонтрагентами_Отправка";	
		ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.СписаниеБезналичныхДенежныхСредств") Тогда
			ДокументОснование_ИмяПКО = "Документ_СБДСРасчетыСКонтрагентами_Отправка";
		КонецЕсли;
		
	ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
			|	РасшифровкаПлатежа.Ссылка.Соглашение КАК Соглашение,
			|	РасшифровкаПлатежа.Ссылка.Соглашение.Валюта КАК ВалютаСоглашения,
			|	РасшифровкаПлатежа.Ссылка.Сделка КАК Сделка,
			|	РасшифровкаПлатежа.Заказ,
			|	РасшифровкаПлатежа.ВалютаВзаиморасчетов
			|ПОМЕСТИТЬ ДанныеДоговора
			|ИЗ
			|	Документ.ВозвратТоваровОтКлиента.РасшифровкаПлатежа КАК РасшифровкаПлатежа
			|ГДЕ
			|	РасшифровкаПлатежа.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ДанныеДоговора.Соглашение,
			|	ДанныеДоговора.Сделка,
			|	ДанныеДоговора.ВалютаВзаиморасчетов,
			|	ДанныеДоговора.ВалютаСоглашения
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДоговора.Заказ
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора";
		
		ДанныеДоговора = Запрос.ВыполнитьПакет();
		
		ОсновныеРеквизиты = ДанныеДоговора[1].Выгрузить();
	
		Если ОсновныеРеквизиты.Количество() > 0 Тогда
			
			Заказ.Соглашение = ОсновныеРеквизиты[0].Соглашение;
			
			Если ЗначениеЗаполнено(ОсновныеРеквизиты[0].ВалютаСоглашения) Тогда
				ДокументОснование_ВалютаВзаиморасчетов = ОсновныеРеквизиты[0].ВалютаСоглашения;
			Иначе
				ДокументОснование_ВалютаВзаиморасчетов = ОсновныеРеквизиты[0].ВалютаВзаиморасчетов;
			КонецЕсли;
		КонецЕсли;
	
		СверткаПоЗаказам = ДанныеДоговора[2].Выгрузить();
		Если СверткаПоЗаказам.Количество() = 1 Тогда
			
			ЗаказКлиента = СверткаПоЗаказам[0].Заказ;
			Если ТипЗнч(ЗаказКлиента) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
				ДокументОснование_ДоговорСсылка = ЗаказКлиента;
			ИначеЕсли ТипЗнч(ЗаказКлиента) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
				Заказ.Заказ = ЗаказКлиента;
			КонецЕсли;
			
		КонецЕсли;
		
		ДокументОснование_ИмяПКО = "Документ_ВозвратТоваровОтКлиента_Отправка";
			
	ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.ВзаимозачетЗадолженности") Тогда
		
		ИмяТЧ                    = "ДебиторскаяЗадолженность";
		ТипРасчетов              = "РасчетыСКлиентом";
		ДокументОснование_ИмяПКО = "Документ_ВЗ_НашаОрганизация";
		
		Если ДанныеИБ.Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.ДокументОснование, "КонтрагентКредитор") Тогда
			ИмяТЧ = "КредиторскаяЗадолженность";
			ТипРасчетов = "РасчетыСПоставщиком";
			
			ДокументОснование_ИмяПКО = "Документ_ВЗ_ОрганизацияКредитор";
		КонецЕсли;
		
		Запрос.Текст = "ВЫБРАТЬ
			|	ТабДок.Заказ,
			|	ТабДок.Заказ.Соглашение КАК Соглашение,
			|	ТабДок.Заказ.Сделка КАК Сделка,
			|	ТабДок.ВалютаВзаиморасчетов
			|ПОМЕСТИТЬ ДанныеДоговора
			|ИЗ
			|	Документ.ВзаимозачетЗадолженности." + ИмяТЧ + " КАК ТабДок
			|ГДЕ
			|	ТабДок.Ссылка = &Ссылка
			|	И ТабДок.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами." + ТипРасчетов + ")
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДоговора.Заказ
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДоговора.ВалютаВзаиморасчетов
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДоговора.Соглашение
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДоговора.Сделка
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора";
		
		ДанныеДоговора = Запрос.ВыполнитьПакет();
		
		СверткаПоЗаказам = ДанныеДоговора[1].Выгрузить();
		Если СверткаПоЗаказам.Количество() = 1 Тогда
			
			ЗаказКлиента = СверткаПоЗаказам[0].Заказ;
			Если ТипЗнч(ЗаказКлиента) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
				ДокументОснование_ДоговорСсылка = ЗаказКлиента;
			ИначеЕсли ТипЗнч(ЗаказКлиента) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
				Заказ.Заказ = ЗаказКлиента;
			КонецЕсли;
			
		КонецЕсли;
		
		СверткаПоВалютеВзаиморасчетов = ДанныеДоговора[2].Выгрузить();
		Если СверткаПоВалютеВзаиморасчетов.Количество() = 1 Тогда
			ДокументОснование_ВалютаВзаиморасчетов = СверткаПоВалютеВзаиморасчетов[0].ВалютаВзаиморасчетов;
		КонецЕсли;
		
		СверткаПоСоглашениям = ДанныеДоговора[3].Выгрузить();
		Если СверткаПоСоглашениям.Количество() = 1 Тогда
			Заказ.Соглашение = СверткаПоСоглашениям[0].Соглашение;
		КонецЕсли;
		
		СверткаПоСделкам = ДанныеДоговора[4].Выгрузить();
		Если СверткаПоСделкам.Количество() = 1 Тогда
			Заказ.Сделка = СверткаПоСделкам[0].Сделка;
		КонецЕсли;
		
	ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.СписаниеЗадолженности") Тогда
		
		ДокументОснование_ИмяПКО = "Документ_СЗ_КорректировкаДолга";
		
		Запрос.Текст = "ВЫБРАТЬ
			|	ТабДок.Заказ,
			|	ТабДок.Заказ.Соглашение КАК Соглашение,
			|	ТабДок.Заказ.Сделка КАК Сделка,
			|	ТабДок.ВалютаВзаиморасчетов
			|ПОМЕСТИТЬ ДанныеДоговора
			|ИЗ
			|	Документ.СписаниеЗадолженности.Задолженность КАК ТабДок
			|ГДЕ
			|	ТабДок.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДоговора.Заказ
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДоговора.ВалютаВзаиморасчетов
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДоговора.Соглашение
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДанныеДоговора.Сделка
			|ИЗ
			|	ДанныеДоговора КАК ДанныеДоговора";
		
		ДанныеДоговора = Запрос.ВыполнитьПакет();
		
		СверткаПоЗаказам = ДанныеДоговора[1].Выгрузить();
		Если СверткаПоЗаказам.Количество() = 1 Тогда
			
			ЗаказКлиента = СверткаПоЗаказам[0].Заказ;
			Если ТипЗнч(ЗаказКлиента) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
				ДокументОснование_ДоговорСсылка = ЗаказКлиента;
			ИначеЕсли ТипЗнч(ЗаказКлиента) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
				Заказ.Заказ = ЗаказКлиента;
			КонецЕсли;
			
		КонецЕсли;
		
		СверткаПоВалютеВзаиморасчетов = ДанныеДоговора[2].Выгрузить();
		Если СверткаПоВалютеВзаиморасчетов.Количество() = 1 Тогда
			ДокументОснование_ВалютаВзаиморасчетов = СверткаПоВалютеВзаиморасчетов[0].ВалютаВзаиморасчетов;
		КонецЕсли;
		
		СверткаПоСоглашениям = ДанныеДоговора[3].Выгрузить();
		Если СверткаПоСоглашениям.Количество() = 1 Тогда
			Заказ.Соглашение = СверткаПоСоглашениям[0].Соглашение;
		КонецЕсли;
		
		СверткаПоСделкам = ДанныеДоговора[4].Выгрузить();
		Если СверткаПоСделкам.Количество() = 1 Тогда
			Заказ.Сделка = СверткаПоСделкам[0].Сделка;
		КонецЕсли;
		
	ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
	
		Запрос.Текст = "ВЫБРАТЬ
			|	Док.Валюта
			|ИЗ
			|	Документ.ВозвратТоваровМеждуОрганизациями КАК Док
			|ГДЕ
			|	Док.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	РасшифровкаПлатежа.ВалютаВзаиморасчетов
			|ИЗ
			|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК РасшифровкаПлатежа
			|ГДЕ
			|	РасшифровкаПлатежа.Ссылка = &Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	РасшифровкаПлатежа.НомерСтроки";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();	
		ДанныеШапки              = РезультатЗапроса[0].Выгрузить()[0];
		ДанныеРасшифровкиПлатежа = РезультатЗапроса[1].Выгрузить();
		
		Если ДанныеРасшифровкиПлатежа.Количество() = 1 Тогда
			ДокументОснование_ВалютаВзаиморасчетов = ДанныеРасшифровкиПлатежа[0].ВалютаВзаиморасчетов;
			ДокументОснование_РасчетыВУсловныхЕдиницах = (ДанныеШапки.Валюта = Константы.ВалютаРегламентированногоУчета.Получить()
				И ДанныеШапки.Валюта <> ДанныеРасшифровкиПлатежа[0].ВалютаВзаиморасчетов);
		Иначе
			ДокументОснование_ВалютаВзаиморасчетов = ДанныеШапки.Валюта;
		КонецЕсли;
		
		ДокументОснование_ИмяПКО = "ВозвратМеждуОрганизациями_ОтПокупателя_Отправка";
		
	ИначеЕсли ТипЗначенияДокументаОснования = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		
		ДокументОснование_ИмяПКО = "Документ_КорректировкаРеализации_Отправка";
		ДанныеВалют = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеИБ.ДокументОснование, "Валюта, ВалютаВзаиморасчетов");
	
		ДокументОснование_ВалютаВзаиморасчетов = ДанныеВалют.ВалютаВзаиморасчетов;
	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОснование_ВалютаВзаиморасчетов) Тогда
		ДокументОснование_ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументОснование_ДоговорСсылка) Тогда
		ДанныеXDTO.Вставить("Договор", ДокументОснование_ДоговорСсылка);
	Иначе
		
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.Контрагент           = ДанныеXDTO.Контрагент;
		ПараметрыПоУмолчанию.Организация          = ДанныеИБ.Организация;
		ПараметрыПоУмолчанию.ВалютаВзаиморасчетов = ДокументОснование_ВалютаВзаиморасчетов;
		ПараметрыПоУмолчанию.ВидДоговора          = "СПокупателем";
		ПараметрыПоУмолчанию.Дата                 = ДанныеИБ.Дата;
		ПараметрыПоУмолчанию.Номер                = ДанныеИБ.Номер;
		
		Если Не ДокументОснование_РасчетыВУсловныхЕдиницах Тогда
			ДокументОснование_РасчетыВУсловныхЕдиницах = (ДанныеXDTO.Валюта = Константы.ВалютаРегламентированногоУчета.Получить()
				И ДанныеXDTO.Валюта <> ДокументОснование_ВалютаВзаиморасчетов);
		КонецЕсли;
		
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = ДокументОснование_РасчетыВУсловныхЕдиницах;
		
		Договор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена, Заказ, ДанныеИБ);
		ДанныеXDTO.Вставить("Договор", Договор);
		
	КонецЕсли;
	
	//ТабличныеЧасти
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	СчетФактураВыданныйАвансАвансы.Номенклатура КАК Номенклатура,
		|	&ТекстЗапросаХарактеристика,
		|	СчетФактураВыданныйАвансАвансы.Содержание КАК Содержание,
		|	СчетФактураВыданныйАвансАвансы.Сумма КАК Сумма,
		|	СчетФактураВыданныйАвансАвансы.СтавкаНДС КАК СтавкаНДС,
		|	СчетФактураВыданныйАвансАвансы.СуммаНДС КАК СуммаНДС
		|ИЗ
		|	Документ.СчетФактураВыданныйАванс.Авансы КАК СчетФактураВыданныйАвансАвансы
		|ГДЕ
		|	СчетФактураВыданныйАвансАвансы.Ссылка = &Ссылка
		|	И НЕ СчетФактураВыданныйАвансАвансы.Сумма = 0";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаХарактеристика",
		ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "СчетФактураВыданныйАвансАвансы"));
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Авансы = Запрос.Выполнить().Выгрузить();
	
	Если Авансы.Количество() > 0 Тогда
		ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, Авансы, Истина, Ложь);
		ДанныеXDTO.Вставить("Авансы", Авансы);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеИБ.ДокументОснование) Тогда
		ДокументыОснования = Новый ТаблицаЗначений();
		ДокументыОснования.Колонки.Добавить("ДокументОснование");
		СтрокаОснование = ДокументыОснования.Добавить();
		СтрокаОснование.ДокументОснование = Новый Структура("Значение, ИмяПКО",
			ДанныеИБ.ДокументОснование, ДокументОснование_ИмяПКО);
		ДанныеXDTO.Вставить("ДокументыОснования", ДокументыОснования);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеИБ.ДатаПлатежноРасчетногоДокумента)
		И ЗначениеЗаполнено(ДанныеИБ.НомерПлатежноРасчетногоДокумента) Тогда
		ПлатРасчДокументы = Новый ТаблицаЗначений;
		ПлатРасчДокументы.Колонки.Добавить("ДатаДокумента");
		ПлатРасчДокументы.Колонки.Добавить("НомерДокумента");
		СтрокаПлатРасчДокумент = ПлатРасчДокументы.Добавить();
		СтрокаПлатРасчДокумент.ДатаДокумента = ДанныеИБ.ДатаПлатежноРасчетногоДокумента;
		СтрокаПлатРасчДокумент.НомерДокумента = ДанныеИБ.НомерПлатежноРасчетногоДокумента;
		ДанныеXDTO.Вставить("ПлатежноРасчетныеДокументы", ПлатРасчДокументы);
	КонецЕсли;
КонецПроцедуры
