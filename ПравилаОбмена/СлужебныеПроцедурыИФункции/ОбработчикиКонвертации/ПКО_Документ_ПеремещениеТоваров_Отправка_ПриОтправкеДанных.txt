Процедура ПКО_Документ_ПеремещениеТоваров_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
			Возврат;
		КонецЕсли;
		
		ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);	
		ВыгрузитьНалогообложениеНДС(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Ложь);
			
			
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
		|	ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
		|	ПеремещениеТоваровТовары.Количество КАК Количество,
		|	ПеремещениеТоваровТовары.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА ПеремещениеТоваровТовары.Упаковка.Числитель > 1
		|			ТОГДА ПеремещениеТоваровТовары.Количество
		|		ИНАЧЕ ПеремещениеТоваровТовары.КоличествоУпаковок
		|	КОНЕЦ КАК КоличествоУпаковок,
		|	ВЫБОР
		|		КОГДА ПеремещениеТоваровТовары.Упаковка.Числитель > 1
		|			ТОГДА ПеремещениеТоваровТовары.Упаковка.Родитель
		|		ИНАЧЕ ПеремещениеТоваровТовары.Упаковка
		|	КОНЕЦ КАК ЕдиницаИзмерения,
		|	ПеремещениеТоваровТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ПеремещениеТоваровТовары.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерийОтправитель,
		|	ПеремещениеТоваровТовары.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерийПолучатель,
		|	ПеремещениеТоваровТовары.RM_ЦенаРеализации КАК ЦенаЗакупочная	
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
		|ГДЕ
		|	ПеремещениеТоваровТовары.Ссылка = &Ссылка";	
		
		Товары = Запрос.Выполнить().Выгрузить();
		ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, Товары, Истина, Ложь);
		//ЗаполнитьВидДеятельностиНДСВТЧ(КомпонентыОбмена, ДанныеИБ, Товары, "ПеремещениеПодДеятельность", "ПеремещениеПодДеятельность");	
		ДанныеXDTO.Вставить("Товары", Товары);
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ПеремещениеТоваровRM_ШтрихкодыУпаковок.ШтрихкодУпаковки КАК ШтрихкодУпаковки,
			|	ПеремещениеТоваровRM_ШтрихкодыУпаковок.НомерСтроки КАК НомерСтрокиДокумента,
			|	ПеремещениеТоваровRM_ШтрихкодыУпаковок.ШтрихкодУпаковки.ЗначениеШтрихкода КАК НомерАкцизнойМарки
			|ИЗ
			|	Документ.ПеремещениеТоваров.RM_ШтрихкодыУпаковок КАК ПеремещениеТоваровRM_ШтрихкодыУпаковок
			|ГДЕ
			|	ПеремещениеТоваровRM_ШтрихкодыУпаковок.Ссылка = &Ссылка";
		
		ДанныеXDTO.Вставить("АкцизныеМарки", Запрос.Выполнить().Выгрузить());
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОтборРазмещениеТоваров.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ РаспоряженияУпаковочных
			|ИЗ
			|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтборРазмещениеТоваров КАК ОтборРазмещениеТоваров
			|		ПО ПеремещениеТоваров.RM_РасходныйОрдер = ОтборРазмещениеТоваров.Распоряжение
			|ГДЕ
			|	ПеремещениеТоваров.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	УпаковочныйЛист.Ссылка КАК УпаковочныйЛист 
			|ИЗ
			|	РаспоряженияУпаковочных КАК РаспоряженияУпаковочных
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УпаковочныйЛист КАК УпаковочныйЛист
			|		ПО РаспоряженияУпаковочных.Ссылка = УпаковочныйЛист.RM_ДокументОснование";
		ДанныеXDTO.Вставить("RM_УпаковочныеЛисты", Запрос.Выполнить().Выгрузить());      
		
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПеремещениеТоваровRM_ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат
			|ИЗ
			|	Документ.ПеремещениеТоваров.RM_ПодарочныеСертификаты КАК ПеремещениеТоваровRM_ПодарочныеСертификаты
			|ГДЕ
			|	ПеремещениеТоваровRM_ПодарочныеСертификаты.Ссылка = &Ссылка";
		
			
		ДанныеXDTO.Вставить("ПодарочныеСертификаты", Запрос.Выполнить().Выгрузить()); 
	
	
		
		
		Если ЗначениеЗаполнено(ДанныеИБ.ОрганизацияПолучатель) Тогда
			ОрганизацияПолучатель = ДанныеИБ.ОрганизацияПолучатель;
		Иначе
			ОрганизацияПолучатель = ДанныеИБ.Организация;
		КонецЕсли;
		ДанныеXDTO.Вставить("ОрганизацияПолучатель", ОрганизацияПолучатель);
	
		Серии = ДанныеИБ.Серии.Выгрузить();
		//ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, Серии, Истина, Ложь);
		ДанныеXDTO.Вставить("Серии", Серии);
	
	    Если НЕ ДанныеИБ.RM_ТехническоеПеремещение
	    	И ЗначениеЗаполнено(ДанныеИБ.RM_ПервичноеПеремещение) Тогда
			ДанныеПервичного = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеИБ.RM_ПервичноеПеремещение,"Дата,Номер,Организация",Истина);
			
			СтруктураПервичного = Новый Структура;
			СтруктураПервичного.Вставить("Дата", ДанныеПервичного.Дата);
			СтруктураПервичного.Вставить("Номер", ДанныеПервичного.Номер);
			СтруктураПервичного.Вставить("Организация", ДанныеПервичного.Организация);
			СтруктураПервичного.Вставить("Ссылка", ДанныеИБ.RM_ПервичноеПеремещение);
			
			ДанныеXDTO.Вставить("RM_ПервичноеПеремещение", Новый Структура("Значение, ИмяПКО", СтруктураПервичного, "Документ_ПеремещениеТоваровИзСтруктуры_Отправка"));
		КонецЕсли;
		
			
		Если ЗначениеЗаполнено(ДанныеИБ.RM_ДокументОснование) Тогда
			
			ИмяПКО = "";
			ТипОснования = ТипЗнч(ДанныеИБ.RM_ДокументОснование);
			
			Если ТипОснования = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
				ИмяПКО = "Документ_ЗаказНаПеремещение_Отправка";
			ИначеЕсли ТипОснования = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
				ИмяПКО = "Документ_ЗаказПоставщику_Отправка";
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(ИмяПКО) Тогда
				ДанныеXDTO.Вставить("RM_ДокументОснование", Новый Структура("Значение, ИмяПКО", ДанныеИБ.RM_ДокументОснование, ИмяПКО));		
			КонецЕсли;
			
		КонецЕсли;    
	     
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫРАЗИТЬ(ЗаказНаПеремещение.RM_ДокументОснования КАК Документ.ЗаказКлиента) КАК ЗаказКлиента
			|ПОМЕСТИТЬ Заказы
			|ИЗ
			|	Документ.ЗаказНаПеремещение КАК ЗаказНаПеремещение
			|ГДЕ
			|	ЗаказНаПеремещение.Ссылка = &ЗаказНаПеремещение
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗаказНаПеремещение.ДокументОснование
			|ИЗ
			|	Документ.ЗаказНаПеремещение КАК ЗаказНаПеремещение
			|ГДЕ
			|	ЗаказНаПеремещение.Ссылка = &ЗаказНаПеремещение
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ЗаказКлиентаОсновная.Ссылка КАК ЗаказПокупателя
			|ИЗ
			|	Заказы КАК Заказы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиентаОсновная
			|		ПО Заказы.ЗаказКлиента = ЗаказКлиентаОсновная.Ссылка
			|			И (ЗаказКлиентаОсновная.RM_ВидИнтернетЗаказа = ЗНАЧЕНИЕ(Перечисление.RM_ВидыИнтернетЗаказов.ИнтернетМагазин))";
		
		Запрос.УстановитьПараметр("ЗаказНаПеремещение", ДанныеИБ.ЗаказНаПеремещение);	
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();	
		Пока Выборка.Следующий() Цикл
			ДанныеXDTO.Вставить("ЗаказПокупателя", Выборка.ЗаказПокупателя);
		КонецЦикла;     
		
		ПулКодов = ДанныеИБ.RM_ПулКодовМаркировки.Выгрузить();    
		ДанныеXDTO.Вставить("RM_ПулКодовМаркировки", ПулКодов);
	          
	    
	    
	    
		СтруктураДополнительныхРеквизитов = Новый Структура;
		СтруктураДополнительныхРеквизитов.Вставить("ДатаРаспоряжения", ДанныеИБ.ДатаРаспоряжения);
		СтруктураДополнительныхРеквизитов.Вставить("ОсобыеУсловияПеревозки", ДанныеИБ.ОсобыеУсловияПеревозки);
		СтруктураДополнительныхРеквизитов.Вставить("ОсобыеУсловияПеревозкиОписание", ДанныеИБ.ОсобыеУсловияПеревозкиОписание);
		СтруктураДополнительныхРеквизитов.Вставить("RM_КоличествоМест", ДанныеИБ.RM_КоличествоМест);
		СтруктураДополнительныхРеквизитов.Вставить("RM_ТехническоеПеремещение", ДанныеИБ.RM_ТехническоеПеремещение);
		СтруктураДополнительныхРеквизитов.Вставить("АдресДоставкиЗначение", ДанныеИБ.АдресДоставкиЗначение);
		СтруктураДополнительныхРеквизитов.Вставить("АдресДоставкиПеревозчикаЗначение", ДанныеИБ.АдресДоставкиПеревозчикаЗначение);
		СтруктураДополнительныхРеквизитов.Вставить("RM_ДатаЗавершенияПриемки", ДанныеИБ.RM_ДатаЗавершенияПриемки);
		СтруктураДополнительныхРеквизитов.Вставить("АдресДоставки", ДанныеИБ.АдресДоставки);
		СтруктураДополнительныхРеквизитов.Вставить("АдресДоставкиЗначенияПолей", ДанныеИБ.АдресДоставкиЗначенияПолей);
		СтруктураДополнительныхРеквизитов.Вставить("АдресДоставкиПеревозчика", ДанныеИБ.АдресДоставкиПеревозчика);
		СтруктураДополнительныхРеквизитов.Вставить("АдресДоставкиПеревозчикаЗначенияПолей", ДанныеИБ.АдресДоставкиПеревозчикаЗначенияПолей);
		СтруктураДополнительныхРеквизитов.Вставить("ДополнительнаяИнформацияПоДоставке", ДанныеИБ.ДополнительнаяИнформацияПоДоставке);
		СтруктураДополнительныхРеквизитов.Вставить("ВремяДоставкиС", ДанныеИБ.ВремяДоставкиС);
		СтруктураДополнительныхРеквизитов.Вставить("ВремяДоставкиПо", ДанныеИБ.ВремяДоставкиПо);  
		СтруктураДополнительныхРеквизитов.Вставить("RM_НомерУПД", ДанныеИБ.RM_НомерУПД);
	
		                
	  	ЗаполнитьЗначенияСвойств(СтруктураДополнительныхРеквизитов, ДанныеИБ);  
		ВыгрузитьДополнительныеРеквизитыСвойствоСтрокой(СтруктураДополнительныхРеквизитов, ДанныеXDTO);
КонецПроцедуры
