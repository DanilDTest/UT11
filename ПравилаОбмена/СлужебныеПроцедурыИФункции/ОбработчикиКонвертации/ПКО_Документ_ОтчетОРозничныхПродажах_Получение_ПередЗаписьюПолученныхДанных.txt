Процедура ПКО_Документ_ОтчетОРозничныхПродажах_Получение_ПередЗаписьюПолученныхДанных(ПолученныеДанные, ДанныеИБ, КонвертацияСвойств, КомпонентыОбмена)
	ЗагрузитьДополнительныеСведения(?(ДанныеИБ = Неопределено, ПолученныеДанные.ПолучитьСсылкуНового(), ДанныеИБ.Ссылка), 
								ПолученныеДанные.ДополнительныеСвойства, КомпонентыОбмена);
	
	// В случае наличия объекта в базе он и будет записан (а не ПолученныеДанные).
	// Шапка и табличная часть предварительно переносятся из ПолученныеДанные в ДанныеИБ:
	// шапка - в составе свойств из ПКС, табличная часть - полностью берется из полученных данных.
	Если ДанныеИБ <> Неопределено Тогда
		ДанныеИБСклад = ДанныеИБ.Склад;
	
		// Переносим те свойства, которые указаны в ПКС.
		ЗаполнитьСвойстваШапкиОбъекта(КонвертацияСвойств, ПолученныеДанные, ДанныеИБ);
	
		Если НЕ КомпонентыОбмена.ПараметрыКонвертации.ВыгружатьАналитикуПоСкладам Тогда
			// Восстанавливаем склад из первоначального документа.
			ДанныеИБ.Склад = ДанныеИБСклад;
		КонецЕсли;
	
		// Табличные части
		ДанныеИБ.Товары.Загрузить(ПолученныеДанные.Товары.Выгрузить());
		ДанныеИБ.ОплатаПлатежнымиКартами.Загрузить(ПолученныеДанные.ОплатаПлатежнымиКартами.Выгрузить());
		ДанныеИБ.ПодарочныеСертификаты.Загрузить(ПолученныеДанные.ПодарочныеСертификаты.Выгрузить());
		ДанныеИБ.НачислениеБонусныхБаллов.Загрузить(ПолученныеДанные.НачислениеБонусныхБаллов.Выгрузить());
		ДанныеИБ.ОплатаБонуснымиБаллами.Загрузить(ПолученныеДанные.ОплатаБонуснымиБаллами.Выгрузить());
	
		ПолученныеДанные = Неопределено;
		ДанныеДляЗаписиВИБ = ДанныеИБ;
	Иначе
		ДанныеДляЗаписиВИБ = ПолученныеДанные;
	КонецЕсли;
КонецПроцедуры
