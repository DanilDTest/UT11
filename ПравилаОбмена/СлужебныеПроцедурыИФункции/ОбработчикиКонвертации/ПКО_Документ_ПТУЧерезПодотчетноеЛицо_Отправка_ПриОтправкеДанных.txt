Процедура ПКО_Документ_ПТУЧерезПодотчетноеЛицо_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Номер = Лев(ДанныеИБ.Номер, 5) + "Т" + Сред(ДанныеИБ.Номер, 7);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", Номер);	
	
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	РасширенныеДанныеИБ = ПТиУ_РасширенныеДанныеИБ(КомпонентыОбмена, ДанныеИБ);
	
	ДанныеXDTO.Вставить("КурсДокумента",      РасширенныеДанныеИБ.КурсВзаиморасчетов);
	ДанныеXDTO.Вставить("КратностьДокумента", РасширенныеДанныеИБ.КратностьВзаиморасчетов);
	
	// Склад
	СкладДляВыгрузки = СкладДляВыгрузки(ДанныеИБ.Склад, КомпонентыОбмена.ПараметрыКонвертации);
	ДанныеXDTO.Вставить("Склад", СкладДляВыгрузки);
	
	ВыгрузитьПодразделениеИзРеквизитаДокумента(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, "Склад");
	
	ВыгрузитьНалогообложениеНДС(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Истина, Ложь, "НалогообложениеНДСПродавца");
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	// Товары
	Товары = РасширенныеДанныеИБ.Товары;
	Товары.Колонки.Добавить("Поставщик");
	Товары.Колонки.Добавить("ПредъявленСФ");
	Товары.Колонки.Добавить("ДатаСФ");
	Товары.Колонки.Добавить("НомерСФ");
	Товары.Колонки.Добавить("НомерВходящегоДокумента");
	Товары.Колонки.Добавить("ДатаВходящегоДокумента");
	
	Товары.ЗаполнитьЗначения(ДанныеИБ.Контрагент,              "Поставщик");
	Товары.ЗаполнитьЗначения(ДанныеИБ.НомерВходящегоДокумента, "НомерВходящегоДокумента");
	Товары.ЗаполнитьЗначения(ДанныеИБ.ДатаВходящегоДокумента,  "ДатаВходящегоДокумента");
	
	ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, Товары);
	
	// Услуги
	Услуги = РасширенныеДанныеИБ.Услуги;
	Услуги.Колонки.Добавить("Поставщик");
	Услуги.Колонки.Добавить("ПредъявленСФ");
	Услуги.Колонки.Добавить("ДатаСФ");
	Услуги.Колонки.Добавить("НомерСФ");
	Услуги.Колонки.Добавить("НомерВходящегоДокумента");
	Услуги.Колонки.Добавить("ДатаВходящегоДокумента");
	
	Услуги.ЗаполнитьЗначения(ДанныеИБ.Контрагент,              "Поставщик");
	Услуги.ЗаполнитьЗначения(ДанныеИБ.НомерВходящегоДокумента, "НомерВходящегоДокумента");
	Услуги.ЗаполнитьЗначения(ДанныеИБ.ДатаВходящегоДокумента,  "ДатаВходящегоДокумента");
	
	// Счет-фактура.
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
		|	Ссылка.Номер КАК НомерСФ,
		|	Ссылка.ДатаСоставления КАК ДатаСФ
		|ИЗ Документ.СчетФактураПолученный.ДокументыОснования
		|ГДЕ ДокументОснование = &Ссылка
		|	И Ссылка.Проведен");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Товары.ЗаполнитьЗначения(Истина,          "ПредъявленСФ");
		Товары.ЗаполнитьЗначения(Выборка.ДатаСФ,  "ДатаСФ");
		Товары.ЗаполнитьЗначения(Выборка.НомерСФ, "НомерСФ");
		
		Услуги.ЗаполнитьЗначения(Истина,          "ПредъявленСФ");
		Услуги.ЗаполнитьЗначения(Выборка.ДатаСФ,  "ДатаСФ");
		Услуги.ЗаполнитьЗначения(Выборка.НомерСФ, "НомерСФ");
		
	Иначе
		Товары.ЗаполнитьЗначения(Ложь, "ПредъявленСФ");
		Услуги.ЗаполнитьЗначения(Ложь, "ПредъявленСФ");
	КонецЕсли;
	
	ЗаполнитьВидДеятельностиНДСВТЧ(КомпонентыОбмена, ДанныеИБ, Товары, "ЗакупкаПодДеятельность", "ЗакупкаПодДеятельность");
	ЗаполнитьВидДеятельностиНДСВТЧ(КомпонентыОбмена, ДанныеИБ, Услуги, "ЗакупкаПодДеятельность", "ЗакупкаПодДеятельность");
	
	ДанныеXDTO.Вставить("Товары",        Товары);
	ДанныеXDTO.Вставить("ПрочиеРасходы", Услуги);
	
	#Область АкцизныеМарки
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.7") Тогда
		АкцизныеМарки = РасширенныеДанныеИБ.АкцизныеМарки;	
		ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, АкцизныеМарки);
		ДанныеXDTO.Вставить("АкцизныеМарки", АкцизныеМарки);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область МаркировкиУпаковок
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.7") Тогда
		МаркировкиУпаковок = РасширенныеДанныеИБ.МаркировкиУпаковок;	
		ДанныеXDTO.Вставить("МаркировкиУпаковок", МаркировкиУпаковок);
	КонецЕсли;
	
	#КонецОбласти
КонецПроцедуры
