Процедура ПКО_Документ_ОтчетКомиссионераОСписании_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", Лев(ДанныеИБ.Номер, 5) + "С" + Сред(ДанныеИБ.Номер, 7));
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	// Дополнительные свойства для договора
	Если ЗначениеЗаполнено(ДанныеИБ.Договор) Тогда
		ДанныеXDTO.Вставить("Договор", ДанныеИБ.Договор);
	Иначе
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.Контрагент = ДанныеИБ.Контрагент;
		ПараметрыПоУмолчанию.Организация = ДанныеИБ.Организация;
		ПараметрыПоУмолчанию.ВалютаВзаиморасчетов = ДанныеИБ.Валюта;
		ПараметрыПоУмолчанию.ВидДоговора = "СКомиссионером";
		ПараметрыПоУмолчанию.Дата = ДанныеИБ.Дата;
		ПараметрыПоУмолчанию.Номер = ДанныеИБ.Номер;
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = Ложь;
		
		Заказ = Новый Структура("Заказ, Соглашение, Сделка", Неопределено, ДанныеИБ.Соглашение, Неопределено);
		Договор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена, Заказ, ДанныеИБ);
		ДанныеXDTO.Вставить("Договор", Договор);
	КонецЕсли;
	
	ВыгрузитьПодразделение(ДанныеИБ, ДанныеXDTO);
	
	ВыгрузитьКурсИКратностьВзаиморасчетов(ДанныеXDTO, ДанныеИБ.Валюта, ДанныеИБ.Дата);
	
	ДанныеXDTO.Вставить("СпособРасчетаКомиссионногоВознаграждения", "НеРассчитывается");
	ДанныеXDTO.Вставить("СуммаВключаетНДС", Истина);
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.7") Тогда
		ДанныеXDTO.Вставить("НачалоПериодаОтчета",    ДанныеИБ.НачалоПериода);
		ДанныеXDTO.Вставить("ОкончаниеПериодаОтчета", ДанныеИБ.КонецПериода);
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтрокиДокумента,
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Товары.Количество,
		|	ВЫБОР
		|		КОГДА Товары.СуммаСНДС / Товары.Количество < 0.01
		|			ТОГДА 0.01
		|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаСНДС / Товары.Количество КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК Цена,
		|	Товары.СуммаСНДС КАК Сумма,
		|	Товары.СтавкаНДС,
		|	Товары.СуммаНДС,
		|	1 КАК КлючСтроки
		|ИЗ
		|	Документ.ОтчетКомиссионераОСписании.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ВидыЗапасов.Количество КАК Количество,
		|	ВидыЗапасов.НомерГТД.Код КАК НомерГТД,
		|	ВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВЫБОР
		|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|			ТОГДА ВЫРАЗИТЬ(""КомиссионныеТовары"" КАК Строка(18))
		|		ИНАЧЕ ВЫРАЗИТЬ(""СобственныеТовары"" КАК Строка(18))
		|	КОНЕЦ КАК ТипЗапасов
		|ИЗ
		|	Документ.ОтчетКомиссионераОСписании.ВидыЗапасов КАК ВидыЗапасов
		|ГДЕ
		|	ВидыЗапасов.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ТабТовары = РезультатыЗапроса[0].Выгрузить();
	ТабТовары.Колонки.Добавить("НомерГТД");
	ТабТовары.Колонки.Добавить("СтранаПроисхождения");
	ТабТовары.Колонки.Добавить("СуммаНДСВознаграждения");
	ТабТовары.Колонки.Добавить("ТипЗапасов");
	ТабТовары.Индексы.Добавить("Номенклатура, Характеристика, НомерГТД");
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", Неопределено);
	СтруктураПоиска.Вставить("Характеристика", Неопределено);
	СтруктураПоиска.Вставить("НомерГТД", Неопределено);
	ВидыЗапасов = РезультатыЗапроса[1].Выбрать();
	Пока ВидыЗапасов.Следующий() Цикл
		СтруктураПоиска.Номенклатура   = ВидыЗапасов.Номенклатура;
		СтруктураПоиска.Характеристика = ВидыЗапасов.Характеристика;
		НайденныеСтроки = ТабТовары.НайтиСтроки(СтруктураПоиска);
		ОсталосьВидаЗапасов = ВидыЗапасов.Количество;
		Для Каждого СтрокаДокумента Из НайденныеСтроки Цикл
			Если ОсталосьВидаЗапасов = 0 Тогда
				Прервать;
			КонецЕсли;
			Если СтрокаДокумента.Количество <= ОсталосьВидаЗапасов Тогда
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, ВидыЗапасов, "НомерГТД, СтранаПроисхождения, ТипЗапасов");
				ОсталосьВидаЗапасов = ОсталосьВидаЗапасов - СтрокаДокумента.Количество;
			Иначе
				// Выделяем из строки документа новую строку с определенным видом запасов
				НоваяСтрока = ТабТовары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДокумента);
				ДоляВидаЗапасовВСтрокеДокумента = ОсталосьВидаЗапасов / СтрокаДокумента.Количество;
				НоваяСтрока.Количество 					= ОсталосьВидаЗапасов;
				НоваяСтрока.Сумма      					= Окр(СтрокаДокумента.Сумма * ДоляВидаЗапасовВСтрокеДокумента, 2);
				НоваяСтрока.СуммаНДС   					= Окр(СтрокаДокумента.СуммаНДС * ДоляВидаЗапасовВСтрокеДокумента, 2);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВидыЗапасов, "НомерГТД, СтранаПроисхождения, ТипЗапасов");
				СтрокаДокумента.Количество				= СтрокаДокумента.Количество - НоваяСтрока.Количество;
				СтрокаДокумента.Сумма					= СтрокаДокумента.Сумма - НоваяСтрока.Сумма;
				СтрокаДокумента.СуммаНДС				= СтрокаДокумента.СуммаНДС - НоваяСтрока.СуммаНДС;
				СтрокаДокумента.КлючСтроки 				= 1;
				ОсталосьВидаЗапасов = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ТабТовары.Сортировать("НомерСтрокиДокумента Возр");
	
	ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, ТабТовары, Истина, Ложь);
	
	ДанныеXDTO.Вставить("Товары", ТабТовары);
	ТабПокупатели = Новый ТаблицаЗначений;
	ТабПокупатели.Колонки.Добавить("ВыставленСФ");
	ТабПокупатели.Колонки.Добавить("Покупатель");
	ТабПокупатели.Колонки.Добавить("КлючСтроки");
	НоваяСтрока = ТабПокупатели.Добавить();
	НоваяСтрока.ВыставленСФ	= Ложь;
	НоваяСтрока.Покупатель	= ДанныеИБ.Контрагент;
	НоваяСтрока.КлючСтроки	= 1;
	ДанныеXDTO.Вставить("Покупатели", ТабПокупатели);
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
КонецПроцедуры
