Процедура ПКО_Документ_АннулированиеПС_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
		|	АннулированиеПодарочныхСертификатовПодарочныеСертификаты.СуммаВВалютеСертификата КАК Сумма,
		|	ПодарочныеСертификаты.Код КАК СерийныйНомер,
		|	ПодарочныеСертификаты.Штрихкод,
		|	ПодарочныеСертификаты.МагнитныйКод,
		|	ПодарочныеСертификаты.Владелец КАК ВидПодарочногоСертификатаСсылка
		|ИЗ
		|	Документ.АннулированиеПодарочныхСертификатов.ПодарочныеСертификаты КАК АннулированиеПодарочныхСертификатовПодарочныеСертификаты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПодарочныеСертификаты КАК ПодарочныеСертификаты
		|		ПО АннулированиеПодарочныхСертификатовПодарочныеСертификаты.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка
		|ГДЕ
		|	АннулированиеПодарочныхСертификатовПодарочныеСертификаты.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	ПодарочныеСертификаты = Запрос.Выполнить().Выгрузить();
	ПодарочныеСертификаты.Колонки.Добавить("ВидПодарочногоСертификата");
	Для Каждого ПС Из ПодарочныеСертификаты Цикл
		ПС.ВидПодарочногоСертификата = Новый Структура("Значение, ИмяПКО",
			ПС.ВидПодарочногоСертификатаСсылка, "Справочник_ВидыПодарочныхСертификатов");
	КонецЦикла;
	
	ДанныеXDTO.Вставить("ПодарочныеСертификаты", ПодарочныеСертификаты);
КонецПроцедуры
