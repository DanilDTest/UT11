Процедура ПКО_Документ_ЗаказНаСборку_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	ПолученныеДанные.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Отгрузить;          
	ПолученныеДанные.ВариантПриемкиТоваров = Перечисления.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным; 
	
	
	//ПолученныеДанные.Статус = Перечисления.СтатусыВнутреннихЗаказов.КВыполнению; 
	//ПолученныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров;       
	
	
	Если ДанныеXDTO.Свойство("RM_ДокументОснование") Тогда
	
		ДокументОснование = ДанныеXDTO.RM_ДокументОснование;
		ИмяПКО = "";
	    
	    Если Найти(ДокументОснование.ТипЗначения, "УпаковочныйЛист") > 0 Тогда
	        ИмяПКО = "Документ_УпаковочныйЛист_Получение";  
	    ИначеЕсли Найти(ДокументОснование.ТипЗначения, "ЗаказКлиента") > 0 Тогда
	       	ИмяПКО = "Документ_ЗаказКлиента_Получение";
	    ИначеЕсли Найти(ДокументОснование.ТипЗначения, "АктБрака") > 0 Тогда  
	    	ИмяПКО = "Документ_RM_АктБрака_Получение";
	    КонецЕсли;        
	    
	    Если НЕ ПустаяСтрока(ИмяПКО) Тогда
	    	ПолученныеДанные.ДополнительныеСвойства.Вставить("ДокументОснование", Новый Структура("Значение, ИмяПКО", ДокументОснование, ИмяПКО));  
	    КонецЕсли;
	КонецЕсли;
	
	
	#Область Товары
	
	ПравилаЗаполнения = Новый Соответствие;
	ПравилаЗаполнения.Вставить("Номенклатура",        "Номенклатура");
	ПравилаЗаполнения.Вставить("Количество",          "Количество");
	ПравилаЗаполнения.Вставить("ДоляСтоимости",       "ДоляСтоимости");
	ПравилаЗаполнения.Вставить("Характеристика",     "Характеристика"); 
	ПравилаЗаполнения.Вставить("Упаковка",           "Упаковка");
	ПравилаЗаполнения.Вставить("КоличествоУпаковок", "КоличествоУпаковок");
	ПравилаЗаполнения.Вставить("КлючСвязи", "КодСтроки");    
	ПравилаЗаполнения.Вставить("Отменено",       "Отменено");
	
	
	МассивСтрокТовары = Новый Массив;
	Если ДанныеXDTO.Свойство("Товары") Тогда
			Для Каждого Строка Из ДанныеXDTO.Товары Цикл
		
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
		
			Если НЕ (СтруктураДанныхСтроки.Свойство("КоличествоУпаковок") И СтруктураДанныхСтроки.КоличествоУпаковок <> 0) Тогда
				СтруктураДанныхСтроки.Вставить("КоличествоУпаковок", СтруктураДанныхСтроки.Количество);
			КонецЕсли;             
		
			МассивСтрокТовары.Добавить(СтруктураДанныхСтроки);
		
		КонецЦикла; 
	КонецЕсли;
	
	ПолученныеДанные.ДополнительныеСвойства.Вставить("Товары", МассивСтрокТовары);
	
	#КонецОбласти    
	
	#Область Серии
	
	ПравилаЗаполнения = Новый Соответствие;
	ПравилаЗаполнения.Вставить("Номенклатура",        "Номенклатура");
	ПравилаЗаполнения.Вставить("Количество",          "Количество");
	ПравилаЗаполнения.Вставить("Характеристика",     "Характеристика"); 
	ПравилаЗаполнения.Вставить("Серия",           "Серия");
	
	МассивСтрокСерии = Новый Массив; 
	Если ДанныеXDTO.Свойство("Серии") Тогда
	
		Для Каждого Строка Из ДанныеXDTO.Серии Цикл
		
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);       	
			МассивСтрокСерии.Добавить(СтруктураДанныхСтроки);
		
		КонецЦикла;
	КонецЕсли;
	
	ПолученныеДанные.ДополнительныеСвойства.Вставить("Серии", МассивСтрокСерии);
	
	#КонецОбласти
	
	#Область ШтрихкодыУпаковок
	
	Если ДанныеXDTO.Свойство("АкцизныеМарки") Тогда
		ПравилаЗаполнения = Новый Соответствие;
		ПравилаЗаполнения.Вставить("ШтрихкодУпаковки", "ШтрихкодУпаковки");
	
		МассивСтрокШтрихкодыУпаковок = Новый Массив;
		Для Каждого Строка Из ДанныеXDTO.АкцизныеМарки Цикл
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			МассивСтрокШтрихкодыУпаковок.Добавить(СтруктураДанныхСтроки);
		КонецЦикла;  
		
		ПолученныеДанные.ДополнительныеСвойства.Вставить("RM_ШтрихкодыУпаковок", МассивСтрокШтрихкодыУпаковок);
	КонецЕсли;
	#КонецОбласти
КонецПроцедуры
