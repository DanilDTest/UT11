Процедура ПКО_Документ_УпаковочныйЛист_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;   
	
	RM_ДокументОснование = ДанныеИБ.ДокументОснование;
	Если RM_ДокументОснование <> Неопределено Тогда
	    
	    Если ТипЗнч(RM_ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
	       ИмяПКО = "Документ_ПеремещениеТоваров_Отправка";
	    КонецЕсли;   
	    
	    Если ЗначениеЗаполнено(ИмяПКО) Тогда
	    	ДанныеXDTO.Вставить("ДокументОснование", Новый Структура("Значение, ИмяПКО", RM_ДокументОснование, ИмяПКО));  
	    КонецЕсли;
	КонецЕсли;
	
	 
	 	Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	УпаковочныйЛистТовары.Ссылка КАК Ссылка,
			|	УпаковочныйЛистТовары.НомерСтроки КАК НомерСтроки,
			|	УпаковочныйЛистТовары.Номенклатура КАК Номенклатура,
			|	УпаковочныйЛистТовары.Характеристика КАК Характеристика,
			|	УпаковочныйЛистТовары.Серия КАК Серия,
			|	УпаковочныйЛистТовары.Упаковка КАК Упаковка,
			|	УпаковочныйЛистТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	УпаковочныйЛистТовары.Количество КАК Количество,
			|	УпаковочныйЛистТовары.УпаковочныйЛист КАК УпаковочныйЛист,
			|	УпаковочныйЛистТовары.НоменклатураПартнера КАК НоменклатураПартнера,
			|	УпаковочныйЛистТовары.Комментарий КАК Комментарий,
			|	УпаковочныйЛистТовары.ЭтоУпаковочныйЛист КАК ЭтоУпаковочныйЛист,
			|	УпаковочныйЛистТовары.ЭтоСлужебнаяСтрокаПустогоУпаковочногоЛиста КАК ЭтоСлужебнаяСтрокаПустогоУпаковочногоЛиста,
			|	УпаковочныйЛистТовары.УпаковочныйЛистРодитель КАК УпаковочныйЛистРодитель,
			|	УпаковочныйЛистТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	УпаковочныйЛистТовары.RM_Штрихкод КАК RM_Штрихкод,
			|	УпаковочныйЛистТовары.RM_КлючСвязи КАК RM_КлючСвязи
			|ИЗ
			|	Документ.УпаковочныйЛист.Товары КАК УпаковочныйЛистТовары
			|ГДЕ
			|	УпаковочныйЛистТовары.Ссылка = &Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		
	Товары = РезультатЗапроса.Выгрузить();
	ДанныеXDTO.Вставить("Товары", Товары);          
	
	
	СтруктураДополнительныхРеквизитов = Новый Структура;
	СтруктураДополнительныхРеквизитов.Вставить("RM_НомерЗаказаИМ");
	СтруктураДополнительныхРеквизитов.Вставить("RM_КоличествоМест");
	СтруктураДополнительныхРеквизитов.Вставить("RM_ДатаПолучения");
	СтруктураДополнительныхРеквизитов.Вставить("RM_ВремяНачалаКонтроля");
	СтруктураДополнительныхРеквизитов.Вставить("RM_ВремяЗавершенияКонтроля");
	СтруктураДополнительныхРеквизитов.Вставить("RM_ОбъемУЛ");
	СтруктураДополнительныхРеквизитов.Вставить("RM_ВесУЛ");
	СтруктураДополнительныхРеквизитов.Вставить("RM_ПереданоВЗонуОтгрузки");
	СтруктураДополнительныхРеквизитов.Вставить("RM_ПлановаяДатаОтгрузки");
	СтруктураДополнительныхРеквизитов.Вставить("RM_ЭтоПопутныйГруз");
	СтруктураДополнительныхРеквизитов.Вставить("RM_ЭтоЦС");
	
	ЗаполнитьЗначенияСвойств(СтруктураДополнительныхРеквизитов, ДанныеИБ);  
	ВыгрузитьДополнительныеРеквизитыСвойствоСтрокой(СтруктураДополнительныхРеквизитов, ДанныеXDTO);
КонецПроцедуры
