Процедура ПКО_ПередачаМеждуОрганизациями_РТУ_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерДок = Лев(ДанныеИБ.Номер, 5) + "И" + Сред(ДанныеИБ.Номер, 7);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДок);
	
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	ВалютаРеглУчета  = ВалютаРегламентированногоУчета(КомпонентыОбмена);
	СкладДляВыгрузки = СкладДляВыгрузки(ДанныеИБ.Склад, КомпонентыОбмена.ПараметрыКонвертации);
	ДанныеXDTO.Вставить("Склад", СкладДляВыгрузки);
	
	ВыгрузитьПодразделениеИзРеквизитаДокумента(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, "Склад");
	ВыгрузитьНалогообложениеНДС(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Ложь);
	
	ДанныеXDTO.Вставить("ГлавныйБухгалтер", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.ГлавныйБухгалтер, "ФизическоеЛицо"));
	ДанныеXDTO.Вставить("Руководитель",     ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.Руководитель, "ФизическоеЛицо"));
	
	Если ДанныеИБ.РасчетыЧерезОтдельногоКонтрагента Тогда
		КонтрагентСсылка = ДанныеИБ.Контрагент;
	Иначе
		КонтрагентСсылка = КонтрагентИзОрганизации(ДанныеИБ.ОрганизацияПолучатель, КомпонентыОбмена);
	КонецЕсли;
	ДанныеXDTO.Вставить("Контрагент", КонтрагентСсылка);
	
	Если ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
		
		ДанныеXDTO.Вставить("ВидОперации",          "РеализацияКлиенту");
		ДанныеXDTO.Вставить("ВалютаВзаиморасчетов", ДанныеИБ.ВалютаВзаиморасчетов);
	
		Если ДанныеИБ.Валюта = ВалютаРеглУчета
			Или ДанныеИБ.ВалютаВзаиморасчетов = ВалютаРеглУчета Тогда
			
			ДанныеXDTO.Вставить("КурсВзаиморасчетов",      ДанныеИБ.Курс);
			ДанныеXDTO.Вставить("КратностьВзаиморасчетов", ДанныеИБ.Кратность);
			
		Иначе
			ВыгрузитьКурсИКратностьВзаиморасчетов(ДанныеXDTO, ДанныеИБ.Валюта, ДанныеИБ.Дата);
		КонецЕсли;
		
	Иначе
		
		ДанныеXDTO.Вставить("ВидОперации",          "ПередачаНаКомиссию");
		ДанныеXDTO.Вставить("ВалютаВзаиморасчетов", ДанныеИБ.Валюта);
	
		Если ДанныеИБ.Валюта <> ВалютаРеглУчета Тогда
			ВыгрузитьКурсИКратностьВзаиморасчетов(ДанныеXDTO, ДанныеИБ.Валюта, ДанныеИБ.Дата);
		Иначе
			
			ДанныеXDTO.Вставить("КурсВзаиморасчетов",      1);
			ДанныеXDTO.Вставить("КратностьВзаиморасчетов", 1);
			
		КонецЕсли;
	
	КонецЕсли;
	
	#Область Договор
	
	ИнструкцияДоговор = Неопределено;
	Если ДанныеИБ.РасчетыЧерезОтдельногоКонтрагента
		И ЗначениеЗаполнено(ДанныеИБ.ДоговорПокупки)
		И ОбщегоНазначения.СсылкаСуществует(ДанныеИБ.ДоговорПокупки) Тогда
		
		ИнструкцияДоговор = Новый Структура;
		ИнструкцияДоговор.Вставить("ИмяПКО",   "Справочник_ДоговорыКонтрагентов");
		ИнструкцияДоговор.Вставить("Значение", ДанныеИБ.ДоговорПокупки);
		
	ИначеЕсли ЗначениеЗаполнено(ДанныеИБ.Договор) Тогда
		
		ИнструкцияДоговор = Новый Структура;
		ИнструкцияДоговор.Вставить("ИмяПКО",   "Справочник_ДоговорыМеждуОрганизациями");
		ИнструкцияДоговор.Вставить("Значение", ДанныеИБ.Договор);
		
	Иначе
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.Организация = ДанныеИБ.Организация;
		ПараметрыПоУмолчанию.Контрагент  = КонтрагентСсылка;
		Если ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
			ПараметрыПоУмолчанию.ВидДоговора              = "СПокупателем";
			ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = ДанныеИБ.ВалютаВзаиморасчетов;
			ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = ДанныеИБ.Валюта = ВалютаРеглУчета И ДанныеИБ.Валюта <> ДанныеИБ.ВалютаВзаиморасчетов;
		Иначе
			ПараметрыПоУмолчанию.ВидДоговора              = "СКомиссионером";
			ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = ДанныеИБ.Валюта;
			ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = Ложь;
		КонецЕсли;
		
		ИнструкцияДоговор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию,
			КомпонентыОбмена,
			ДанныеИБ.Договор);
	КонецЕсли;
	ДанныеXDTO.Вставить("Договор", ИнструкцияДоговор);
	
	#КонецОбласти
	
	// Табличные части
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА Товары.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА ХарактеристикаСпр.НаименованиеПолное = """"
		|						ТОГДА ХарактеристикаСпр.Наименование
		|					ИНАЧЕ ХарактеристикаСпр.НаименованиеПолное
		|				КОНЕЦ
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ХарактеристикаНаименование,
		|	ВЫБОР
		|		КОГДА НоменклатураСпр.НаименованиеПолное = """"
		|			ТОГДА НоменклатураСпр.Наименование
		|		ИНАЧЕ НоменклатураСпр.НаименованиеПолное
		|	КОНЕЦ КАК НоменклатураНаименование,
		|	Товары.Количество КАК Количество,
		|	Товары.Цена КАК Цена,
		|	Товары.Сумма КАК Сумма,
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	Товары.СуммаНДС КАК СуммаНДС,
		|	НоменклатураСпр.ТипНоменклатуры КАК НоменклатураТипНоменклатуры,
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	НоменклатураСпр.ОсобенностьУчета КАК ОсобенностьУчета,
		|	НоменклатураСпр.Контрагент КАК Контрагент,
		|	НоменклатураСпр.Принципал КАК Партнер,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Серия КАК Серия,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.КоличествоУпаковок КАК КоличествоУпаковок
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
		|		ПО (НоменклатураСпр.Ссылка = Товары.Номенклатура)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикаСпр
		|		ПО (ХарактеристикаСпр.Ссылка = Товары.Характеристика)
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура";
	
	Запрос.Выполнить();
	
	
	Если ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.ХарактеристикаНаименование = """"
			|			ТОГДА ТаблицаТовары.НоменклатураНаименование
			|		ИНАЧЕ ТаблицаТовары.НоменклатураНаименование + "" ("" + ТаблицаТовары.ХарактеристикаНаименование + "")""
			|	КОНЕЦ КАК Содержание,
			|	ТаблицаТовары.Номенклатура.Принципал КАК ПринципалСсылка,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОрганизациейПоАгентскойСхеме)
			|				ИЛИ ТаблицаТовары.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Партнером)
			|			ТОГДА ""Агентские""
			|		ИНАЧЕ ""Собственные""
			|	КОНЕЦ КАК ТипУслуги,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ТаблицаТовары.Цена КАК Цена,
			|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
			|	ТаблицаТовары.Сумма КАК Сумма,
			|	ТаблицаТовары.СуммаНДС КАК СуммаНДС
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|ГДЕ
			|	(ТаблицаТовары.НоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				И (ТаблицаТовары.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОрганизациейПродавцом)
			|					ИЛИ ТаблицаТовары.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета))
			|			ИЛИ ТаблицаТовары.НоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Аналитика.Номенклатура КАК Номенклатура,
			|	Аналитика.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ВидыЗапасов.Количество КАК Количество,
			|	ВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
			|	ВидыЗапасов.СуммаНДС КАК СуммаНДС,
			|	ВидыЗапасов.НомерГТД.Код КАК НомерГТД,
			|	ВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
			|	ВЫРАЗИТЬ(ВЫБОР
			|			КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
			|				ТОГДА ВидыЗапасов.СуммаСНДС / ВидыЗапасов.Количество
			|			ИНАЧЕ (ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) / ВидыЗапасов.Количество
			|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
			|	ВЫБОР
			|		КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
			|			ТОГДА ВидыЗапасов.СуммаСНДС
			|		ИНАЧЕ ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС
			|	КОНЕЦ КАК Сумма,
			|	ВЫБОР
			|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
			|			ТОГДА ВЫРАЗИТЬ(""КомиссионныеТовары"" КАК СТРОКА(18))
			|		ИНАЧЕ ВЫРАЗИТЬ(""СобственныеТовары"" КАК СТРОКА(18))
			|	КОНЕЦ КАК ТипЗапасов,
			|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
			|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Серия КАК Серия,
			|	ВидыЗапасов.Упаковка КАК Упаковка,
			|	ВидыЗапасов.КоличествоУпаковок КАК КоличествоУпаковок
			|ПОМЕСТИТЬ ВидыЗапасов
			|ИЗ
			|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
			|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
			|ГДЕ
			|	ВидыЗапасов.Ссылка = &Ссылка
			|	И Аналитика.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	МАКСИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки
			|ПОМЕСТИТЬ ТаблицаТоварыПоМаксСтроке
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВидыЗапасов.Номенклатура КАК Номенклатура,
			|	ВидыЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ВидыЗапасов.Цена КАК Цена,
			|	ВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
			|	ВидыЗапасов.НомерГТД КАК НомерГТД,
			|	ВидыЗапасов.СтранаПроисхождения КАК СтранаПроисхождения,
			|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
			|	ЕСТЬNULL(ПорядокСтрокТаблицыТовары.НомерСтроки, 0) КАК НомерСтрокиДокумента,
			|	ВидыЗапасов.Количество КАК Количество,
			|	ВидыЗапасов.Сумма КАК Сумма,
			|	ВидыЗапасов.СуммаНДС КАК СуммаНДС,
			|	&ТекстЗапросаХарактеристика,
			|	&ТекстЗапросаСерия,
			|	&ТекстЗапросаУпаковка
			|ИЗ
			|	ВидыЗапасов КАК ВидыЗапасов
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоварыПоМаксСтроке КАК ПорядокСтрокТаблицыТовары
			|		ПО ВидыЗапасов.Номенклатура = ПорядокСтрокТаблицыТовары.Номенклатура
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЕСТЬNULL(ПорядокСтрокТаблицыТовары.НомерСтроки, 0)";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаХарактеристика",
			ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "ВидыЗапасов"));
			
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаУпаковка",
			ПолучитьТекстЗапросаУпаковки(КомпонентыОбмена, "ВидыЗапасов"));
			
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаСерия",
			ПолучитьТекстЗапросаСерии(КомпонентыОбмена, "ВидыЗапасов"));
		
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		
		ТабУслуги = РезультатыЗапроса[0].Выгрузить();
		ТаблицаУслугЗаполнитьПринципала(КомпонентыОбмена, ТабУслуги);
		
		Товары = РезультатыЗапроса[3].Выгрузить();
		ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, Товары);
	
		ДанныеXDTO.Вставить("Услуги", ТабУслуги);
		ДанныеXDTO.Вставить("Товары", Товары);
		
	Иначе
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
			|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ВидыЗапасов.Количество КАК Количество,
			|	ВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
			|	ВидыЗапасов.СуммаНДС КАК СуммаНДС,
			|	ВидыЗапасов.НомерГТД.Код КАК НомерГТД,
			|	ВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
			|	ВЫБОР
			|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
			|			ТОГДА ВЫРАЗИТЬ(""КомиссионныеТовары"" КАК СТРОКА(18))
			|		ИНАЧЕ ВЫРАЗИТЬ(""СобственныеТовары"" КАК СТРОКА(18))
			|	КОНЕЦ КАК ТипЗапасов,
			|	ВЫРАЗИТЬ(ВЫБОР
			|			КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
			|				ТОГДА ВидыЗапасов.СуммаСНДС / ВидыЗапасов.Количество
			|			ИНАЧЕ (ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) / ВидыЗапасов.Количество
			|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
			|	ВЫБОР
			|		КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
			|			ТОГДА ВидыЗапасов.СуммаСНДС
			|		ИНАЧЕ ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС
			|	КОНЕЦ КАК Сумма,
			|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
			|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Серия КАК Серия,
			|	ВидыЗапасов.Упаковка КАК Упаковка,
			|	ВидыЗапасов.КоличествоУпаковок КАК КоличествоУпаковок
			|ПОМЕСТИТЬ ВидыЗапасов
			|ИЗ
			|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
			|ГДЕ
			|	ВидыЗапасов.Ссылка = &Ссылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	МАКСИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки
			|ПОМЕСТИТЬ ТаблицаТоварыПоМаксСтроке
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВидыЗапасов.Номенклатура КАК Номенклатура,
			|	ВидыЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ВидыЗапасов.Цена КАК Цена,
			|	ВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
			|	ВидыЗапасов.НомерГТД КАК НомерГТД,
			|	ВидыЗапасов.СтранаПроисхождения КАК СтранаПроисхождения,
			|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
			|	ЕСТЬNULL(ПорядокСтрокТаблицыТовары.НомерСтроки, 0) КАК НомерСтрокиДокумента,
			|	ВидыЗапасов.Количество КАК Количество,
			|	ВидыЗапасов.Сумма КАК Сумма,
			|	ВидыЗапасов.СуммаНДС КАК СуммаНДС,
			|	&ТекстЗапросаХарактеристика,
			|	&ТекстЗапросаСерия,
			|	&ТекстЗапросаУпаковка
			|ИЗ
			|	ВидыЗапасов КАК ВидыЗапасов
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоварыПоМаксСтроке КАК ПорядокСтрокТаблицыТовары
			|		ПО ВидыЗапасов.Номенклатура = ПорядокСтрокТаблицыТовары.Номенклатура
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЕСТЬNULL(ПорядокСтрокТаблицыТовары.НомерСтроки, 0)";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаХарактеристика",
			ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "ВидыЗапасов"));
			
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаУпаковка",
			ПолучитьТекстЗапросаУпаковки(КомпонентыОбмена, "ВидыЗапасов"));
			
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаСерия",
			ПолучитьТекстЗапросаСерии(КомпонентыОбмена, "ВидыЗапасов"));
			
		Товары = Запрос.Выполнить().Выгрузить();
		ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, Товары);
			
		ДанныеXDTO.Вставить("Товары", Товары);
		
	КонецЕсли;
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
КонецПроцедуры
