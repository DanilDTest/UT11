Процедура ПКО_Документ_ЗаказНаСборку_Получение_ПередЗаписьюПолученныхДанных(ПолученныеДанные, ДанныеИБ, КонвертацияСвойств, КомпонентыОбмена)
	Для каждого СтрокаТовара из ПолученныеДанные.Товары Цикл
		СтрокаТовара.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Отгрузить;
	КонецЦикла;     
	
	СтатусЗакрыт = Перечисления.СтатусыВнутреннихЗаказов.Закрыт;
	Если НЕ ДанныеИБ = Неопределено Тогда  
	                         
		// Восстанавливаем "затертые" данные
		
		Если НЕ ЗначениеЗаполнено(ПолученныеДанные.Статус) 
			ИЛИ (ПолученныеДанные.Статус = СтатусЗакрыт И НЕ ДанныеИБ.Статус = СтатусЗакрыт) Тогда
			ПолученныеДанные.Статус = ДанныеИБ.Статус;
		КонецЕсли; 
		
		Если НЕ ЗначениеЗаполнено(ПолученныеДанные.ХозяйственнаяОперация) Тогда
			ПолученныеДанные.ХозяйственнаяОперация = ДанныеИБ.ХозяйственнаяОперация; 
		КонецЕсли;  
	
		
	Иначе
	
	 	Если НЕ ЗначениеЗаполнено(ПолученныеДанные.Статус) 
	 		ИЛИ ПолученныеДанные.Статус = СтатусЗакрыт Тогда
			ПолученныеДанные.Статус = Перечисления.СтатусыВнутреннихЗаказов.КВыполнению; 
		КонецЕсли;  
		
		Если НЕ ЗначениеЗаполнено(ПолученныеДанные.ХозяйственнаяОперация) Тогда
			ПолученныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров; 
		КонецЕсли; 
			
		Если НЕ ЗначениеЗаполнено(ПолученныеДанные.СборкаПодДеятельность) Тогда   	
			ПараметрыЗаполнения = Документы.ЗаказНаСборку.ПараметрыЗаполненияВидаДеятельностиНДС(ПолученныеДанные);
			УчетНДСУП.ЗаполнитьВидДеятельностиНДС(ПолученныеДанные.СборкаПодДеятельность, ПараметрыЗаполнения);
		КонецЕсли;  
				
	КонецЕсли;
КонецПроцедуры
