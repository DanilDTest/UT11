Процедура ПКО_Документ_ПоступлениеТоваровУслуг_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	ЗаполнитьНалогообложениеНДСПоПолученнымДанным(КомпонентыОбмена, ПолученныеДанные, ДанныеXDTO);
	
	ПолученныеДанные.Проведен    = Истина;
	ПолученныеДанные.Согласован  = Истина;
	
	ДобавитьВалютуВДопСвойства(ПолученныеДанные, ДанныеXDTO);
	ДобавитьВалютуВДопСвойства(ПолученныеДанные, ДанныеXDTO, "ВалютаВзаиморасчетов", "ВалютаВзаиморасчетов");
	ДобавитьДоговорВДопСвойства(ПолученныеДанные, ДанныеXDTO, КомпонентыОбмена);
	
	ИспользоватьЗаказыПоставщикам = ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыПоставщикам");
	Если ИспользоватьЗаказыПоставщикам
		И ДанныеXDTO.Свойство("Заказ")
		И ЗначениеЗаполнено(ДанныеXDTO.Заказ) Тогда
		ПолученныеДанные.ПоступлениеПоЗаказам = Истина;
	КонецЕсли;
	
	ПравилаЗаполнения = Новый Соответствие;
	ПравилаЗаполнения.Вставить("Номенклатура",       "Номенклатура");
	ПравилаЗаполнения.Вставить("Количество",         "Количество");
	ПравилаЗаполнения.Вставить("Сумма",              "Сумма");
	ПравилаЗаполнения.Вставить("Цена",               "Цена");
	ПравилаЗаполнения.Вставить("СтавкаНДС",          "СтавкаНДС");
	ПравилаЗаполнения.Вставить("СуммаНДС",           "СуммаНДС");
	ПравилаЗаполнения.Вставить("Склад",              "Склад");
	Если ЗначениеФО("ИспользоватьХарактеристикиНоменклатуры", КомпонентыОбмена) Тогда
		ПравилаЗаполнения.Вставить("Характеристика",     "Характеристика");
	КонецЕсли;
	Если ЗначениеФО("ИспользоватьУпаковкиНоменклатуры", КомпонентыОбмена) Тогда
		ПравилаЗаполнения.Вставить("Упаковка",           "Упаковка");
		ПравилаЗаполнения.Вставить("КоличествоУпаковок", "КоличествоУпаковок");
	КонецЕсли;
	Если ЗначениеФО("ИспользоватьСерииНоменклатуры", КомпонентыОбмена) Тогда
		ПравилаЗаполнения.Вставить("Серия",              "Серия");
	КонецЕсли;
	
	ЗагрузитьДополнительныеРеквизиты(ПолученныеДанные, ДанныеXDTO, КомпонентыОбмена);
	
	// Товары 
	МассивСтрокТовары = Новый Массив;
	Если ДанныеXDTO.Свойство("Товары")
		И ЗначениеЗаполнено(ДанныеXDTO.Товары) Тогда
		
		Если ДанныеXDTO.Товары.Колонки.Найти("ЗакупкаПодДеятельность") <> Неопределено Тогда
			ЗакупкаПодДеятельность = ДанныеXDTO.Товары[0].ЗакупкаПодДеятельность;
			Если ЗначениеЗаполнено(ЗакупкаПодДеятельность) Тогда
				ПолученныеДанные.ДополнительныеСвойства.Вставить("ЗакупкаПодДеятельность", ЗакупкаПодДеятельность);
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого Строка Из ДанныеXDTO.Товары Цикл
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			Если ЗначениеЗаполнено(Строка.НомерГТД) Тогда
				СтруктураДанныхСтроки.Вставить("НомерГТД", Новый Структура("Код, СтранаПроисхождения", Строка.НомерГТД, Строка.СтранаПроисхождения));
			КонецЕсли;
			СуммаСНДС = Строка.Сумма;
			Если СтруктураДанныхСтроки.Свойство("СуммаНДС") И НЕ ПолученныеДанные.ЦенаВключаетНДС Тогда
				СуммаСНДС = СуммаСНДС + СтруктураДанныхСтроки.СуммаНДС
			КонецЕсли;
			
			СтруктураДанныхСтроки.Вставить("СуммаСНДС", СуммаСНДС);
			Если СтруктураДанныхСтроки.Свойство("КоличествоУпаковок") Тогда
			    Если СтруктураДанныхСтроки.Свойство("Упаковка") И СтруктураДанныхСтроки.Свойство("Сумма") Тогда
					СтруктураДанныхСтроки.Вставить("Цена", СтруктураДанныхСтроки.Сумма / СтруктураДанныхСтроки.КоличествоУпаковок);
				КонецЕсли;
			Иначе
				СтруктураДанныхСтроки.Вставить("КоличествоУпаковок", СтруктураДанныхСтроки.Количество);
			КонецЕсли;
			Если ДанныеXDTO.Свойство("Склад") Тогда
				СтруктураДанныхСтроки.Вставить("Склад", ДанныеXDTO.Склад);
			КонецЕсли;
			ОбработатьСтавкуНДСПриПолучении(Строка, СтруктураДанныхСтроки, ПолученныеДанные, КомпонентыОбмена.ПараметрыКонвертации);
	
			МассивСтрокТовары.Добавить(СтруктураДанныхСтроки);
			
		КонецЦикла;
	КонецЕсли;
	
	// Расшифровку доп.расходов - сворачиваем по документу и сумме.
	СуммыДопРасходов = Новый ТаблицаЗначений;
	СуммыДопРасходов.Колонки.Добавить("ДокументПоступления");
	СуммыДопРасходов.Колонки.Добавить("Сумма");
	ДокументПоступления = Неопределено;
	Если ДанныеXDTO.Свойство("РасшифровкаДопРасходов")
		И ЗначениеЗаполнено(ДанныеXDTO.РасшифровкаДопРасходов) Тогда
		Для Каждого Строка Из ДанныеXDTO.РасшифровкаДопРасходов Цикл
			Если Найти(Строка.ДокументПоступления.ТипЗначения, "Авансовый")>0 Тогда
				ИмяПКО = "Документ_АвансовыйОтчет_Получение";
			ИначеЕсли Найти(Строка.ДокументПоступления.ТипЗначения, "ПоступлениеТоваров")>0 Тогда
				ИмяПКО = "Документ_ПоступлениеТоваровУслуг_Получение";
			Иначе
				Продолжить;
			КонецЕсли;
			СтрокаДопРасход = СуммыДопРасходов.Добавить();
			СтрокаДопРасход.ДокументПоступления = RM_ОбменДаннымиXDTOСервер.СтруктураОбъектаXDTOВДанныеИБ(КомпонентыОбмена, 
							Строка.ДокументПоступления, 
							RM_ОбменДаннымиXDTOСервер.ПКОПоИмени(КомпонентыОбмена, ИмяПКО), "ПолучитьСсылку");
			СтрокаДопРасход.Сумма = Строка.Сумма;
		КонецЦикла;
		Если ДанныеXDTO.РасшифровкаДопРасходов.Количество() > 1 Тогда
			СуммыДопРасходов.Свернуть("ДокументПоступления", "Сумма");
		КонецЕсли;
		Если СуммыДопРасходов.Количество() = 1 Тогда
			// Только один документ поступления, на который распределяются расходы.
			ДокументПоступления = СуммыДопРасходов[0].ДокументПоступления;
		КонецЕсли;
	КонецЕсли; 
	
	// Услуги  загружаются в ТЧ Товары с другим видом запасов.
	Если ДанныеXDTO.Свойство("Услуги")
		И ЗначениеЗаполнено(ДанныеXDTO.Услуги) Тогда
		
		ПравилаЗаполнения.Вставить("ПодразделениеЗатрат", "Подразделение");
		ПравилаЗаполнения.Вставить("СтатьяЗатрат", "СтатьяРасходов");
		
		Для Каждого Строка Из ДанныеXDTO.Услуги Цикл
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			СуммаСНДС = Строка.Сумма;
			Если СтруктураДанныхСтроки.Свойство("СуммаНДС") И НЕ ПолученныеДанные.ЦенаВключаетНДС Тогда
				СуммаСНДС = СуммаСНДС + СтруктураДанныхСтроки.СуммаНДС
			КонецЕсли;
			
			СтруктураДанныхСтроки.Вставить("СуммаСНДС", СуммаСНДС);
			СтруктураДанныхСтроки.Вставить("КоличествоУпаковок", СтруктураДанныхСтроки.Количество);
			Если ДанныеXDTO.Свойство("Склад") Тогда
				СтруктураДанныхСтроки.Вставить("Склад", ДанныеXDTO.Склад);
			КонецЕсли;
			
			ОбработатьСтавкуНДСПриПолучении(Строка, СтруктураДанныхСтроки, ПолученныеДанные, КомпонентыОбмена.ПараметрыКонвертации);
	
			Если Строка.ЭтоДопРасходы = Истина И СуммыДопРасходов.Количество() > 0 Тогда
				Если ДокументПоступления <> Неопределено Тогда
					СтруктураДанныхСтроки.Вставить("АналитикаРасходов", ДокументПоступления);
					МассивСтрокТовары.Добавить(СтруктураДанныхСтроки);
				Иначе
					// Распределение услуги на несколько документов поступления
					СуммаВсего = СтруктураДанныхСтроки.Сумма;
					СуммаСНДСВсего = СтруктураДанныхСтроки.СуммаСНДС;
					ИтогоПоДокументам = СуммыДопРасходов.Итог("Сумма");
					Для Каждого СтрокаДопРасход Из СуммыДопРасходов Цикл
						СтруктураДанныхСтрокиДопРасход = Новый Структура();
						Для Каждого ДанныеСтроки Из СтруктураДанныхСтроки Цикл
							СтруктураДанныхСтрокиДопРасход.Вставить(ДанныеСтроки.Ключ, ДанныеСтроки.Значение);
						КонецЦикла;
						КоэффициентПересчета = СтрокаДопРасход.Сумма / ИтогоПоДокументам;
						СтруктураДанныхСтрокиДопРасход.Сумма = Окр(СуммаВсего * КоэффициентПересчета, 2);
						СтруктураДанныхСтрокиДопРасход.СуммаСНДС = Окр(СуммаСНДСВсего * КоэффициентПересчета, 2);
						Если СтруктураДанныхСтрокиДопРасход.СуммаСНДС = 0 Или СтруктураДанныхСтрокиДопРасход.Сумма = 0 Тогда
							Продолжить;
						КонецЕсли;
						СтруктураДанныхСтрокиДопРасход.Вставить("Цена", Окр(СтруктураДанныхСтрокиДопРасход.Цена * КоэффициентПересчета, 2));
						СтруктураДанныхСтрокиДопРасход.Вставить("СуммаНДС", СтруктураДанныхСтрокиДопРасход.СуммаСНДС - СтруктураДанныхСтрокиДопРасход.Сумма);
						СтруктураДанныхСтрокиДопРасход.Вставить("АналитикаРасходов", СтрокаДопРасход.ДокументПоступления);
						МассивСтрокТовары.Добавить(СтруктураДанныхСтрокиДопРасход);
					КонецЦикла;
				КонецЕсли;
			Иначе
				МассивСтрокТовары.Добавить(СтруктураДанныхСтроки);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если МассивСтрокТовары.Количество() > 0 Тогда
		ПолученныеДанные.ДополнительныеСвойства.Вставить("Товары", МассивСтрокТовары);
	КонецЕсли;
	
	
	// Штрихкоды упаковок.
	ЗагрузитьШтрихкодыУпаковок(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена);
КонецПроцедуры
