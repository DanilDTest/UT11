Процедура ПКО_ОтчетКомиссияМеждуОрганизациями_Комиссионер_Отправ_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерДок = Лев(ДанныеИБ.Номер, 5) + "И" + Сред(ДанныеИБ.Номер, 7);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДок);
	
	Если ДанныеИБ.РасчетыЧерезОтдельногоКонтрагента Тогда
		КонтрагентСсылка = ДанныеИБ.Контрагент;
	Иначе
		КонтрагентСсылка = КонтрагентИзОрганизации(ДанныеИБ.Комиссионер, КомпонентыОбмена);
	КонецЕсли;
	ДанныеXDTO.КлючевыеСвойства.Вставить("Контрагент", КонтрагентСсылка);
	
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеXDTO.Вставить("НомерВходящегоДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(НомерДок, Ложь, Истина));
	
	ВыгрузитьПодразделение(ДанныеИБ, ДанныеXDTO);
	
	#Область Договор
	
	ИнструкцияДоговор = Неопределено;
	Если ДанныеИБ.РасчетыЧерезОтдельногоКонтрагента
		И ЗначениеЗаполнено(ДанныеИБ.ДоговорПокупки)
		И ОбщегоНазначения.СсылкаСуществует(ДанныеИБ.ДоговорПокупки) Тогда
		
		ИнструкцияДоговор = Новый Структура;
		ИнструкцияДоговор.Вставить("ИмяПКО",   "Справочник_ДоговорыКонтрагентов");
		ИнструкцияДоговор.Вставить("Значение", ДанныеИБ.ДоговорПокупки);
		
	ИначеЕсли ЗначениеЗаполнено(ДанныеИБ.Договор) Тогда
		
		ИнструкцияДоговор = Новый Структура;
		ИнструкцияДоговор.Вставить("ИмяПКО",   "Справочник_ДоговорыМеждуОрганизациями");
		ИнструкцияДоговор.Вставить("Значение", ДанныеИБ.Договор);
	
	Иначе
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.ВидДоговора              = "СКомиссионером";
		ПараметрыПоУмолчанию.Организация              = ДанныеИБ.Организация;
		ПараметрыПоУмолчанию.Контрагент               = КонтрагентСсылка;
		ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = ДанныеИБ.Валюта;
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = Ложь;
		
		ИнструкцияДоговор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию,
			КомпонентыОбмена,
			ДанныеИБ.Договор);
	КонецЕсли;
	ДанныеXDTO.Вставить("Договор", ИнструкцияДоговор);
	
	#КонецОбласти
	
	ВыгрузитьКурсИКратностьВзаиморасчетов(ДанныеXDTO, ДанныеИБ.Валюта, ДанныеИБ.Дата);
	
	ДанныеXDTO.Вставить("СуммаВключаетНДС", Истина);
	
	// Табличные части.
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтрокиДокумента,
		|	Товары.Ссылка КАК Ссылка,
		|	Товары.Ссылка.Организация КАК Организация,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Товары.Количество КАК Количество,
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	ВЫБОР
		|		КОГДА Товары.СуммаСНДС / Товары.Количество < 0.01
		|			ТОГДА 0.01
		|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаСНДС / Товары.Количество КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК ЦенаПередачи,
		|	Товары.СуммаСНДС КАК СуммаПередачи,
		|	ВЫБОР
		|		КОГДА Товары.СуммаПродажи / Товары.Количество < 0.01
		|			ТОГДА 0.01
		|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаПродажи / Товары.Количество КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК Цена,
		|	Товары.СуммаПродажи КАК Сумма,
		|	Товары.СуммаПродажиНДС КАК СуммаНДС,
		|	Товары.СуммаВознаграждения КАК СуммаВознаграждения,
		|	Товары.Покупатель КАК Покупатель,
		|	Товары.ДатаСчетаФактурыКомиссионера КАК ДатаСФ,
		|	НоменклатураСпр.ОсобенностьУчета КАК ОсобенностьУчета,
		|	НоменклатураСпр.ТипНоменклатуры КАК ТипНоменклатуры,
		|	ВЫБОР
		|		КОГДА Товары.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА ХарактеристикаСпр.НаименованиеПолное = """"
		|						ТОГДА ХарактеристикаСпр.Наименование
		|					ИНАЧЕ ХарактеристикаСпр.НаименованиеПолное
		|				КОНЕЦ
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ХарактеристикаНаименование,
		|	ВЫБОР
		|		КОГДА НоменклатураСпр.НаименованиеПолное = """"
		|			ТОГДА НоменклатураСпр.Наименование
		|		ИНАЧЕ НоменклатураСпр.НаименованиеПолное
		|	КОНЕЦ КАК НоменклатураНаименование
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
		|		ПО (НоменклатураСпр.Ссылка = Товары.Номенклатура)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикаСпр
		|		ПО (ХарактеристикаСпр.Ссылка = Товары.Характеристика)
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|	И Товары.Количество > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.НомерСтроки,
		|	Товары.Ссылка,
		|	Товары.Ссылка.Организация,
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Номенклатура.ЕдиницаИзмерения,
		|	Товары.Количество,
		|	Товары.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА Товары.СуммаСНДС / Товары.Количество < 0.01
		|			ТОГДА 0.01
		|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаСНДС / Товары.Количество КАК ЧИСЛО(15, 2))
		|	КОНЕЦ,
		|	Товары.СуммаСНДС,
		|	ВЫБОР
		|		КОГДА Товары.СуммаПродажи / Товары.Количество < 0.01
		|			ТОГДА 0.01
		|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаПродажи / Товары.Количество КАК ЧИСЛО(15, 2))
		|	КОНЕЦ,
		|	Товары.СуммаПродажи,
		|	Товары.СуммаПродажиНДС,
		|	Товары.СуммаВознаграждения,
		|	ВЫБОР
		|		КОГДА Товары.Количество < 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	Товары.Покупатель,
		|	Товары.ДатаСчетаФактурыКомиссионера,
		|	НоменклатураСпр.ОсобенностьУчета,
		|	НоменклатураСпр.ТипНоменклатуры,
		|	ВЫБОР
		|		КОГДА Товары.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА ХарактеристикаСпр.НаименованиеПолное = """"
		|						ТОГДА ХарактеристикаСпр.Наименование
		|					ИНАЧЕ ХарактеристикаСпр.НаименованиеПолное
		|				КОНЕЦ
		|		ИНАЧЕ """"
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НоменклатураСпр.НаименованиеПолное = """"
		|			ТОГДА НоменклатураСпр.Наименование
		|		ИНАЧЕ НоменклатураСпр.НаименованиеПолное
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Товары.Ссылка,
		|	Организация,
		|	Покупатель,
		|	ДатаСФ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаРаспределения.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	ТаблицаРаспределения.Номенклатура КАК Номенклатура,
		|	ТаблицаРаспределения.Характеристика КАК Характеристика,
		|	ТаблицаРаспределения.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаРаспределения.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаРаспределения.СуммаВознаграждения КАК СуммаВознаграждения,
		|	ТаблицаРаспределения.Покупатель КАК Покупатель,
		|	ТаблицаРаспределения.ДатаСФ КАК ДатаСФ,
		|	ТаблицаРаспределения.ТипНоменклатуры КАК ТипНоменклатуры,
		|	0 КАК СуммаНДСВознаграждения
		|ИЗ
		|	втТовары КАК ТаблицаРаспределения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Товары.Количество КАК Количество,
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	Товары.ЦенаПередачи КАК ЦенаПередачи,
		|	Товары.СуммаПередачи КАК СуммаПередачи,
		|	Товары.Цена КАК Цена,
		|	Товары.Сумма КАК Сумма,
		|	Товары.СуммаНДС КАК СуммаНДС,
		|	Товары.СуммаВознаграждения КАК СуммаВознаграждения,
		|	Товары.Покупатель КАК Покупатель,
		|	Товары.ДатаСФ КАК ДатаСФ,
		|	ЛОЖЬ КАК ВидыЗапасовЗаполнены,
		|	1 КАК Коэффициент,
		|	1 КАК КлючСтроки,
		|	ВЫРАЗИТЬ(""СобственныеТовары"" КАК СТРОКА(50)) КАК ТипЗапасов,
		|	"""" КАК НомерГТД,
		|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаПроисхождения,
		|	0 КАК СуммаНДСВознаграждения
		|ИЗ
		|	втТовары КАК Товары
		|ГДЕ
		|	Товары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Услуги.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	Услуги.Номенклатура КАК Номенклатура,
		|	Услуги.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА Услуги.ХарактеристикаНаименование = """"
		|			ТОГДА Услуги.НоменклатураНаименование
		|		ИНАЧЕ Услуги.НоменклатураНаименование + "" ("" + Услуги.ХарактеристикаНаименование + "")""
		|	КОНЕЦ КАК Содержание,
		|	Услуги.Количество КАК Количество,
		|	Услуги.СтавкаНДС КАК СтавкаНДС,
		|	Услуги.Цена КАК Цена,
		|	Услуги.Сумма КАК Сумма,
		|	Услуги.СуммаНДС КАК СуммаНДС,
		|	Услуги.СуммаВознаграждения КАК СуммаВознаграждения,
		|	Услуги.Покупатель КАК Покупатель,
		|	Услуги.ДатаСФ КАК ДатаСФ,
		|	1 КАК КлючСтроки,
		|	0 КАК СуммаНДСВознаграждения
		|ИЗ
		|	втТовары КАК Услуги
		|ГДЕ
		|	Услуги.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|	И Услуги.ОсобенностьУчета <> ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОрганизациейПродавцом)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыЗапасов.Количество КАК Количество,
		|	ВидыЗапасов.НомерГТД.Код КАК НомерГТД,
		|	ВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВЫБОР
		|		КОГДА ВидыЗапасов.ВидЗапасов.РеализацияЗапасовДругойОрганизации
		|			ТОГДА ВЫБОР
		|					КОГДА ВидыЗапасов.ВидЗапасов.ВидЗапасовВладельца.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|						ТОГДА ВЫРАЗИТЬ(""КомиссионныеТовары"" КАК СТРОКА(18))
		|					ИНАЧЕ ВЫРАЗИТЬ(""СобственныеТовары"" КАК СТРОКА(18))
		|				КОНЕЦ
		|		ИНАЧЕ ВЫРАЗИТЬ(""СобственныеТовары"" КАК СТРОКА(18))
		|	КОНЕЦ КАК ТипЗапасов,
		|	ВЫБОР
		|		КОГДА ВидыЗапасов.Количество < 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Сторно,
		|	ВидыЗапасов.ДатаСчетаФактурыКомиссионера КАК ДатаСФ,
		|	ВидыЗапасов.Покупатель КАК Покупатель,
		|	Аналитика.Номенклатура КАК Номенклатура,
		|	Аналитика.Характеристика КАК Характеристика
		|ИЗ
		|	Документ.ОтчетПоКомиссииМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
		|ГДЕ
		|	ВидыЗапасов.Ссылка = &Ссылка
		|	И ВидыЗапасов.Количество > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК КлючСтроки,
		|	ВЫБОР
		|		КОГДА втТовары.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА втТовары.Ссылка.Контрагент
		|		ИНАЧЕ втТовары.Покупатель
		|	КОНЕЦ КАК Покупатель,
		|	ВЫБОР
		|		КОГДА втТовары.ДатаСФ = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА СчетФактураВыданный.Дата
		|		ИНАЧЕ втТовары.ДатаСФ
		|	КОНЕЦ КАК ДатаСФ,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА СчетФактураВыданный.Ссылка ЕСТЬ NULL
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ) КАК ВыставленСФ,
		|	МАКСИМУМ(ЕСТЬNULL(СчетФактураВыданный.Ссылка, ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка))) КАК СчетФактура,
		|	МИНИМУМ(втТовары.НомерСтрокиДокумента) КАК ЗначениеУпорядочивания
		|ИЗ
		|	втТовары КАК втТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
		|		ПО втТовары.Ссылка = СчетФактураВыданный.ДокументОснование
		|			И втТовары.Организация = СчетФактураВыданный.Организация
		|			И (втТовары.ДатаСФ = НАЧАЛОПЕРИОДА(СчетФактураВыданный.Дата, ДЕНЬ)
		|				ИЛИ втТовары.ДатаСФ = ДАТАВРЕМЯ(1, 1, 1))
		|			И втТовары.Покупатель = СчетФактураВыданный.Контрагент
		|			И (НЕ СчетФактураВыданный.ПометкаУдаления)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА втТовары.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА втТовары.Ссылка.Контрагент
		|		ИНАЧЕ втТовары.Покупатель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА втТовары.ДатаСФ = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА СчетФактураВыданный.Дата
		|		ИНАЧЕ втТовары.ДатаСФ
		|	КОНЕЦ");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	// Выгружаем таблицы из запроса
	
	ТабРаспределения = РезультатыЗапроса[1].Выгрузить();
	ТабТовары        = РезультатыЗапроса[2].Выгрузить();
	ТабУслуги        = РезультатыЗапроса[3].Выгрузить();
	ВидыЗапасов      = РезультатыЗапроса[4].Выбрать();
	ТабПокупатели    = РезультатыЗапроса[5].Выгрузить();
	
	РеквизитыПоиска = "Номенклатура,Характеристика,ДатаСФ,Покупатель";
	
	// Распределение НДС вознаграждения
	
	БазаРаспределенияПоСуммеВознаграждения = ТабРаспределения.ВыгрузитьКолонку("СуммаВознаграждения");
	РаспределениеНДСВознаграждения = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ДанныеИБ.СуммаНДСВознаграждения, 
		БазаРаспределенияПоСуммеВознаграждения);
	
	Если ЗначениеЗаполнено(РаспределениеНДСВознаграждения) Тогда
		ТабРаспределения.ЗагрузитьКолонку(РаспределениеНДСВознаграждения, "СуммаНДСВознаграждения");
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура(РеквизитыПоиска + ",СтавкаНДС");
	ЗаполняемыеРеквизиты = "СуммаНДСВознаграждения";
	
	ТабТовары.Индексы.Добавить(РеквизитыПоиска + ",СтавкаНДС");
	
	Для Каждого СтрокаТаблицыРаспределения Из ТабРаспределения Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТаблицыРаспределения);
		
		Если СтрокаТаблицыРаспределения.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар Тогда
			НайденныеСтроки = ТабТовары.НайтиСтроки(СтруктураПоиска);
		ИначеЕсли СтрокаТаблицыРаспределения.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
			НайденныеСтроки = ТабУслуги.НайтиСтроки(СтруктураПоиска);
		КонецЕсли;
		
		Для Каждого СтрокаДокумента Из НайденныеСтроки Цикл
			ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокаТаблицыРаспределения, ЗаполняемыеРеквизиты);
		КонецЦикла;
		
	КонецЦикла;
	
	// Распределение товаров по видам запасов
	
	СтруктураПоиска = Новый Структура(РеквизитыПоиска + ",ВидыЗапасовЗаполнены");
	ЗаполняемыеРеквизиты = "НомерГТД,СтранаПроисхождения,ТипЗапасов";
	
	ТабТовары.Индексы.Добавить(РеквизитыПоиска + ",ВидыЗапасовЗаполнены");
	
	Пока ВидыЗапасов.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВидыЗапасов, РеквизитыПоиска);
		СтруктураПоиска.ВидыЗапасовЗаполнены = Ложь;
		
		НайденныеСтроки = ТабТовары.НайтиСтроки(СтруктураПоиска);
		
		ОсталосьВидаЗапасов = ВидыЗапасов.Количество;
		Для Каждого СтрокаДокумента Из НайденныеСтроки Цикл
			
			Если ОсталосьВидаЗапасов = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если СтрокаДокумента.Количество <= ОсталосьВидаЗапасов Тогда
				
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, ВидыЗапасов, ЗаполняемыеРеквизиты);
				СтрокаДокумента.ВидыЗапасовЗаполнены = Истина;
				
				ОсталосьВидаЗапасов = ОсталосьВидаЗапасов - СтрокаДокумента.Количество;
				
			Иначе
				
				// Выделение новой строки с заполненным видом запасов.
				НоваяСтрока = ТабТовары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДокумента);
				
				ДоляВидаЗапасовВСтрокеДокумента = ОсталосьВидаЗапасов / СтрокаДокумента.Количество;
				
				НоваяСтрока.Количество             = ОсталосьВидаЗапасов;
				НоваяСтрока.СуммаПередачи          = Окр(СтрокаДокумента.СуммаПередачи * ДоляВидаЗапасовВСтрокеДокумента, 2);
				НоваяСтрока.Сумма                  = Окр(СтрокаДокумента.Сумма * ДоляВидаЗапасовВСтрокеДокумента, 2);
				НоваяСтрока.СуммаНДС               = Окр(СтрокаДокумента.СуммаНДС * ДоляВидаЗапасовВСтрокеДокумента, 2);
				НоваяСтрока.СуммаВознаграждения    = Окр(СтрокаДокумента.СуммаВознаграждения * ДоляВидаЗапасовВСтрокеДокумента, 2);
				НоваяСтрока.СуммаНДСВознаграждения = Окр(СтрокаДокумента.СуммаНДСВознаграждения * ДоляВидаЗапасовВСтрокеДокумента, 2);
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВидыЗапасов, ЗаполняемыеРеквизиты);
				
				СтрокаДокумента.Количество             = СтрокаДокумента.Количество - НоваяСтрока.Количество;
				СтрокаДокумента.СуммаПередачи          = СтрокаДокумента.СуммаПередачи - НоваяСтрока.СуммаПередачи;
				СтрокаДокумента.Сумма                  = СтрокаДокумента.Сумма - НоваяСтрока.Сумма;
				СтрокаДокумента.СуммаНДС               = СтрокаДокумента.СуммаНДС - НоваяСтрока.СуммаНДС;
				СтрокаДокумента.СуммаВознаграждения    = СтрокаДокумента.СуммаВознаграждения - НоваяСтрока.СуммаВознаграждения;
				СтрокаДокумента.СуммаНДСВознаграждения = СтрокаДокумента.СуммаНДСВознаграждения - НоваяСтрока.СуммаНДСВознаграждения;
				
				ОсталосьВидаЗапасов = 0;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабТовары.Сортировать("НомерСтрокиДокумента Возр");
	ТабУслуги.Сортировать("НомерСтрокиДокумента Возр");
	
	// Установление связей между таблицей покупателей и таблицами товаров и услуг.
	
	СтруктураПоиска = Новый Структура("Покупатель,ДатаСФ");
	ЗаполняемыеРеквизиты = "КлючСтроки";
	
	Для Каждого Строка Из ТабПокупатели Цикл
		
		Строка.КлючСтроки = ТабПокупатели.Индекс(Строка) + 1;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
		
		НайденныеСтрокиТоваров = ТабТовары.НайтиСтроки(СтруктураПоиска);
		НайденныеСтрокиУслуг   = ТабУслуги.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаТоваров Из НайденныеСтрокиТоваров Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТоваров, Строка, ЗаполняемыеРеквизиты);
		КонецЦикла;
		
		Для Каждого СтрокаУслуг Из НайденныеСтрокиУслуг Цикл
			ЗаполнитьЗначенияСвойств(СтрокаУслуг, Строка, ЗаполняемыеРеквизиты);
		КонецЦикла;
		
	КонецЦикла;
	
	ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, ТабТовары, Истина, Ложь);
	
	ДанныеXDTO.Вставить("Товары", ТабТовары);
	ДанныеXDTO.Вставить("Покупатели", ТабПокупатели);
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
КонецПроцедуры
