Процедура ПКО_Документ_ПБДСРасчетыССотрудниками_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если СокрЛП(ДанныеИБ.НомерВходящегоДокумента) = "-" Тогда
		// Символ "-" проставляем искусственно, если из БП загружен документ с пустым номером.
		ДанныеXDTO.НомерВходящегоДокумента = "";
	КонецЕсли;
	
	ВыгрузитьПодразделениеИзРеквизитаДокумента(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, "БанковскийСчет");
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Истина);
	
	Если ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника Тогда
		ВидРасчетов = "Подотчет";
	Иначе
		ВидРасчетов = "Займы";
	КонецЕсли;
	ДанныеXDTO.Вставить("ВидРасчетов", ВидРасчетов);
	
	// Расшифровка платежа
	ТабРП = Новый ТаблицаЗначений;
	ТабРП.Колонки.Добавить("СтатьяДДС");
	ТабРП.Колонки.Добавить("Сумма");
	Если ДанныеИБ.РасшифровкаПлатежа.Количество() > 0 Тогда
		Для Каждого СтрокаТЧ Из ДанныеИБ.РасшифровкаПлатежа Цикл
			СтрокаРП = ТабРП.Добавить();
			СтрокаРП.Сумма = СтрокаТЧ.Сумма;
			СтрокаРП.СтатьяДДС = СтрокаТЧ.СтатьяДвиженияДенежныхСредств;
		КонецЦикла;
	Иначе
		СтрокаРП = ТабРП.Добавить();
		СтрокаРП.Сумма = ДанныеИБ.СуммаДокумента;
		СтрокаРП.СтатьяДДС = ДанныеИБ.СтатьяДвиженияДенежныхСредств;
	КонецЕсли;	
	ДанныеXDTO.Вставить("РасшифровкаПлатежа", ТабРП);
КонецПроцедуры
