Процедура ПКО_Документ_ВЗ_ОрганизацияДебитор_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	ЭтоВзаимозачетДвухОрганизаций = ДанныеИБ.ДополнительныеСвойства.Свойство("ВзаимозачетСУчастиемДвухОрганизаций");
		
	Если ЭтоВзаимозачетДвухОрганизаций Тогда
		СсылкаОрганизация = ДанныеИБ.ОрганизацияКредитор;
		СсылкаДебитор     = ДанныеИБ.Организация;
		СсылкаКредитор    = ДанныеИБ.КонтрагентКредитор;
		ВидОперации       = "ПроведениеВзаимозачета";
	Иначе
		СсылкаОрганизация = ДанныеИБ.КонтрагентДебитор;
		СсылкаДебитор     = ДанныеИБ.КонтрагентКредитор;
		СсылкаКредитор    = ДанныеИБ.Организация;
		ВидОперации       = "ПереносЗадолженности";
	КонецЕсли;
	
	Если СтекВыгрузки.Количество() > 1 Тогда
		ДанныеXDTO.Вставить("Номер", Лев(ДанныеИБ.Номер, 5) + "ВД" + Сред(ДанныеИБ.Номер, 8));
		ДанныеXDTO.Вставить("Организация", СсылкаОрганизация);
		Возврат;
	КонецЕсли;
	
	ДанныеXDTO.Вставить("ВидОперации", ВидОперации);
	
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", Лев(ДанныеИБ.Номер, 5) + "ВД" + Сред(ДанныеИБ.Номер, 8));
	ДанныеXDTO.КлючевыеСвойства.Вставить("Организация", СсылкаОрганизация);
	
	ВалютаРеглУчета = ВалютаРегламентированногоУчета(КомпонентыОбмена);
	ДанныеXDTO.Вставить("Валюта", ВалютаРеглУчета);
	ВыгрузитьКурсИКратностьДокумента(ДанныеXDTO, ВалютаРеглУчета, ДанныеИБ.Дата);
	
	СуммаДебиторскойЗадолженности  = ДанныеИБ.ДебиторскаяЗадолженность.Итог("СуммаРегл");
	СуммаКредиторскойЗадолженности = ДанныеИБ.КредиторскаяЗадолженность.Итог("СуммаРегл");
	ДанныеXDTO.Вставить("СуммаДебиторскойЗадолженности", СуммаДебиторскойЗадолженности);
	ДанныеXDTO.Вставить("СуммаКредиторскойЗадолженности", СуммаКредиторскойЗадолженности);
	
	ВыгрузитьПодразделение(ДанныеИБ, ДанныеXDTO);
	
	Если ТипЗнч(СсылкаКредитор) = Тип("СправочникСсылка.Организации") Тогда
		СсылкаНаКонтрагента = КонтрагентИзОрганизации(СсылкаКредитор, КомпонентыОбмена);
		ДанныеXDTO.Вставить("КонтрагентКредитор", СсылкаНаКонтрагента);
	Иначе
		ДанныеXDTO.Вставить("КонтрагентКредитор", СсылкаКредитор);
	КонецЕсли;
	
	Если ТипЗнч(СсылкаДебитор) = Тип("СправочникСсылка.Организации") Тогда
		СсылкаНаКонтрагента = КонтрагентИзОрганизации(СсылкаДебитор, КомпонентыОбмена);
		ДанныеXDTO.Вставить("КонтрагентДебитор", СсылкаНаКонтрагента);
	Иначе
		ДанныеXDTO.Вставить("КонтрагентДебитор", СсылкаДебитор);
	КонецЕсли;
	
	КредиторскаяЗадолженность = ВыгрузитьТаблицуЗадолженности(
		?(ЭтоВзаимозачетДвухОрганизаций, "КредиторскаяЗадолженность", "ДебиторскаяЗадолженность"),
		ДанныеИБ.Ссылка,
		ДанныеXDTO.КонтрагентКредитор,
		СсылкаОрганизация,
		?(ЭтоВзаимозачетДвухОрганизаций, Неопределено, СсылкаКредитор),
		КомпонентыОбмена);
	ДанныеXDTO.Вставить("КредиторскаяЗадолженность", КредиторскаяЗадолженность);
	
	ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
	ПараметрыПоУмолчанию.Организация              = СсылкаОрганизация;
	ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = ВалютаРеглУчета;
	ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = Ложь;
	ПараметрыПоУмолчанию.ВидДоговора              = "Прочее"; 
	ПараметрыПоУмолчанию.Контрагент               = ДанныеXDTO.КонтрагентДебитор;
	
	Если ЭтоВзаимозачетДвухОрганизаций Тогда
		ПараметрыПоУмолчанию.ВидДоговора = ВидДоговораПоОбъектуРасчетовИнтеркампани(СсылкаОрганизация,
			ДанныеИБ.ОбъектРасчетовИнтеркампани, "СПокупателем");
	КонецЕсли;
	
	ДебиторскаяЗадолженность = Новый ТаблицаЗначений;
	ДебиторскаяЗадолженность.Колонки.Добавить("Договор");
	ДебиторскаяЗадолженность.Колонки.Добавить("КратностьВзаиморасчетов");
	ДебиторскаяЗадолженность.Колонки.Добавить("КурсВзаиморасчетов");
	ДебиторскаяЗадолженность.Колонки.Добавить("Сумма");
	ДебиторскаяЗадолженность.Колонки.Добавить("СуммаВзаиморасчетов");
	
	ДебиторскаяЗадолженностьСтрока = ДебиторскаяЗадолженность.Добавить();
	ДебиторскаяЗадолженностьСтрока.КратностьВзаиморасчетов = 1;
	ДебиторскаяЗадолженностьСтрока.КурсВзаиморасчетов = 1;
	ДебиторскаяЗадолженностьСтрока.Сумма = СуммаДебиторскойЗадолженности;
	ДебиторскаяЗадолженностьСтрока.СуммаВзаиморасчетов = СуммаДебиторскойЗадолженности;
	ДебиторскаяЗадолженностьСтрока.Договор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена);
	ДанныеXDTO.Вставить("ДебиторскаяЗадолженность", ДебиторскаяЗадолженность);
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
КонецПроцедуры
