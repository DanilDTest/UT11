Процедура ПКО_Документ_РеализацияТоваровУслуг_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	ВидОперацииСтрокой = "";
	
	Если Не ЗначениеЗаполнено(ДанныеИБ.ХозяйственнаяОперация) Тогда
		ВидОперацииСтрокой = "РеализацияКлиенту";
	ИначеЕсли ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности Тогда
		
		Если ДанныеИБ.Статус = Перечисления.СтатусыРеализацийТоваровУслуг.ВПути Тогда
			ВидОперацииСтрокой = "ОтгрузкаБезПереходаПравСобственности_ВПути";
		Иначе
			ВидОперацииСтрокой = "ОтгрузкаБезПереходаПравСобственности_Реализовано"; 
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВидОперацииСтрокой <> "" Тогда
		ДанныеXDTO.Вставить("ВидОперации", ВидОперацииСтрокой);
	КонецЕсли;
	
	СкладДляВыгрузки = СкладДляВыгрузки(ДанныеИБ.Склад, КомпонентыОбмена.ПараметрыКонвертации, Истина);
	ДанныеXDTO.Вставить("Склад", СкладДляВыгрузки);
	
	ДанныеXDTO.Вставить("ГлавныйБухгалтер", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.ГлавныйБухгалтер, "ФизическоеЛицо"));
	ДанныеXDTO.Вставить("Руководитель",     ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИБ.Руководитель, "ФизическоеЛицо"));
	
	Если ЗначениеЗаполнено(ДанныеИБ.ЗаказКлиента) И ТипЗнч(ДанныеИБ.ЗаказКлиента) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		ДанныеXDTO.Вставить("Заказ", ДанныеИБ.ЗаказКлиента);
	Иначе
		ДанныеXDTO.Вставить("Заказ", Неопределено);
	КонецЕсли;
	
	ВыгрузитьПодразделениеИзРеквизитаДокумента(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, "Склад");
	ВыгрузитьНалогообложениеНДС(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, Ложь);
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	// Дополнительные свойства для договора
	Если ЗначениеЗаполнено(ДанныеИБ.Договор) Тогда
		ДанныеXDTO.Вставить("Договор", ДанныеИБ.Договор);
	Иначе
		
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ЗаполнитьЗначенияСвойств(ПараметрыПоУмолчанию, ДанныеИБ);
		
		ПараметрыПоУмолчанию.ВидДоговора =
			?(ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию, "СКомиссионером", "СПокупателем");
			
		Если ЗначениеЗаполнено(ДанныеИБ.Соглашение) Тогда
			РасчетыВУсловныхЕдиницах = ВзаиморасчетыСервер.РасчетыВУсловныхЕдиницах(ДанныеИБ.Соглашение);
		Иначе
			РасчетыВУсловныхЕдиницах = (ДанныеИБ.Валюта = ВалютаРеглУчета И ДанныеИБ.Валюта <> ДанныеИБ.ВалютаВзаиморасчетов);
		КонецЕсли;
		
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = РасчетыВУсловныхЕдиницах;
		
		Заказ = Новый Структура("Заказ, Соглашение, Сделка", ДанныеИБ.ЗаказКлиента, ДанныеИБ.Соглашение, ДанныеИБ.Сделка);
		Договор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена, Заказ, ДанныеИБ);
		
		ДанныеXDTO.Вставить("Договор", Договор);
		
	КонецЕсли;
	
	// Данные шапки документа необходимы для вычисления
	// курса и кратности взаиморасчетов.
	ШапкаДокумента =
		"ВЫБРАТЬ
		|	ДанныеШапкиДокумента.Валюта КАК Валюта,
		|	ДанныеШапкиДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	ДанныеШапкиДокумента.Курс КАК КурсВзаиморасчетов,
		|	ДанныеШапкиДокумента.Кратность КАК КратностьВзаиморасчетов
		|ПОМЕСТИТЬ ДанныеШапкиДокумента
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК ДанныеШапкиДокумента
		|ГДЕ
		|	ДанныеШапкиДокумента.Ссылка = &Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	Валюта";
		
	Если ДанныеИБ.Валюта = ВалютаРеглУчета
		Или ДанныеИБ.ВалютаВзаиморасчетов = ВалютаРеглУчета Тогда
		
		ДанныеОперации =
			"ВЫБРАТЬ
			|	ДанныеШапкиДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
			|	ДанныеШапкиДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов
			|ИЗ
			|	ДанныеШапкиДокумента КАК ДанныеШапкиДокумента";
		
	Иначе
		
		ДанныеОперации =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(КурсВалютыДокумента.Курс, 1) КАК КурсВзаиморасчетов,
			|	ЕСТЬNULL(КурсВалютыДокумента.Кратность, 1) КАК КратностьВзаиморасчетов
			|ИЗ
			|	ДанныеШапкиДокумента КАК ДанныеШапкиДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
			|				&Дата,
			|				Валюта В
			|					(ВЫБРАТЬ
			|						Док.Валюта
			|					ИЗ
			|						ДанныеШапкиДокумента КАК Док)) КАК КурсВалютыДокумента
			|		ПО ДанныеШапкиДокумента.Валюта = КурсВалютыДокумента.Валюта";
		
	КонецЕсли;
	
	ТоварыИУслугиДокумента =
		"ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА Товары.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ВЫБОР
		|					КОГДА ХарактеристикаСпр.НаименованиеПолное = """"
		|						ТОГДА ХарактеристикаСпр.Наименование
		|					ИНАЧЕ ХарактеристикаСпр.НаименованиеПолное
		|				КОНЕЦ
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ХарактеристикаНаименование,
		|	ВЫБОР
		|		КОГДА НоменклатураСпр.НаименованиеПолное = """"
		|			ТОГДА НоменклатураСпр.Наименование
		|		ИНАЧЕ НоменклатураСпр.НаименованиеПолное
		|	КОНЕЦ КАК НоменклатураНаименование,
		|	Товары.Количество КАК Количество,
		|	Товары.Цена КАК Цена,
		|	Товары.Сумма КАК Сумма,
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	Товары.СуммаНДС КАК СуммаНДС,
		|	Товары.Номенклатура.ТипНоменклатуры КАК НоменклатураТипНоменклатуры,
		|	Товары.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
		|		ПО (НоменклатураСпр.Ссылка = Товары.Номенклатура)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикаСпр
		|		ПО (ХарактеристикаСпр.Ссылка = Товары.Характеристика)
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Серия КАК Серия,
		|	ВидыЗапасов.Упаковка КАК Упаковка,
		|	ВидыЗапасов.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ВидыЗапасов.Количество КАК Количество,
		|	ВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
		|	ВидыЗапасов.СуммаНДС КАК СуммаНДС,
		|	ВидыЗапасов.НомерГТД.Код КАК НомерГТД,
		|	ВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВидыЗапасов.Ссылка.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
		|				ТОГДА ВидыЗапасов.СуммаСНДС / ВидыЗапасов.Количество
		|			ИНАЧЕ (ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) / ВидыЗапасов.Количество
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	ВЫБОР
		|		КОГДА ВидыЗапасов.Ссылка.ЦенаВключаетНДС
		|			ТОГДА ВидыЗапасов.СуммаСНДС
		|		ИНАЧЕ ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС
		|	КОНЕЦ КАК Сумма,
		|	ВЫБОР
		|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|			ТОГДА ВЫРАЗИТЬ(""КомиссионныеТовары"" КАК СТРОКА(18))
		|		ИНАЧЕ ВЫРАЗИТЬ(""СобственныеТовары"" КАК СТРОКА(18))
		|	КОНЕЦ КАК ТипЗапасов
		|ПОМЕСТИТЬ ВидыЗапасов
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК ВидыЗапасов
		|ГДЕ
		|	ВидыЗапасов.Ссылка = &Ссылка
		|	И ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|	И ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.ХарактеристикаНаименование = """"
		|			ТОГДА ТаблицаТовары.НоменклатураНаименование
		|		ИНАЧЕ ТаблицаТовары.НоменклатураНаименование + "" ("" + ТаблицаТовары.ХарактеристикаНаименование + "")""
		|	КОНЕЦ КАК Содержание,
		|	ТаблицаТовары.Номенклатура.Принципал КАК ПринципалСсылка,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОрганизациейПоАгентскойСхеме)
		|				ИЛИ ТаблицаТовары.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Партнером)
		|			ТОГДА ""Агентские""
		|		ИНАЧЕ ""Собственные""
		|	КОНЕЦ КАК ТипУслуги,
		|	ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.Цена КАК Цена,
		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТовары.Сумма КАК Сумма,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДС
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|ГДЕ
		|	(ТаблицаТовары.НоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|			ИЛИ ТаблицаТовары.НоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ТаблицыТоварыПоМаксСтроке
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	&ТекстЗапросаХарактеристика,
		|	&ТекстЗапросаСерия,
		|	&ТекстЗапросаУпаковка,
		|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
		|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
		|	ВложенныйЗапрос.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ВложенныйЗапрос.ТипЗапасов КАК ТипЗапасов,
		|	ВложенныйЗапрос.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	ВложенныйЗапрос.Цена КАК Цена,
		|	ВложенныйЗапрос.Количество КАК Количество,
		|	ВложенныйЗапрос.Сумма КАК Сумма,
		|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВидыЗапасов.Номенклатура КАК Номенклатура,
		|		ВидыЗапасов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|		ВидыЗапасов.Характеристика КАК Характеристика,
		|		ВидыЗапасов.Серия КАК Серия,
		|		ВидыЗапасов.Упаковка КАК Упаковка,
		|		ВидыЗапасов.КоличествоУпаковок КАК КоличествоУпаковок,
		|		ВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
		|		ВидыЗапасов.НомерГТД КАК НомерГТД,
		|		ВидыЗапасов.СтранаПроисхождения КАК СтранаПроисхождения,
		|		ВЫБОР
		|			КОГДА ВидыЗапасов.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|					И ВидыЗапасов.ВернутьМногооборотнуюТару
		|				ТОГДА ""ВозвратнаяТара""
		|			ИНАЧЕ ВидыЗапасов.ТипЗапасов
		|		КОНЕЦ КАК ТипЗапасов,
		|		ЕСТЬNULL(ПорядокСтрокТаблицыТовары.НомерСтроки, 0) КАК НомерСтрокиДокумента,
		|		ВЫРАЗИТЬ(ВидыЗапасов.Цена КАК ЧИСЛО(15, 2)) КАК Цена,
		|		СУММА(ВидыЗапасов.Количество) КАК Количество,
		|		СУММА(ВЫРАЗИТЬ(ВидыЗапасов.Сумма КАК ЧИСЛО(15, 2))) КАК Сумма,
		|		СУММА(ВидыЗапасов.СуммаНДС) КАК СуммаНДС
		|	ИЗ
		|		ВидыЗапасов КАК ВидыЗапасов
		|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицыТоварыПоМаксСтроке КАК ПорядокСтрокТаблицыТовары
		|			ПО ВидыЗапасов.Номенклатура = ПорядокСтрокТаблицыТовары.Номенклатура
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВидыЗапасов.Номенклатура,
		|		ВидыЗапасов.Характеристика,
		|		ВидыЗапасов.ЕдиницаИзмерения,
		|		ВидыЗапасов.СтавкаНДС,
		|		ВидыЗапасов.Цена,
		|		ВидыЗапасов.НомерГТД,
		|		ВидыЗапасов.СтранаПроисхождения,
		|		ВЫБОР
		|			КОГДА ВидыЗапасов.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|					И ВидыЗапасов.ВернутьМногооборотнуюТару
		|				ТОГДА ""ВозвратнаяТара""
		|			ИНАЧЕ ВидыЗапасов.ТипЗапасов
		|		КОНЕЦ,
		|		ЕСТЬNULL(ПорядокСтрокТаблицыТовары.НомерСтроки, 0),
		|		ВидыЗапасов.Серия,
		|		ВидыЗапасов.Упаковка,
		|		ВидыЗапасов.КоличествоУпаковок) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиДокумента";
	
	ТоварыИУслугиДокумента = СтрЗаменить(ТоварыИУслугиДокумента, "&ТекстЗапросаХарактеристика",
		ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "ВложенныйЗапрос"));
		
	ТоварыИУслугиДокумента = СтрЗаменить(ТоварыИУслугиДокумента, "&ТекстЗапросаУпаковка",
		ПолучитьТекстЗапросаУпаковки(КомпонентыОбмена, "ВложенныйЗапрос"));
		
	ТоварыИУслугиДокумента = СтрЗаменить(ТоварыИУслугиДокумента, "&ТекстЗапросаСерия",
		ПолучитьТекстЗапросаСерии(КомпонентыОбмена, "ВложенныйЗапрос"));
		
		
	#Область МаркировкиУпаковки
	
	ТекстЗапросаМаркировкиУпаковки =
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугШтрихкодыУпаковок.НомерСтроки КАК НомерСтрокиДокумента,
		|	РеализацияТоваровУслугШтрихкодыУпаковок.ШтрихкодУпаковки КАК ШтрихкодУпаковки,
		|	ШтрихкодыУпаковокТоваров.ТипУпаковки КАК ТипУпаковки,
		|	ШтрихкодыУпаковокТоваров.Номенклатура КАК Номенклатура,
		|	ШтрихкодыУпаковокТоваров.Характеристика КАК Характеристика,
		|	ШтрихкодыУпаковокТоваров.Серия КАК Серия,
		|	ШтрихкодыУпаковокТоваров.Упаковка КАК Упаковка,
		|	ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода КАК ЗначениеШтрихкода
		|ПОМЕСТИТЬ втШтрихкодыУпаковок
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.ШтрихкодыУпаковок КАК РеализацияТоваровУслугШтрихкодыУпаковок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
		|		ПО РеализацияТоваровУслугШтрихкодыУпаковок.ШтрихкодУпаковки = ШтрихкодыУпаковокТоваров.Ссылка
		|ГДЕ
		|	РеализацияТоваровУслугШтрихкодыУпаковок.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втШтрихкодыУпаковок.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	втШтрихкодыУпаковок.Номенклатура КАК Номенклатура,
		|	&ТекстЗапросаХарактеристикаАкцизныеМарки,
		|	&ТекстЗапросаСерияАкцизныеМарки,
		|	&ТекстЗапросаУпаковкаАкцизныеМарки,
		|	&ТипАкцизнойМарки,
		|	втШтрихкодыУпаковок.ЗначениеШтрихкода КАК НомерАкцизнойМарки
		|ИЗ
		|	втШтрихкодыУпаковок КАК втШтрихкодыУпаковок
		|ГДЕ
		|	втШтрихкодыУпаковок.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втШтрихкодыУпаковок.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	втШтрихкодыУпаковок.ШтрихкодУпаковки КАК МаркировкаУпаковки
		|ИЗ
		|	втШтрихкодыУпаковок КАК втШтрихкодыУпаковок
		|ГДЕ
		|	НЕ втШтрихкодыУпаковок.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)
		|	И НЕ втШтрихкодыУпаковок.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МультитоварнаяУпаковка)";
	
		ТекстЗапросаМаркировкиУпаковки = СтрЗаменить(ТекстЗапросаМаркировкиУпаковки, "&ТекстЗапросаХарактеристикаАкцизныеМарки",
			ПолучитьТекстЗапросаХарактеристики(КомпонентыОбмена, "втШтрихкодыУпаковок"));
			
		ТекстЗапросаМаркировкиУпаковки = СтрЗаменить(ТекстЗапросаМаркировкиУпаковки, "&ТекстЗапросаСерияАкцизныеМарки",
			ПолучитьТекстЗапросаСерии(КомпонентыОбмена, "втШтрихкодыУпаковок"));
			
		ТекстЗапросаМаркировкиУпаковки = СтрЗаменить(ТекстЗапросаМаркировкиУпаковки, "&ТекстЗапросаУпаковкаАкцизныеМарки",
			ПолучитьТекстЗапросаУпаковки(КомпонентыОбмена, "втШтрихкодыУпаковок", Ложь));
			
		ТекстЗапросаМаркировкиУпаковки = СтрЗаменить(ТекстЗапросаМаркировкиУпаковки, "&ТипАкцизнойМарки",
			ПолучитьТекстЗапросаТипАкцизнойМарки(КомпонентыОбмена, "втШтрихкодыУпаковок"));	
			
	#КонецОбласти
	
	Запрос = Новый Запрос;
	Запрос.Текст = ШапкаДокумента + ОбщегоНазначения.РазделительПакетаЗапросов() 
		+ ДанныеОперации + ОбщегоНазначения.РазделительПакетаЗапросов() 
		+ ТоварыИУслугиДокумента + ОбщегоНазначения.РазделительПакетаЗапросов()
		+ ТекстЗапросаМаркировкиУпаковки;
		
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Запрос.УстановитьПараметр("Дата",   ДанныеИБ.Дата);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеОперации = РезультатыЗапроса[1].Выбрать();
	
	Если ДанныеОперации.Следующий() Тогда
		ДанныеXDTO.Вставить("КурсВзаиморасчетов",      ДанныеОперации.КурсВзаиморасчетов);
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", ДанныеОперации.КратностьВзаиморасчетов);
	КонецЕсли;
	
	ТабУслуги = РезультатыЗапроса[4].Выгрузить();
	ТабТовары = РезультатыЗапроса[6].Выгрузить();
	ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, ТабТовары);
	ТаблицаУслугЗаполнитьПринципала(КомпонентыОбмена, ТабУслуги);
	
	ДанныеXDTO.Вставить("Товары", ТабТовары);
	ДанныеXDTO.Вставить("Услуги", ТабУслуги);
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.7") Тогда
		АкцизныеМарки = РезультатыЗапроса[РезультатыЗапроса.Количество() - 2].Выгрузить();
		ЗаполнитьХарактеристикуУпаковкуВТЧ(КомпонентыОбмена, АкцизныеМарки);
		ДанныеXDTO.Вставить("АкцизныеМарки", АкцизныеМарки);
	КонецЕсли;
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.7") Тогда
		МаркировкиУпаковок = РезультатыЗапроса[РезультатыЗапроса.Количество() - 1].Выгрузить();
		ДанныеXDTO.Вставить("МаркировкиУпаковок", МаркировкиУпаковок);
	КонецЕсли;
КонецПроцедуры
