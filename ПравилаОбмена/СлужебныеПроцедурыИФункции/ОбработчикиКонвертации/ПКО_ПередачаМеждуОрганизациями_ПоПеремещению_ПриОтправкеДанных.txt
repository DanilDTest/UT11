Процедура ПКО_ПередачаМеждуОрганизациями_ПоПеремещению_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	ДатаДок  = ДанныеИБ.Дата;
	НомерДок = ДанныеИБ.Номер;
	
	ВалютаРеглУчета  = Константы.ВалютаРегламентированногоУчета.Получить();
		                                           
	ДокументОснованиеТип = ТипЗнч(ДанныеИБ.RM_ДокументОснование); 
	ДокументОснованиеИмяПКО = "";
	Если ДокументОснованиеТип = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда	                                           
		  
		ДокументОснованиеИмяПКО = "Документ_ПеремещениеТоваров_Отправка";  
		ДанныеПеремещения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеИБ.RM_ДокументОснование, "RM_ГосНомерАТС, RM_ГосНомерПрицепа,RM_Договор"); 
		
		ДанныеXDTO.Вставить("RM_ГосНомерАТС", ДанныеПеремещения.RM_ГосНомерАТС); 
		ДанныеXDTO.Вставить("RM_ГосНомерПрицепа", ДанныеПеремещения.RM_ГосНомерПрицепа); 
		ДанныеXDTO.Вставить("Договор", Новый Структура("ИмяПКО, Значение", "Справочник_ДоговорыКонтрагентов", ДанныеПеремещения.RM_Договор));   
	Иначе
		ДокументОснованиеИмяПКО = "Документ_КорректировкаПоАктуРасхожденийПП_Отправка";
	КонецЕсли;              
	
	Если ЗначениеЗаполнено(ДанныеИБ.RM_ДокументОснование) И НЕ ПустаяСтрока(ДокументОснованиеИмяПКО) Тогда
		ДанныеXDTO.Вставить("ДокументОснование", Новый Структура("ИмяПКО, Значение", ДокументОснованиеИмяПКО, ДанныеИБ.RM_ДокументОснование)); 
	КонецЕсли;
	
	
	СкладДляВыгрузки = СкладДляВыгрузки(ДанныеИБ.Склад, КомпонентыОбмена.ПараметрыКонвертации);	
	ДанныеXDTO.Вставить("Склад", СкладДляВыгрузки);
	ДанныеXDTO.Вставить("СкладПолучатель", ДанныеИБ.RM_СкладПолучатель);       
	ДанныеXDTO.Вставить("СодержитМаркируемеТовары", ДанныеИБ.RM_СодержитМаркируемыеТовары);
	
	ДанныеСФ = ДанныеСчетФактураВыданныйПоДокументуОснованию(ДанныеИБ.Ссылка);
	НомерСФПредставление = ДанныеСФ.ПредставлениеНомера;	
	ДанныеXDTO.КлючевыеСвойства.Вставить("НомерВходящегоДокумента", НомерСФПредставление); 
	ДанныеXDTO.КлючевыеСвойства.Вставить("ДатаВходящегоДокумента", ДанныеСФ.Дата); 
	
	НомерВхДокумента = НомерСФПредставление;
	КонтрагентСсылка = ДанныеИБ.Контрагент;             
	                      
	Если СтекВыгрузки.Количество() > 1 Тогда
		ДанныеXDTO.Вставить("Дата",  ДатаДок);
		ДанныеXDTO.Вставить("Номер", НомерДок);
	
		Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) >= ВерсияФорматаЧислом("1.6") Тогда 
			ДанныеXDTO.Вставить("Контрагент", КонтрагентСсылка);
			ДанныеXDTO.Вставить("НомерВходящегоДокумента", НомерВхДокумента);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	ДанныеXDTO.КлючевыеСвойства.Вставить("Дата",  ДатаДок);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДок); 
	ДанныеXDTO.КлючевыеСвойства.Вставить("Контрагент", КонтрагентСсылка); 
	
		
	ВыгрузитьПодразделениеИзРеквизитаДокумента(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO, "Склад");
	ВыгрузитьНалогообложениеНДС(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
	
	ДанныеXDTO.Вставить("ВидОперации",          "ПокупкаУПоставщика");
	ДанныеXDTO.Вставить("ВалютаВзаиморасчетов", ДанныеИБ.ВалютаВзаиморасчетов);
		
	Если ДанныеИБ.Валюта = ВалютаРеглУчета
		Или ДанныеИБ.ВалютаВзаиморасчетов = ВалютаРеглУчета Тогда
			
		ДанныеXDTO.Вставить("КурсВзаиморасчетов",      ДанныеИБ.Курс);
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", ДанныеИБ.Кратность);
			
	Иначе
		ВыгрузитьКурсИКратностьВзаиморасчетов(ДанныеXDTO, ДанныеИБ.Валюта, ДанныеИБ.Дата);
	КонецЕсли;
	
	// Табличные части     
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Товары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
		|	Товары.Количество КАК Количество,
		|	Товары.Цена КАК Цена,
		|	Товары.Сумма КАК Сумма,
		|	Товары.СтавкаНДС КАК СтавкаНДС,
		|	Товары.СуммаНДС КАК СуммаНДС,
		|	Товары.НомерГТД.Код КАК НомерГТД,
		|	Товары.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	Товары.СтатьяРасходов КАК СтатьяРасходов,
		|	Товары.СуммаСНДС КАК СуммаСНДС,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Серия КАК Серия,
		|	ВЫБОР
		|		КОГДА Товары.Упаковка.Владелец = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|		ИНАЧЕ Товары.Упаковка
		|	КОНЕЦ КАК Упаковка,
		|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	Товары.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПередачаТоваровМеждуОрганизациямиШтрихкодыУпаковок.ШтрихкодУпаковки КАК ШтрихкодУпаковки,
		|	ПередачаТоваровМеждуОрганизациямиШтрихкодыУпаковок.ШтрихкодУпаковки.ЗначениеШтрихкода КАК НомерАкцизнойМарки
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями.ШтрихкодыУпаковок КАК ПередачаТоваровМеждуОрганизациямиШтрихкодыУпаковок
		|ГДЕ
		|	ПередачаТоваровМеждуОрганизациямиШтрихкодыУпаковок.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПередачаТоваровМеждуОрганизациямиВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ПередачаТоваровМеждуОрганизациямиВидыЗапасов.НомерГТД.Код КАК НомерГТД,
		|	ПередачаТоваровМеждуОрганизациямиВидыЗапасов.Количество КАК Количество,
		|	ПередачаТоваровМеждуОрганизациямиВидыЗапасов.СуммаСНДС КАК Сумма,
		|	ПередачаТоваровМеждуОрганизациямиВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ПередачаТоваровМеждуОрганизациямиВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ПередачаТоваровМеждуОрганизациямиВидыЗапасов
		|ГДЕ
		|	ПередачаТоваровМеждуОрганизациямиВидыЗапасов.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиДокумента";
	
	
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();  
	
	ТаблицаТовары     = РезультатыЗапроса[0].Выгрузить();
	
	ТаблицаТовары.Колонки.Добавить("ТипЗапасов");
	Если ДанныеXDTO.ВидОперации = "ПриемНаКомиссию" Тогда
		ТаблицаТовары.ЗаполнитьЗначения("КомиссионныеТовары", "ТипЗапасов");
	Иначе
		ТаблицаТовары.ЗаполнитьЗначения("СобственныеТовары", "ТипЗапасов");
	КонецЕсли;
	
	ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	
	ТаблицаКМ = РезультатыЗапроса[1].Выгрузить();
	ДанныеXDTO.Вставить("АкцизныеМарки", ТаблицаКМ);     
	
	ТаблицаВидыЗапасов = РезультатыЗапроса[2].Выгрузить();
	ДанныеXDTO.Вставить("ВидыЗапасов", ТаблицаВидыЗапасов);     
	
	ВыгрузитьДополнительныеРеквизитыИСведения(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);
КонецПроцедуры
