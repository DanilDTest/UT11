Процедура ПКО_Документ_РасходныйОрдерНаТовары_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	Если ДанныеXDTO.Свойство("ДатаОтгрузки") Тогда
		ПолученныеДанные.ДатаОтгрузки = ДанныеXDTO.ДатаОтгрузки; 
	КонецЕсли;     
	
	
	Если ДанныеXDTO.Свойство("СкладПолучатель") Тогда  
	     
	    Значение = ДанныеXDTO.СкладПолучатель;    
	    ТипЗначения = ""; 
	   	Если ТипЗнч(Значение) = Тип("Структура")
			И Значение.Свойство("ТипЗначения", ТипЗначения) Тогда  
			
			ЗаписьЖурналаРегистрации("ЗагрузкаНабора", УровеньЖурналаРегистрации.Примечание,,, "Загрузка РКО " + ТипЗначения); 
			Если ТипЗначения = "Склад" Тогда
				ИмяПКО = "Справочник_Склады_Получение";
			ИначеЕсли ТипЗначения = "ФизическиеЛица" Тогда 
				ИмяПКО = "Справочник_ФизическиеЛица_Получение";		
			ИначеЕсли ТипЗначения = "Партнер" Тогда
			    ИмяПКО = "Справочник_Партнер_Получение";
			КонецЕсли;
			             
			Если НЕ ПустаяСтрока(ИмяПКО) Тогда						
					Инструкция = Новый Структура("Значение, ИмяПКО", ДанныеXDTO.СкладПолучатель, ИмяПКО);
					ПолученныеДанные.ДополнительныеСвойства.Вставить("Получатель", Инструкция);
	   		КонецЕсли;		       
	    КонецЕсли;      
	    
	КонецЕсли;
	
	
	#Область Товары
	Если ДанныеXDTO.Свойство("Товары") Тогда
	
	ПравилаЗаполнения = Новый Соответствие;
	ПравилаЗаполнения.Вставить("Номенклатура", "Номенклатура");
	ПравилаЗаполнения.Вставить("Количество",   "Количество");
	ПравилаЗаполнения.Вставить("СтатусУказанияСерий",   "СтатусУказанияСерий");
	
	Если ЗначениеФО("ИспользоватьУпаковкиНоменклатуры", КомпонентыОбмена) Тогда
		ПравилаЗаполнения.Вставить("Упаковка",           "Упаковка");
		ПравилаЗаполнения.Вставить("КоличествоУпаковок", "КоличествоУпаковок");
	КонецЕсли;
	Если ЗначениеФО("ИспользоватьСерииНоменклатуры", КомпонентыОбмена) Тогда
		ПравилаЗаполнения.Вставить("Серия",              "Серия");
	КонецЕсли;
	
	МассивСтрокТовары = Новый Массив;
	Для Каждого Строка Из ДанныеXDTO.Товары Цикл
		СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
		Если НЕ (СтруктураДанныхСтроки.Свойство("КоличествоУпаковок") И СтруктураДанныхСтроки.КоличествоУпаковок <> 0) Тогда
			СтруктураДанныхСтроки.Вставить("КоличествоУпаковок", СтруктураДанныхСтроки.Количество);
		КонецЕсли;
		
		СтруктураДанныхСтроки.Вставить("Действие", Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить);        
		
			
		МассивСтрокТовары.Добавить(СтруктураДанныхСтроки);
	КонецЦикла;
	ПолученныеДанные.ДополнительныеСвойства.Вставить("ОтгружаемыеТовары", МассивСтрокТовары);
	
	ПравилаЗаполнения.Вставить("Распоряжение",   "Распоряжение");
	
	МассивСтрокТоварыПоРаспоряжениям = Новый Массив;
	Для Каждого Строка Из ДанныеXDTO.ТоварыПоРаспоряжениям Цикл
		СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
		
			
		Если ЗначениеЗаполнено(Строка.Распоряжение) 
			И ТипЗнч(Строка.Распоряжение) = Тип("Структура") И Строка.Распоряжение.Свойство("Ссылка") Тогда
				
			ИмяЗначения = Строка.Распоряжение.Ссылка.ТипЗначенияXDTO.Имя; 
			ИмяПКО = "";
				
			Если ИмяЗначения = "ДокументСсылка.ПеремещениеТоваров" Тогда
				ИмяПКО = "Документ_ПеремещениеТоваров_Получение";
			ИначеЕсли ИмяЗначения = "ДокументСсылка.ЗаказНаПеремещение" Тогда 
				ИмяПКО = "Документ_ЗаказНаПеремещение_Получение"; 
			ИначеЕсли ИмяЗначения = "ДокументСсылка.ЗаказКлиента" Тогда 
				ИмяПКО = "Документ_ЗаказКлиента_Получение";  
			ИначеЕсли ИмяЗначения = "ДокументСсылка.ЗаказНаСборку" Тогда 
				ИмяПКО = "Документ_ЗаказНаСборку_Получение";
			КонецЕсли;    
				
		    
			Если НЕ ИмяПКО = "" Тогда
				СтруктураДанныхСтроки.Распоряжение = Новый Структура("Значение, ИмяПКО", Строка.Распоряжение, ИмяПКО);	
			КонецЕсли;                                                   
				
		КонецЕсли;
	
				
		МассивСтрокТоварыПоРаспоряжениям.Добавить(СтруктураДанныхСтроки);
	КонецЦикла;
	ПолученныеДанные.ДополнительныеСвойства.Вставить("ТоварыПоРаспоряжениям", МассивСтрокТоварыПоРаспоряжениям);
	КонецЕсли;
	
	#КонецОбласти
	                 
	#Область ШтрихкодыУпаковок
		
		Если ДанныеXDTO.Свойство("АкцизныеМарки") Тогда
		ПравилаЗаполнения = Новый Соответствие;
		ПравилаЗаполнения.Вставить("ШтрихкодУпаковки", "ШтрихкодУпаковки");
		
		МассивСтрокШтрихкодыУпаковок = Новый Массив;
		Для Каждого Строка Из ДанныеXDTO.АкцизныеМарки Цикл
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			МассивСтрокШтрихкодыУпаковок.Добавить(СтруктураДанныхСтроки);
		КонецЦикла;
		ПолученныеДанные.ДополнительныеСвойства.Вставить("RM_ШтрихкодыУпаковок", МассивСтрокШтрихкодыУпаковок);
		КонецЕсли;
	#КонецОбласти   
	
	  
	#Область ПодарочныеСертификаты
	  
	МассивСтрокПодарочныеСертификаты = Новый Массив;
	
	Если ДанныеXDTO.Свойство("ПодарочныеСертификаты") Тогда
		ПравилаЗаполнения = Новый Соответствие;
		ПравилаЗаполнения.Вставить("ПодарочныйСертификат", "ПодарочныйСертификат");
	
		Для Каждого Строка Из ДанныеXDTO.ПодарочныеСертификаты Цикл
			СтруктураДанныхСтроки = ДанныеКоллекцииВВидеСтруктуры(Строка, ПравилаЗаполнения);
			МассивСтрокПодарочныеСертификаты.Добавить(СтруктураДанныхСтроки);
		КонецЦикла;
	КонецЕсли;     
	
	ПолученныеДанные.ДополнительныеСвойства.Вставить("RM_ПодарочныеСертификаты", МассивСтрокПодарочныеСертификаты);
	#КонецОбласти
КонецПроцедуры
