Процедура ПКО_Документ_СчетФактураПолученныйИКК_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	// Определение Входящего номера документа.
	ДанныеXDTO.КлючевыеСвойства.Вставить("НомерВходящегоДокумента", 
		ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеИБ.Номер, Ложь, Истина));
	
	ТипДокументаОснования = ТипЗнч(ДанныеИБ.ДокументОснование);
	
	// Определение Организации выгружаемого документа.
	РеквизитыДокументаОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ДанныеИБ.ДокументОснование, "Организация, Комиссионер");
		
	Если ДанныеИБ.Организация = РеквизитыДокументаОснования.Организация Тогда
		Организация = РеквизитыДокументаОснования.Комиссионер;
	Иначе
		Организация = РеквизитыДокументаОснования.Организация;
	КонецЕсли;
	
	ДанныеXDTO.КлючевыеСвойства.Вставить("Организация", Организация);
	
	// Определение Контрагента выгружаемого документа.
	Если ТипЗнч(ДанныеИБ.Комиссионер) = Тип("СправочникСсылка.Организации") Тогда
		КонтрагентСсылка = КонтрагентИзОрганизации(ДанныеИБ.Комиссионер, КомпонентыОбмена);
	Иначе
		КонтрагентСсылка = ДанныеИБ.Комиссионер;
	КонецЕсли;
	
	КонтрагентИнструкция = Новый Структура("Значение, ИмяПКО", КонтрагентСсылка, "Справочник_Контрагенты");
	ДанныеXDTO.КлючевыеСвойства.Вставить("Контрагент", КонтрагентИнструкция);
	
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	// Прочие реквизиты счет-фактуры
	ДанныеXDTO.Вставить("ВидСчетаФактуры", "НаПоступление");
	ДанныеXDTO.Вставить("ДатаПолучения",   КонецДня(ДанныеИБ.Дата));
	
	Если ДанныеИБ.Исправление
		И ЗначениеЗаполнено(ДанныеИБ.СчетФактураОснование)
		И ОбщегоНазначения.СсылкаСуществует(ДанныеИБ.СчетФактураОснование) Тогда
		
		РеквизитыСчетФактурыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеИБ.СчетФактураОснование, "Дата, Номер");
		ДанныеXDTO.Вставить("ДатаИсходногоДокумента",  РеквизитыСчетФактурыОснования.Дата);
		ДанныеXDTO.Вставить("НомерИсходногоДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
			РеквизитыСчетФактурыОснования.Номер, Ложь, Истина));
	Иначе
		ДанныеXDTO.Вставить("ДатаИсходногоДокумента",  Дата(1, 1, 1));
		ДанныеXDTO.Вставить("НомерИсходногоДокумента", 0);
	КонецЕсли;
	
	Если ДанныеИБ.ВыставленВЭлектронномВиде Тогда
		ДанныеXDTO.Вставить("СпособВыставления", "ВЭлектронномВиде");
	Иначе
		ДанныеXDTO.Вставить("СпособВыставления", "НаБумажномНосителе");
	КонецЕсли;
	
	// Определение Суммы счет-фактуры.
	СуммаДокумента    = 0;
	СуммаНДСДокумента = 0;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
		|	ОтчетПоКомиссииМеждуОрганизациямиТовары.СчетФактураВыставленныйКомиссионера КАК СчетФактура,
		|	ОтчетПоКомиссииМеждуОрганизациямиТовары.СуммаПродажиНДС КАК НДС,
		|	ОтчетПоКомиссииМеждуОрганизациямиТовары.СуммаПродажи КАК Сумма,
		|	СчетФактураКомиссионеруПокупатели.Покупатель КАК Покупатель
		|ИЗ
		|	Документ.СчетФактураКомиссионеру.Покупатели КАК СчетФактураКомиссионеруПокупатели
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК ОтчетПоКомиссииМеждуОрганизациямиТовары
		|		ПО СчетФактураКомиссионеруПокупатели.Ссылка.ДокументОснование = ОтчетПоКомиссииМеждуОрганизациямиТовары.Ссылка
		|			И СчетФактураКомиссионеруПокупатели.Покупатель = ОтчетПоКомиссииМеждуОрганизациямиТовары.Покупатель
		|			И СчетФактураКомиссионеруПокупатели.НомерСчетаФактуры = ОтчетПоКомиссииМеждуОрганизациямиТовары.СчетФактураВыставленныйКомиссионера.Номер
		|ГДЕ
		|	СчетФактураКомиссионеруПокупатели.Ссылка = &Ссылка
		|ИТОГИ
		|	СУММА(НДС),
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		СуммаДокумента    = Выборка.Сумма;
		СуммаНДСДокумента = Выборка.НДС;
	КонецЕсли;
		
	ДанныеXDTO.Вставить("Сумма",    СуммаДокумента);
	ДанныеXDTO.Вставить("СуммаНДС", СуммаНДСДокумента);
		
	// Определение таб. части покупатели.
	СчетаФактурыВыданныеПокупателям = Новый ТаблицаЗначений();
	СчетаФактурыВыданныеПокупателям.Колонки.Добавить("Покупатель");
	СчетаФактурыВыданныеПокупателям.Колонки.Добавить("Сумма");
	СчетаФактурыВыданныеПокупателям.Колонки.Добавить("СуммаНДС");
	СчетаФактурыВыданныеПокупателям.Колонки.Добавить("СчетФактураВыданный");
	
	ТаблицаСчетовФактур = РезультатЗапроса.Выгрузить();
	Если ТаблицаСчетовФактур.Количество() > 0 Тогда
		
		ТаблицаСчетовФактур.Удалить(ТаблицаСчетовФактур[0]);
		
		Для Каждого СтрокаТаблицы Из ТаблицаСчетовФактур Цикл
			НоваяСтрока = СчетаФактурыВыданныеПокупателям.Добавить();
			НоваяСтрока.СчетФактураВыданный = Новый Структура("Значение, ИмяПКО", СтрокаТаблицы.СчетФактура, "Документ_СчетФактураВыданный_Отправка");
			НоваяСтрока.СуммаНДС            = Новый Структура("Значение",         СтрокаТаблицы.НДС);
			НоваяСтрока.Сумма               = Новый Структура("Значение",         СтрокаТаблицы.Сумма);
			НоваяСтрока.Покупатель          = Новый Структура("Значение, ИмяПКО", СтрокаТаблицы.Покупатель, "Справочник_Контрагенты");
		КонецЦикла;
		
	КонецЕсли;
	
	ДанныеXDTO.Вставить("СчетаФактурыВыданныеПокупателям", СчетаФактурыВыданныеПокупателям);
	
	// Генерирование табличной части документов основания.
	ДокументыОснования = Новый ТаблицаЗначений();
	ДокументыОснования.Колонки.Добавить("ДокументОснование");
	
	ИмяПКО = "";
	Если ТипДокументаОснования = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями") Тогда
		Если ДанныеИБ.Организация = РеквизитыДокументаОснования.Организация Тогда
			ИмяПКО = "ОтчетКомиссияМеждуОрганизациями_Комитент_Отправка";
		Иначе
			ИмяПКО = "ОтчетКомиссияМеждуОрганизациями_Комиссионер_Отправ";
		КонецЕсли;
	КонецЕсли;
	
	СтрокаОснование = ДокументыОснования.Добавить();
	СтрокаОснование.ДокументОснование = Новый Структура("Значение, ИмяПКО", ДанныеИБ.ДокументОснование, ИмяПКО);
	
	ДанныеXDTO.Вставить("ДокументыОснования", ДокументыОснования);
КонецПроцедуры
