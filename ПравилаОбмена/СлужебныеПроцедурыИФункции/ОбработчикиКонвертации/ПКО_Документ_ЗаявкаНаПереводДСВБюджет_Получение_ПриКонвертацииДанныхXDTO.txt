Процедура ПКО_Документ_ЗаявкаНаПереводДСВБюджет_Получение_ПриКонвертацииДанныхXDTO(ДанныеXDTO, ПолученныеДанные, КомпонентыОбмена)
	ПолученныеДанные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет;
	ПолученныеДанные.ПриоритетОплаты = Справочники.ПриоритетыОплаты.ПолучитьПриоритетПоУмолчанию(Неопределено);
	
	ПолученныеДанные.Проведен = Истина;
	
	ПолученныеДанные.ФормаОплатыЗаявки = Перечисления.ФормыОплаты.Безналичная;
	ПолученныеДанные.ФормаОплатыНаличная = Ложь;
	ПолученныеДанные.ФормаОплатыБезналичная = Истина;
	ПолученныеДанные.ФормаОплатыПлатежнаяКарта = Ложь;
	
	ПолученныеДанные.ПеречислениеВБюджет = Истина;
	ПолученныеДанные.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж;
	ПолученныеДанные.ТипНалога = Перечисления.ТипыНалогов.НДФЛ;
	
	РасшифровкаПлатежаXDTO = Неопределено;
	Если ДанныеXDTO.Свойство("РасшифровкаПлатежа", РасшифровкаПлатежаXDTO)
		И ЗначениеЗаполнено(РасшифровкаПлатежаXDTO) Тогда
		
		МассивРасшифровкаПлатежа = Новый Массив;
		
		ПравилаЗаполнения = Новый Соответствие;
		ПравилаЗаполнения.Вставить("Сумма", "Сумма");
		
		Для Каждого СтрокаРасшифровкаПлатежаXDTO Из РасшифровкаПлатежаXDTO Цикл
			СтрокаРасшифровкаПлатежа = ДанныеКоллекцииВВидеСтруктуры(СтрокаРасшифровкаПлатежаXDTO, ПравилаЗаполнения);
			
			МассивРасшифровкаПлатежа.Добавить(СтрокаРасшифровкаПлатежа);
		КонецЦикла;
		
		Если МассивРасшифровкаПлатежа.Количество() > 0 Тогда
			ПолученныеДанные.ДополнительныеСвойства.Вставить("РасшифровкаПлатежа", МассивРасшифровкаПлатежа);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
