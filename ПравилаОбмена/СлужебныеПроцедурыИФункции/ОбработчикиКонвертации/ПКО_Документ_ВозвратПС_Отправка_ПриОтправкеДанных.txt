Процедура ПКО_Документ_ВозвратПС_Отправка_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если СтекВыгрузки.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЕСТЬNULL(ПодарочныеСертификаты.Код, """") КАК СерийныйНомер,
	                      |	ЕСТЬNULL(ПодарочныеСертификаты.Штрихкод, """") КАК Штрихкод,
	                      |	ЕСТЬNULL(ПодарочныеСертификаты.МагнитныйКод, """") КАК МагнитныйКод,
	                      |	ЕСТЬNULL(ПодарочныеСертификаты.Владелец, ЗНАЧЕНИЕ(Справочник.ВидыПодарочныхСертификатов.ПустаяСсылка)) КАК ВидПодарочногоСертификатаСсылка,
	                      |	ВозвратПодарочныхСертификатовПодарочныеСертификаты.Сумма КАК Сумма
	                      |ИЗ
	                      |	Документ.ВозвратПодарочныхСертификатов.ПодарочныеСертификаты КАК ВозвратПодарочныхСертификатовПодарочныеСертификаты
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодарочныеСертификаты КАК ПодарочныеСертификаты
	                      |		ПО ВозвратПодарочныхСертификатовПодарочныеСертификаты.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка
	                      |ГДЕ
	                      |	ВозвратПодарочныхСертификатовПодарочныеСертификаты.Ссылка = &Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЕСТЬNULL(ОтчетОРозничныхПродажах.Ссылка, ЗНАЧЕНИЕ(Документ.ОтчетОРозничныхПродажах.ПустаяСсылка)) КАК Ссылка
	                      |ИЗ
	                      |	Документ.ВозвратПодарочныхСертификатов КАК ВозвратПодарочныхСертификатов
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	                      |		ПО ВозвратПодарочныхСертификатов.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена
	                      |ГДЕ
	                      |	ВозвратПодарочныхСертификатов.Ссылка = &Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЕСТЬNULL(КассыККМ.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад
	                      |ИЗ
	                      |	Документ.ВозвратПодарочныхСертификатов КАК ВозвратПодарочныхСертификатов
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КассыККМ КАК КассыККМ
	                      |		ПО ВозвратПодарочныхСертификатов.КассаККМ = КассыККМ.Ссылка
	                      |ГДЕ
	                      |	ВозвратПодарочныхСертификатов.Ссылка = &Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	СУММА(ОплатаПлатежнымиКартами.Сумма) КАК СуммаОплаты,
	                      |	ОплатаПлатежнымиКартами.НомерПлатежнойКарты КАК НомерКарты,
	                      |	ЕСТЬNULL(ЭквайринговыеТерминалы.БанковскийСчет, ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)) КАК БанковскийСчетОрганизации,
	                      |	ЕСТЬNULL(ЭквайринговыеТерминалы.Эквайер, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Эквайрер,
	                      |	ЕСТЬNULL(ЭквайринговыеТерминалы.Код, """") КАК Номер,
	                      |	ЕСТЬNULL(ЭквайринговыеТерминалы.Ссылка, ЗНАЧЕНИЕ(Справочник.ЭквайринговыеТерминалы.ПустаяСсылка)) КАК ЭквайринговыйТерминал
	                      |ИЗ
	                      |	Документ.ВозвратПодарочныхСертификатов.ОплатаПлатежнымиКартами КАК ОплатаПлатежнымиКартами
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	                      |		ПО ОплатаПлатежнымиКартами.ЭквайринговыйТерминал = ЭквайринговыеТерминалы.Ссылка
	                      |ГДЕ
	                      |	ОплатаПлатежнымиКартами.Ссылка = &Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ОплатаПлатежнымиКартами.ЭквайринговыйТерминал,
	                      |	ОплатаПлатежнымиКартами.НомерПлатежнойКарты,
	                      |	ЕСТЬNULL(ЭквайринговыеТерминалы.БанковскийСчет, ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)),
	                      |	ЕСТЬNULL(ЭквайринговыеТерминалы.Эквайер, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)),
	                      |	ЕСТЬNULL(ЭквайринговыеТерминалы.Код, """"),
	                      |	ЕСТЬNULL(ЭквайринговыеТерминалы.Ссылка, ЗНАЧЕНИЕ(Справочник.ЭквайринговыеТерминалы.ПустаяСсылка))
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВозвратПодарочныхСертификатов.РеализацияПодарочныхСертификатов.Ссылка КАК Ссылка,
	                      |	ВозвратПодарочныхСертификатов.РеализацияПодарочныхСертификатов.Дата КАК Дата,
	                      |	ВозвратПодарочныхСертификатов.РеализацияПодарочныхСертификатов.Номер КАК Номер,
	                      |	ВозвратПодарочныхСертификатов.РеализацияПодарочныхСертификатов.Организация КАК Организация
	                      |ИЗ
	                      |	Документ.ВозвратПодарочныхСертификатов КАК ВозвратПодарочныхСертификатов
	                      |ГДЕ
	                      |	ВозвратПодарочныхСертификатов.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ПодарочныеСертификаты = РезультатЗапроса[0].Выгрузить();
	ПодарочныеСертификаты.Колонки.Добавить("ВидПодарочногоСертификата");
	Для Каждого ПС Из ПодарочныеСертификаты Цикл
		ПС.ВидПодарочногоСертификата = Новый Структура("Значение, ИмяПКО",
			ПС.ВидПодарочногоСертификатаСсылка, "Справочник_ВидыПодарочныхСертификатов");
	КонецЦикла;
	ДанныеXDTO.Вставить("ПодарочныеСертификаты", ПодарочныеСертификаты);
	
	//Определяется отчет о розничных продажах, в рамках которого осуществлена операция
	Инструкция = Новый Структура();
	Инструкция.Вставить("ИмяПКО", "Документ_ОтчетОРозничныхПродажах_Отправка");
	
	Выборка = РезультатЗапроса[1].Выбрать();
	Если Выборка.Следующий() Тогда
		Инструкция.Вставить("Значение", Выборка.Ссылка);
	    ДанныеXDTO.Вставить("ОтчетОРозничныхПродажах", Инструкция);
	КонецЕсли;
	
	//Определяется склад документа
	Выборка = РезультатЗапроса[2].Выбрать();
	Если Выборка.Следующий() Тогда
		СкладДляВыгрузки = Выборка.Склад;
	Иначе
		СкладДляВыгрузки = Справочники.Склады.ПустаяСсылка();
	КонецЕсли;
	ИнструкцияСклад = Новый Структура();
	ИнструкцияСклад.Вставить("ИмяПКО", "Справочник_Склады_Отправка");
	ИнструкцияСклад.Вставить("Значение", СкладДляВыгрузки(СкладДляВыгрузки, КомпонентыОбмена.ПараметрыКонвертации, Истина));
	ДанныеXDTO.Вставить("Склад", ИнструкцияСклад);
	
	//Подготавливаются сведения об оплате картами
	ТабОплатаКартами = РезультатЗапроса[3].Выгрузить();
	ТабОплатаКартами.Колонки.Добавить("ДоговорЭквайринга");
	
	ИндексЭквайрера = ТабОплатаКартами.Индексы.Добавить("Эквайрер");
	//Определяются параметры виртуального договора
	ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
	ПараметрыПоУмолчанию.Организация              = ДанныеИБ.Организация;
	ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = ВалютаРегламентированногоУчета(КомпонентыОбмена);
	ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = Ложь;
	ПараметрыПоУмолчанию.ВидДоговора              = "Прочее"; 
	
	Для Каждого Строка Из ТабОплатаКартами Цикл
	 
		ПараметрыПоУмолчанию.Контрагент               = Строка.Эквайрер;
		
		//Формируем инструкцию для выгрузки эквайрингового терминала
		Инструкция = Новый Структура();
		Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) < ВерсияФорматаЧислом("1.4") Тогда
			Инструкция.Вставить("Номер",  СокрЛП(Строка.Номер));
			Инструкция.Вставить("Ссылка", Строка.ЭквайринговыйТерминал);
		Иначе
			Инструкция.Вставить("Значение", Строка.ЭквайринговыйТерминал);
			Инструкция.Вставить("ИмяПКО",   "Справочник_ЭквайринговыеТерминалы_Отправка")
		КонецЕсли; 
	
		Строка.ЭквайринговыйТерминал = Инструкция;
		Строка.ДоговорЭквайринга     = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена);
		
	КонецЦикла;
	
	ДанныеXDTO.Вставить("ОплатаПлатежнымиКартами", ТабОплатаКартами);
КонецПроцедуры
