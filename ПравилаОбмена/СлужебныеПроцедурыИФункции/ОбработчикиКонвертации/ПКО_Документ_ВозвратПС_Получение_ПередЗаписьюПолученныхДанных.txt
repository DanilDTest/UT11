Процедура ПКО_Документ_ВозвратПС_Получение_ПередЗаписьюПолученныхДанных(ПолученныеДанные, ДанныеИБ, КонвертацияСвойств, КомпонентыОбмена)
	//Возврат;
	
	ЗагрузитьДополнительныеСведения(?(ДанныеИБ = Неопределено, ПолученныеДанные.ПолучитьСсылкуНового(), ДанныеИБ.Ссылка),
		ПолученныеДанные.ДополнительныеСвойства, КомпонентыОбмена);
		
	ОРП   = ПолученныеДанные.ДополнительныеСвойства.ОтчетОРозничныхПродажах;
	Склад = ПолученныеДанные.ДополнительныеСвойства.Склад;
	
	// В случае наличия объекта в базе он и будет записан (а не ПолученныеДанные).
	// Шапка и табличная часть предварительно переносятся из ПолученныеДанные в ДанныеИБ:
	// шапка - в составе свойств из ПКС, табличная часть - полностью берется из полученных данных.
	Если ДанныеИБ <> Неопределено Тогда
		
		ЗаполнитьСвойстваШапкиОбъекта(КонвертацияСвойств, ПолученныеДанные, ДанныеИБ);
		ДанныеИБ.ПодарочныеСертификаты.Загрузить(ПолученныеДанные.ПодарочныеСертификаты.Выгрузить());
		
		Если ДанныеИБ.ОплатаПлатежнымиКартами.Итог("Сумма") <> ПолученныеДанные.ОплатаПлатежнымиКартами.Итог("Сумма")
			Или ПолученныеДанные.ОплатаПлатежнымиКартами.Количество() <> ДанныеИБ.ОплатаПлатежнымиКартами.Количество() Тогда
			ДанныеИБ.ОплатаПлатежнымиКартами.Загрузить(ПолученныеДанные.ОплатаПлатежнымиКартами.Выгрузить());
		КонецЕсли;
	
		ПолученныеДанные   = Неопределено;
		ДанныеДляЗаписиВИБ = ДанныеИБ;
		
	Иначе
		ДанныеДляЗаписиВИБ = ПолученныеДанные;
	КонецЕсли;
	
	Для Каждого СтрокаОплаты Из ДанныеДляЗаписиВИБ.ОплатаПлатежнымиКартами Цикл
		Если Не ЗначениеЗаполнено(СтрокаОплаты.ЭквайринговыйТерминал) Тогда
			СтрокаОплаты.ЭквайринговыйТерминал = Справочники.ЭквайринговыеТерминалы.ПолучитьЭквайринговыйТерминалПоУмолчанию(ДанныеДляЗаписиВИБ.Организация);
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(ДанныеДляЗаписиВИБ.РеализацияПодарочныхСертификатов) Тогда
		//Добавить в табл заполнения
		ДокументСсылка = ?(ДанныеИБ = Неопределено, ДанныеДляЗаписиВИБ.ПолучитьСсылкуНового(), ДанныеДляЗаписиВИБ.Ссылка);
		КомпонентыОбмена.ПараметрыКонвертации.МассивВозвратыПСЗаполнитьОснование.Добавить(ДокументСсылка);	
	КонецЕсли;
	             
	Возврат;
	             
	Если ЗначениеЗаполнено(ОРП) Тогда
		Если НЕ ЗначениеЗаполнено(ДанныеДляЗаписиВИБ.КассаККМ) или Не ЗначениеЗаполнено(ДанныеДляЗаписиВИБ.КассоваяСмена) Тогда
			НоваяСтрока = КомпонентыОбмена.ПараметрыКонвертации.ДокументыСПодарочнымиСертификатами.Добавить();
			НоваяСтрока.ДокументСсылка   = ?(ДанныеИБ = Неопределено, ДанныеДляЗаписиВИБ.ПолучитьСсылкуНового(), ДанныеДляЗаписиВИБ.Ссылка);
			НоваяСтрока.ДатаДокумента    = ДанныеДляЗаписиВИБ.Дата;
			НоваяСтрока.ОчередьДокумента = 3;
			Если ТипЗнч(ОРП) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах") Тогда
				НоваяСтрока.ОРП          = ОРП.Ссылка;
			Иначе
				НоваяСтрока.ОРП          = ОРП;
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		Если Не ЗначениеЗаполнено(ДанныеДляЗаписиВИБ.КассаККМ) Тогда
			Склад = СкладДляЗагрузки(Склад, КомпонентыОбмена.ПараметрыКонвертации);
			
			СтруктураПоискаКассыККМ = Новый Структура("Организация, Валюта, КассаККМ");
			СтруктураПоискаКассыККМ.Вставить("Склад", Склад);
			ЗаполнитьЗначенияСвойств(СтруктураПоискаКассыККМ, ДанныеДляЗаписиВИБ, "Организация, Валюта, КассаККМ");
			
			ЗаполнитьКассуККМПоВалютеСкладуИОрганизации(СтруктураПоискаКассыККМ, КомпонентыОбмена);
			
			ДанныеДляЗаписиВИБ.КассаККМ = СтруктураПоискаКассыККМ.КассаККМ;
			
		КонецЕсли;
	
		Если Не ЗначениеЗаполнено(ДанныеДляЗаписиВИБ.КассоваяСмена) Тогда
			
			НоваяСтрока = КомпонентыОбмена.ПараметрыКонвертации.ДокументыСПодарочнымиСертификатами.Добавить();
			НоваяСтрока.ДокументСсылка   = ?(ДанныеИБ = Неопределено, ДанныеДляЗаписиВИБ.ПолучитьСсылкуНового(), ДанныеДляЗаписиВИБ.Ссылка);
			НоваяСтрока.ДатаДокумента    = ДанныеДляЗаписиВИБ.Дата;
			НоваяСтрока.ОчередьДокумента = 2;
			НоваяСтрока.КассаККМ         = ДанныеДляЗаписиВИБ.КассаККМ;
			НоваяСтрока.Организация      = ДанныеДляЗаписиВИБ.Организация;
			НоваяСтрока.Валюта           = ДанныеДляЗаписиВИБ.Валюта;
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
