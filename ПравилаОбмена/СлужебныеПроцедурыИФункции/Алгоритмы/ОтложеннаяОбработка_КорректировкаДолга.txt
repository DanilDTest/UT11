Процедура ОтложеннаяОбработка_КорректировкаДолга(Объект, КомпонентыОбмена)
	ВалютаРеглУчета   = ВалютаРегламентированногоУчета(КомпонентыОбмена);
	КурсИКратностьРегл = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаРеглУчета, Объект.Дата);
	ПараметрыВалютыРегл = Новый Структура("Курс, Кратность, Валюта", КурсИКратностьРегл.Курс, КурсИКратностьРегл.Кратность, ВалютаРеглУчета);
	ВалютаУпрУчета   = ВалютаУправленческогоУчета(КомпонентыОбмена);
	КурсИКратностьУпр = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпрУчета, Объект.Дата);
	ПараметрыВалютыУпр = Новый Структура("Курс, Кратность, Валюта", КурсИКратностьУпр.Курс, КурсИКратностьУпр.Кратность, ВалютаУпрУчета);
	
	ПартнерДебитор = Неопределено;
	Если НЕ Объект.ТипДебитора = Перечисления.ТипыУчастниковВзаимозачета.ОрганизацияКлиент
		И НЕ Объект.ТипДебитора = Перечисления.ТипыУчастниковВзаимозачета.ОрганизацияПоставщик
		И ЗначениеЗаполнено(Объект.КонтрагентДебитор) Тогда
		ПартнерДебитор = ДенежныеСредстваСервер.ПолучитьПартнераПоКонтрагенту(Объект.КонтрагентДебитор);
		Если Не ЗначениеЗаполнено(ПартнерДебитор) Тогда
			ПартнерДебитор = Справочники.Партнеры.НеизвестныйПартнер;
		КонецЕсли;
	КонецЕсли;
	ПартнерКредитор = Неопределено;
	Если Не Объект.ТипКредитора = Перечисления.ТипыУчастниковВзаимозачета.ОрганизацияКлиент
		И НЕ Объект.ТипКредитора = Перечисления.ТипыУчастниковВзаимозачета.ОрганизацияПоставщик
		И ЗначениеЗаполнено(Объект.КонтрагентКредитор) Тогда
		ПартнерКредитор = ДенежныеСредстваСервер.ПолучитьПартнераПоКонтрагенту(Объект.КонтрагентКредитор);
		Если Не ЗначениеЗаполнено(ПартнерКредитор) Тогда
			ПартнерКредитор = Справочники.Партнеры.НеизвестныйПартнер;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыВалютыВзаиморасчетов = Новый Соответствие;
	Объект.СуммаРегл = 0;
	Объект.СуммаУпр = 0;
	Объект.ТипКредитора = Неопределено;
	Объект.ТипДебитора = Неопределено;
	ПервичныеДокументы = КомпонентыОбмена.ПараметрыКонвертации.ПервичныеДокументы;
	Для Каждого Строка Из Объект.ДебиторскаяЗадолженность Цикл
		ПараметрыТекВалюты = ПараметрыВалютыВзаиморасчетов.Получить(Строка.ВалютаВзаиморасчетов);
		Если ПараметрыТекВалюты = Неопределено Тогда
			КурсИКратностьТек = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Строка.ВалютаВзаиморасчетов, Объект.Дата);
			ПараметрыТекВалюты = Новый Структура("Курс, Кратность, Валюта", КурсИКратностьТек.Курс, КурсИКратностьТек.Кратность, Строка.ВалютаВзаиморасчетов);
			ПараметрыВалютыВзаиморасчетов.Вставить(Строка.ВалютаВзаиморасчетов, ПараметрыТекВалюты);
		КонецЕсли;
		СтруктураКурсаУпр = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпрУчета, Объект.Дата);
	
		Если Строка.ВалютаВзаиморасчетов = ВалютаРеглУчета Тогда
			Строка.СуммаРегл = Строка.СуммаВзаиморасчетов;
		Иначе
			Строка.СуммаРегл = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(Строка.СуммаВзаиморасчетов, ПараметрыТекВалюты, ПараметрыВалютыРегл);
		КонецЕсли;
		Если Строка.ВалютаВзаиморасчетов = ВалютаУпрУчета Тогда
			Строка.СуммаУпр = Строка.СуммаВзаиморасчетов;
		Иначе
			Строка.СуммаУпр = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(Строка.СуммаВзаиморасчетов, ПараметрыТекВалюты, ПараметрыВалютыУпр);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Объект.ТипДебитора) И ЗначениеЗаполнено(Строка.ТипРасчетов) Тогда
			Объект.ТипДебитора = ?(Строка.ТипРасчетов = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом,Перечисления.ТипыУчастниковВзаимозачета.Клиент,Перечисления.ТипыУчастниковВзаимозачета.Поставщик);
		КонецЕсли;
		Если ЗначениеЗаполнено(ПартнерДебитор) Тогда
			Строка.Партнер = ПартнерДебитор;
		КонецЕсли;
		Если ЗначениеЗаполнено(Строка.Заказ) И НЕ ОбщегоНазначения.СсылкаСуществует(Строка.Заказ) Тогда
			Строка.Заказ = Неопределено;
		ИначеЕсли ЗначениеЗаполнено(Строка.Заказ)
			И ТипЗнч(Строка.Заказ) = Тип("ДокументСсылка.ПервичныйДокумент") Тогда
			СтрокаПервичныеДокументы = ПервичныеДокументы.Добавить();
			СтрокаПервичныеДокументы.ПервичныйДокумент = Строка.Заказ;
			СтрокаПервичныеДокументы.ТипПервичногоДокумента = Перечисления.ТипыПервичныхДокументов.РеализацияКлиенту;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Строка Из Объект.КредиторскаяЗадолженность Цикл
		ПараметрыТекВалюты = ПараметрыВалютыВзаиморасчетов.Получить(Строка.ВалютаВзаиморасчетов);
		Если ПараметрыТекВалюты = Неопределено Тогда
			КурсИКратностьТек = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Строка.ВалютаВзаиморасчетов, Объект.Дата);
			ПараметрыТекВалюты = Новый Структура("Курс, Кратность, Валюта", КурсИКратностьТек.Курс, КурсИКратностьТек.Кратность, Строка.ВалютаВзаиморасчетов);
			ПараметрыВалютыВзаиморасчетов.Вставить(Строка.ВалютаВзаиморасчетов, ПараметрыТекВалюты);
		КонецЕсли;
		СтруктураКурсаУпр = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУпрУчета, Объект.Дата);
	
		Если Строка.ВалютаВзаиморасчетов = ВалютаРеглУчета Тогда
			Строка.СуммаРегл = Строка.СуммаВзаиморасчетов;
		Иначе
			Строка.СуммаРегл = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(Строка.СуммаВзаиморасчетов, ПараметрыТекВалюты, ПараметрыВалютыРегл);
		КонецЕсли;
		Если Строка.ВалютаВзаиморасчетов = ВалютаУпрУчета Тогда
			Строка.СуммаУпр = Строка.СуммаВзаиморасчетов;
		Иначе
			Строка.СуммаУпр = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(Строка.СуммаВзаиморасчетов, ПараметрыТекВалюты, ПараметрыВалютыУпр);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Объект.ТипКредитора) И ЗначениеЗаполнено(Строка.ТипРасчетов) Тогда
			Объект.ТипКредитора = ?(Строка.ТипРасчетов = Перечисления.ТипыРасчетовСПартнерами.РасчетыСКлиентом,Перечисления.ТипыУчастниковВзаимозачета.Клиент,Перечисления.ТипыУчастниковВзаимозачета.Поставщик);
		КонецЕсли;
		Если ЗначениеЗаполнено(ПартнерКредитор) Тогда
			Строка.Партнер = ПартнерКредитор;
		КонецЕсли;
		Если ЗначениеЗаполнено(Строка.Заказ) И НЕ ОбщегоНазначения.СсылкаСуществует(Строка.Заказ) Тогда
			Строка.Заказ = Неопределено;
		ИначеЕсли ЗначениеЗаполнено(Строка.Заказ)
			И ТипЗнч(Строка.Заказ) = Тип("ДокументСсылка.ПервичныйДокумент") Тогда
			СтрокаПервичныеДокументы = ПервичныеДокументы.Добавить();
			СтрокаПервичныеДокументы.ПервичныйДокумент = Строка.Заказ;
			СтрокаПервичныеДокументы.ТипПервичногоДокумента = Перечисления.ТипыПервичныхДокументов.ПриобретениеУПоставщика;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
