Процедура ВыгрузитьРасшифровкуКонтрагенты_ПоступлениеДС(ДанныеИБ, ДанныеXDTO, АлгоритмКонвертации, КомпонентыОбмена)
	ДанныеШапки                   = ДанныеИБ.ДополнительныеСвойства.ДанныеШапки;
	РасшифровкаПлатежаРасширенная = ДанныеИБ.ДополнительныеСвойства.РасшифровкаПлатежаРасширенная;
	ВалютаРеглУчета               = ВалютаРегламентированногоУчета(КомпонентыОбмена);
	
	РасшифровкаПлатежа = Новый ТаблицаЗначений;
	РасшифровкаПлатежа.Колонки.Добавить("Договор");
	РасшифровкаПлатежа.Колонки.Добавить("Заказ");
	РасшифровкаПлатежа.Колонки.Добавить("ДокументРасчетов");
	РасшифровкаПлатежа.Колонки.Добавить("СпособПогашенияЗадолженности");
	РасшифровкаПлатежа.Колонки.Добавить("СтатьяДДС");
	РасшифровкаПлатежа.Колонки.Добавить("Сумма");
	РасшифровкаПлатежа.Колонки.Добавить("СуммаВзаиморасчетов");
	РасшифровкаПлатежа.Колонки.Добавить("СуммаНДС");
	РасшифровкаПлатежа.Колонки.Добавить("КурсВзаиморасчетов");
	РасшифровкаПлатежа.Колонки.Добавить("КратностьВзаиморасчетов");
	РасшифровкаПлатежа.Колонки.Добавить("СтавкаНДС");
	РасшифровкаПлатежа.Колонки.Добавить("ВидРасчетовРасширенный");
	РасшифровкаПлатежа.Колонки.Добавить("СчетУчетаРасчетовСКонтрагентом");
	
	РасшифровкаПлатежаВИнформационнойБазе = РасшифровкаПлатежаРасширенная.Выгрузить();
	
	Если СтрНайти(АлгоритмКонвертации, "ОплатаОтПокупателя") > 0
		Или СтрНайти(АлгоритмКонвертации, "ВозвратОтПоставщика") > 0
		Или АлгоритмКонвертации = "Кредиты_РасчетыПоКредитамИЗаймам"
		Или АлгоритмКонвертации = "Депозиты_ПрочиеРасчетыСКонтрагентами" Тогда
		
		// Многострочная расшифровка платежа.
		Для Каждого СтрокаРасшифровкиПлатежаИнформационнойБазы Из РасшифровкаПлатежаВИнформационнойБазе Цикл
			
			СтрокаРасшифровкиПлатежа = РасшифровкаПлатежа.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаРасшифровкиПлатежа, СтрокаРасшифровкиПлатежаИнформационнойБазы,
				"СтатьяДДС, Сумма, СуммаВзаиморасчетов, КурсВзаиморасчетов, 
				|КратностьВзаиморасчетов, ВидРасчетовРасширенный, СчетУчетаРасчетовСКонтрагентом");
				
			Если СтрНайти(АлгоритмКонвертации, "ОплатаОтПокупателя") > 0
				Или СтрНайти(АлгоритмКонвертации, "ВозвратОтПоставщика") > 0 Тогда
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровкиПлатежа, СтрокаРасшифровкиПлатежаИнформационнойБазы, "СуммаНДС, СтавкаНДС");
			КонецЕсли;
			
			// Заказ.
			ТипЗаказа = Неопределено;
			Если ЗначениеЗаполнено(СтрокаРасшифровкиПлатежаИнформационнойБазы.Заказ) Тогда
				
				ТипЗаказа = ТипЗнч(СтрокаРасшифровкиПлатежаИнформационнойБазы.Заказ);	
				ИмяПКО = ИмяПКОДляОбъектаДанных(КомпонентыОбмена, СтрокаРасшифровкиПлатежаИнформационнойБазы.Заказ, ДанныеИБ.Организация);
				
				Если ЗначениеЗаполнено(ИмяПКО) Тогда
					Если ТипЗаказа = Тип("ДокументСсылка.ЗаказКлиента")
						ИЛИ ТипЗаказа = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
						ИмяСвойстваЗаказ = "Заказ";
					Иначе
						ИмяСвойстваЗаказ = "ДокументРасчетов";
						СтрокаРасшифровкиПлатежа.СпособПогашенияЗадолженности = "ПоДокументу";
					КонецЕсли;
				
					СтрокаРасшифровкиПлатежа[ИмяСвойстваЗаказ] = Новый Структура("Значение, ИмяПКО", 
						СтрокаРасшифровкиПлатежаИнформационнойБазы.Заказ, ИмяПКО);
				КонецЕсли;
				
			КонецЕсли;
			
			Если АлгоритмКонвертации = "Кредиты_РасчетыПоКредитамИЗаймам"
				Или АлгоритмКонвертации = "Депозиты_ПрочиеРасчетыСКонтрагентами" Тогда
				
				СтрокаРасшифровкиПлатежа.Договор = Новый Структура("Значение, ИмяПКО", 
					СтрокаРасшифровкиПлатежаИнформационнойБазы.ДоговорКредитаДепозита, "Справочник_ДоговорыКредитовИДепозитов_Отправка");
				
			Иначе
									
				ОперацияИнтеркампани = (ТипЗаказа = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")
					Или ТипЗаказа = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями")
					Или ТипЗаказа = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями")
					Или ТипЗаказа = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями"));
			
				Если ЗначениеЗаполнено(СтрокаРасшифровкиПлатежаИнформационнойБазы.Договор)
					И Не ОперацияИнтеркампани Тогда
					СтрокаРасшифровкиПлатежа.Договор = СтрокаРасшифровкиПлатежаИнформационнойБазы.Договор;
				Иначе
					
					ДоговорОбъектаРасчетов   = Неопределено;
					ВидДоговора              = "";
					РасчетыВУсловныхЕдиницах = Неопределено;
					
					ДанныеОбъектаРасчетов = Новый Структура("Соглашение, Договор, Сделка");
					
					Если ЗначениеЗаполнено(СтрокаРасшифровкиПлатежаИнформационнойБазы.Заказ) Тогда
						ЗаполнитьЗначенияСвойств(ДанныеОбъектаРасчетов, СтрокаРасшифровкиПлатежаИнформационнойБазы.Заказ);
					КонецЕсли;
					
					ДоговорОбъектаРасчетов = ДанныеОбъектаРасчетов.Договор;
					
					Если ЗначениеЗаполнено(ДоговорОбъектаРасчетов) 
						И ТипЗнч(ДоговорОбъектаРасчетов) = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями") Тогда
						ОперацияИнтеркампани = Истина;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(ДоговорОбъектаРасчетов) И Не ОперацияИнтеркампани Тогда
						СтрокаРасшифровкиПлатежа.Договор = ДоговорОбъектаРасчетов;
					Иначе
						
						Если Не ЗначениеЗаполнено(СтрокаРасшифровкиПлатежаИнформационнойБазы.Заказ)
							И Не ЗначениеЗаполнено(ДанныеОбъектаРасчетов.Соглашение) Тогда
							
							Если ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации Тогда
								ВидДоговора = "СПокупателем";
							Иначе
								
								ВидДоговора = ВзаиморасчетыСервер.ВидДоговораКонтрагента(
									СтрокаРасшифровкиПлатежаИнформационнойБазы.Заказ,
									ДанныеОбъектаРасчетов.Соглашение,
									ДанныеИБ.ХозяйственнаяОперация);
								
							КонецЕсли;
							
						ИначеЕсли ЗначениеЗаполнено(СтрокаРасшифровкиПлатежаИнформационнойБазы.Заказ)
							И ОперацияИнтеркампани Тогда
							
							Если ТипЗнч(СтрокаРасшифровкиПлатежаИнформационнойБазы.Заказ) = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями") Тогда
								ДоговорИнтеркампани = СтрокаРасшифровкиПлатежаИнформационнойБазы.Заказ;
							ИначеЕсли ЗначениеЗаполнено(ДоговорОбъектаРасчетов)
								И ТипЗнч(ДоговорОбъектаРасчетов) = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями") Тогда
								ДоговорИнтеркампани = ДоговорОбъектаРасчетов;
							Иначе
								ВидДоговора = "СПокупателем";
							КонецЕсли;
							
							Если Не ЗначениеЗаполнено(ВидДоговора) Тогда
								ВидДоговора = 
									ВидДоговораПоТипуДоговораИнтеркампани(ДанныеИБ.Организация, ДоговорИнтеркампани);
							КонецЕсли;
							
						Иначе
							
							ВидДоговора = ВзаиморасчетыСервер.ВидДоговораКонтрагента(
								СтрокаРасшифровкиПлатежаИнформационнойБазы.Заказ,
								ДанныеОбъектаРасчетов.Соглашение,
								ДанныеИБ.ХозяйственнаяОперация);
							
						КонецЕсли;
						
						Если Не ЗначениеЗаполнено(ВидДоговора) Тогда
							ВидДоговора = "Прочее";
						КонецЕсли;
						
						// Расчеты в условных единицах
						Если ЗначениеЗаполнено(ДанныеОбъектаРасчетов.Соглашение) Тогда
							РасчетыВУсловныхЕдиницах = ВзаиморасчетыСервер.РасчетыВУсловныхЕдиницах(ДанныеОбъектаРасчетов.Соглашение);
						Иначе
							РасчетыВУсловныхЕдиницах = ДанныеИБ.Валюта = ВалютаРеглУчета
								И ДанныеИБ.Валюта <> СтрокаРасшифровкиПлатежаИнформационнойБазы.ВалютаВзаиморасчетов;
						КонецЕсли;
						
						ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
						ПараметрыПоУмолчанию.Контрагент               = ДанныеXDTO.Контрагент;
						ПараметрыПоУмолчанию.Организация              = ДанныеИБ.Организация;
						ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = СтрокаРасшифровкиПлатежаИнформационнойБазы.ВалютаВзаиморасчетов;
						ПараметрыПоУмолчанию.ВидДоговора              = ВидДоговора;
						ПараметрыПоУмолчанию.Дата                     = ДанныеИБ.Дата;
						ПараметрыПоУмолчанию.Номер                    = ДанныеИБ.Номер;
						ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = РасчетыВУсловныхЕдиницах;
						
						Заказ = Новый Структура("Заказ, Соглашение, Сделка", 
							СтрокаРасшифровкиПлатежаИнформационнойБазы.Заказ, ДанныеОбъектаРасчетов.Соглашение, ДанныеОбъектаРасчетов.Сделка);
							
						СтрокаРасшифровкиПлатежа.Договор = 
							ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена, Заказ, ДанныеИБ);
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			// Заказ из основания платежа.
			Если НЕ ЗначениеЗаполнено(СтрокаРасшифровкиПлатежа.Заказ)
				И ЗначениеЗаполнено(СтрокаРасшифровкиПлатежаИнформационнойБазы.ОснованиеПлатежа) Тогда
				
				ИмяПКО = ИмяПКОДляОбъектаДанных(КомпонентыОбмена, СтрокаРасшифровкиПлатежаИнформационнойБазы.ОснованиеПлатежа, ДанныеИБ.Организация);
				ТипОснованиеПлатежа = ТипЗнч(СтрокаРасшифровкиПлатежаИнформационнойБазы.ОснованиеПлатежа);
				Если ЗначениеЗаполнено(ИмяПКО)
					И (ТипОснованиеПлатежа = Тип("ДокументСсылка.ЗаказКлиента")
					ИЛИ ТипОснованиеПлатежа = Тип("ДокументСсылка.ЗаказПоставщику")) Тогда
					
					СтрокаРасшифровкиПлатежа.Заказ = Новый Структура("Значение, ИмяПКО", 
						СтрокаРасшифровкиПлатежаИнформационнойБазы.ОснованиеПлатежа, ИмяПКО);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли АлгоритмКонвертации = "ПрочееПоступление_РасчетыПоКредитамИЗаймам"
		Или АлгоритмКонвертации = "ПрочееПоступление_ПрочиеРасчетыСКонтрагентами"
		Или АлгоритмКонвертации = "КонвертацияВалюты_ПрочиеРасчетыСКонтрагентами" Тогда
		
		// Однострочная расшифровка платежа
		СтрокаРасшифровкиПлатежа = РасшифровкаПлатежа.Добавить();
		СтрокаРасшифровкиПлатежа.СтатьяДДС               = ДанныеИБ.СтатьяДвиженияДенежныхСредств;
		СтрокаРасшифровкиПлатежа.Сумма                   = ДанныеИБ.СуммаДокумента;
		СтрокаРасшифровкиПлатежа.КурсВзаиморасчетов      = ДанныеШапки.Валюта_Курс;
		СтрокаРасшифровкиПлатежа.КратностьВзаиморасчетов = ДанныеШапки.Валюта_Кратность;
		СтрокаРасшифровкиПлатежа.СуммаВзаиморасчетов     = ДанныеИБ.СуммаДокумента;
		
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.Контрагент               = ДанныеИБ.Контрагент;
		ПараметрыПоУмолчанию.Организация              = ДанныеИБ.Организация;
		ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = ДанныеИБ.Валюта;
		ПараметрыПоУмолчанию.ВидДоговора              = "Прочее";
		ПараметрыПоУмолчанию.Дата                     = ДанныеИБ.Дата;
		ПараметрыПоУмолчанию.Номер                    = ДанныеИБ.Номер;
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = Ложь;
		
		Заказ = Новый Структура("Заказ, Соглашение, Сделка", СтрокаРасшифровкиПлатежа.Заказ, Неопределено, Неопределено);
		СтрокаРасшифровкиПлатежа.Договор = 
			ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена, Заказ, ДанныеИБ);
			
	КонецЕсли;
	
	ДанныеXDTO.Вставить("РасшифровкаПлатежа", РасшифровкаПлатежа);
КонецПроцедуры
