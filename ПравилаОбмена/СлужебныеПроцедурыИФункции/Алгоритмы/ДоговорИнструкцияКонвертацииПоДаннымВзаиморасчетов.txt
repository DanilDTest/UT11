Функция ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена, ОбъектРасчетов = Неопределено, ДанныеИБ = Неопределено)
	// Функция формирует и возвращает инструкция для выгрузки договора
	// по полученным параметрам и настройкам узла плана обмена.
	//
	// Функция, по сформированной инструкции, выполняет принудительную выгрузку договора в файл обмена.
	//
	// Перед вызовом этой функции выполняется проверка наличия договора в выгружаемом документе
	// или в объекте взаиморасчетов, если договор не найден, то выполняется вызов этой функции.
	
	СтруктураДанныеДоговора = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
	ДоговорЗаполнен = Ложь;
	СтруктураДанныеДоговора.ВидДоговора = ПараметрыПоУмолчанию.ВидДоговора;
	
	Если ЗначениеЗаполнено(ОбъектРасчетов)
		И ТипЗнч(ОбъектРасчетов) = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями") Тогда
		
		ЗаполнитьЗначенияСвойств(СтруктураДанныеДоговора, ПараметрыПоУмолчанию,
			"Организация, Контрагент");
		
		РеквизитыИнтеркампани = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбъектРасчетов,
			"Дата, Номер, Наименование, ВалютаВзаиморасчетов, ПорядокОплаты");
		ЗаполнитьЗначенияСвойств(СтруктураДанныеДоговора, РеквизитыИнтеркампани);
	
		РасчетыУЕ = РеквизитыИнтеркампани.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях;	
		СтруктураДанныеДоговора.РасчетыВУсловныхЕдиницах = РасчетыУЕ;
		
		ДоговорЗаполнен = Истина;
			
	ИначеЕсли ЗначениеЗаполнено(ОбъектРасчетов)
		И ДанныеИБ <> Неопределено
		И Не ДопАналитикаПоДоговорам(КомпонентыОбмена).ДоговорВДоговор Тогда
		Если ТипЗнч(ОбъектРасчетов) = Тип("Структура") Тогда
			// Если в документе соглашение и заказ - 2 разных реквизита, то значения этих реквизитов передаются в структуре:
			// "Заказ" - Ссылка на Заказ клиента (поставщику).
			// "Соглашение" - Ссылка на Соглашение с клиентом (поставщиком).
			// "Сделки" - Ссылка на Сделку с клиентом.
			ЗаказСсылка      = Неопределено;
			СоглашениеСсылка = Неопределено;
			СделкаСсылка     = Неопределено;
			
			ЭтоЗаказ      = ОбъектРасчетов.Свойство("Заказ", ЗаказСсылка) И ЗначениеЗаполнено(ЗаказСсылка);
			ЭтоСоглашение = ОбъектРасчетов.Свойство("Соглашение", СоглашениеСсылка) И ЗначениеЗаполнено(СоглашениеСсылка);
			ЭтоСделка     = ОбъектРасчетов.Свойство("Сделка", СделкаСсылка) И ЗначениеЗаполнено(СделкаСсылка);
		Иначе
			// Подразумевается, что реквизит выгружаемого документа "Заказ" - имеет составной тип
			// и может быть Заказом, Соглашением, Сделкой или другим видом документа/справочника,
			// помимо этого у объекта, указанного в этом реквизите могут быть реквизиты "Соглашение" и/или "Сделка".
			ЗаказСсылка      = ОбъектРасчетов;
			СоглашениеСсылка = ОбъектРасчетов;
			СделкаСсылка     = ОбъектРасчетов;
			
			ЭтоЗаказ = ТипЗнч(ОбъектРасчетов) = Тип("ДокументСсылка.ЗаказКлиента")
				Или ТипЗнч(ОбъектРасчетов) = Тип("ДокументСсылка.ЗаказПоставщику");
			
			РеквизитыЗаказа = Новый Массив;
			Если ОбъектРасчетов.Метаданные().Реквизиты.Найти("Соглашение") <> Неопределено Тогда
				РеквизитыЗаказа.Добавить("Соглашение");
			КонецЕсли;
			Если ОбъектРасчетов.Метаданные().Реквизиты.Найти("Сделка") <> Неопределено Тогда
				РеквизитыЗаказа.Добавить("Сделка");
			КонецЕсли;
			
			Если РеквизитыЗаказа.Количество() > 0 Тогда
				СтруктураЗаказа = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбъектРасчетов, РеквизитыЗаказа);
			Иначе
				СтруктураЗаказа = Новый Структура;
			КонецЕсли;
			
			ЭтоСоглашение = ТипЗнч(ОбъектРасчетов) = Тип("СправочникСсылка.СоглашенияСКлиентами")
				Или ТипЗнч(ОбъектРасчетов) = Тип("СправочникСсылка.СоглашенияСПоставщиками")
				Или (СтруктураЗаказа.Свойство("Соглашение", СоглашениеСсылка) И ЗначениеЗаполнено(СоглашениеСсылка));
				
			ЭтоСделка = ТипЗнч(ОбъектРасчетов) = Тип("СправочникСсылка.СделкиСКлиентами")
				Или (СтруктураЗаказа.Свойство("Сделка", СделкаСсылка) И ЗначениеЗаполнено(СделкаСсылка));
		КонецЕсли;
			
		Если ЭтоЗаказ Или ЭтоСоглашение Или ЭтоСделка Тогда
			Если ЭтоЗаказ И КомпонентыОбмена.ПараметрыКонвертации.НастройкиДопАналитикиПоДоговорам.ЗаказВДоговор Тогда
				
				Запрос = Новый Запрос;
				Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
				
				Запрос.УстановитьПараметр("Ссылка", ЗаказСсылка);
				
				Если ТипЗнч(ЗаказСсылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	ЗаказКлиента.Ссылка КАК Ссылка,
					|	ЗаказКлиента.Контрагент КАК Контрагент,
					|	ЗаказКлиента.Организация КАК Организация,
					|	ЗаказКлиента.Дата КАК Дата,
					|	ЗаказКлиента.Номер КАК Номер,
					|	ЗаказКлиента.Валюта КАК Валюта,
					|	ЗаказКлиента.Представление КАК Представление,
					|	ЗаказКлиента.ПорядокОплаты = ЗНАЧЕНИЕ(Перечисление.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях) КАК РасчетыВУсловныхЕдиницах
					|ПОМЕСТИТЬ ВТ_Документ
					|ИЗ
					|	Документ.ЗаказКлиента КАК ЗаказКлиента
					|ГДЕ
					|	ЗаказКлиента.Ссылка = &Ссылка";
					Запрос.Выполнить();
				ИначеЕсли ТипЗнч(ЗаказСсылка) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	ЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК Ссылка,
					|	ЗаявкаНаВозвратТоваровОтКлиента.Контрагент КАК Контрагент,
					|	ЗаявкаНаВозвратТоваровОтКлиента.Организация КАК Организация,
					|	ЗаявкаНаВозвратТоваровОтКлиента.Дата КАК Дата,
					|	ЗаявкаНаВозвратТоваровОтКлиента.Номер КАК Номер,
					|	ЗаявкаНаВозвратТоваровОтКлиента.Валюта КАК Валюта,
					|	ЗаявкаНаВозвратТоваровОтКлиента.Представление КАК Представление,
					|	ЗаявкаНаВозвратТоваровОтКлиента.ПорядокОплаты = ЗНАЧЕНИЕ(Перечисление.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях) КАК РасчетыВУсловныхЕдиницах
					|ПОМЕСТИТЬ ВТ_Документ
					|ИЗ
					|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозвратТоваровОтКлиента
					|ГДЕ
					|	ЗаявкаНаВозвратТоваровОтКлиента.Ссылка = &Ссылка";
					Запрос.Выполнить();
				ИначеЕсли ТипЗнч(ЗаказСсылка) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	ЗаказПоставщику.Ссылка КАК Ссылка,
					|	ЗаказПоставщику.Контрагент КАК Контрагент,
					|	ЗаказПоставщику.Организация КАК Организация,
					|	ЗаказПоставщику.Дата КАК Дата,
					|	ЗаказПоставщику.Номер КАК Номер,
					|	ЗаказПоставщику.Валюта КАК Валюта,
					|	ЗаказПоставщику.Представление КАК Представление,
					|	ЗаказПоставщику.ПорядокОплаты = ЗНАЧЕНИЕ(Перечисление.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях) КАК РасчетыВУсловныхЕдиницах
					|ПОМЕСТИТЬ ВТ_Документ
					|ИЗ
					|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
					|ГДЕ
					|	ЗаказПоставщику.Ссылка = &Ссылка";
					Запрос.Выполнить();
				КонецЕсли;
				
				Если Запрос.МенеджерВременныхТаблиц.Таблицы.Количество() > 0 Тогда
					
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	ВТ_Документ.Ссылка КАК Ссылка,
					|	ВТ_Документ.Контрагент КАК Контрагент,
					|	ВТ_Документ.Организация КАК Организация,
					|	ВТ_Документ.Дата КАК Дата,
					|	ВТ_Документ.Номер КАК Номер,
					|	ВТ_Документ.Валюта КАК ВалютаВзаиморасчетов,
					|	ВТ_Документ.Представление КАК Наименование,
					|	ВТ_Документ.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
					|	КурсыВалютСрезПоследних.Курс КАК КурсВзаиморасчетов,
					|	КурсыВалютСрезПоследних.Кратность КАК КратностьВзаиморасчетов
					|ИЗ
					|	ВТ_Документ КАК ВТ_Документ
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДок, ) КАК КурсыВалютСрезПоследних
					|		ПО ВТ_Документ.Валюта = КурсыВалютСрезПоследних.Валюта";
					Запрос.УстановитьПараметр("ДатаДок", ДанныеИБ.Дата);
					
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Следующий() Тогда
						ЗаполнитьЗначенияСвойств(СтруктураДанныеДоговора, Выборка);
						СтруктураДанныеДоговора.Наименование = ОбщегоНазначенияУТ.ПолучитьПредставлениеДокумента(ЗаказСсылка, Выборка.Номер, Выборка.Дата);
						ДоговорЗаполнен = Истина;
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
			Если ЭтоСоглашение И ДопАналитикаПоДоговорам(КомпонентыОбмена).СоглашениеВДоговор Тогда
				
				Запрос = Новый Запрос;
				Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
				
				Запрос.УстановитьПараметр("Ссылка", СоглашениеСсылка);
				
				Если ТипЗнч(СоглашениеСсылка) = Тип("СправочникСсылка.СоглашенияСКлиентами") Тогда
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	СоглашенияСКлиентами.Ссылка КАК Ссылка,
					|	СоглашенияСКлиентами.Контрагент КАК Контрагент,
					|	СоглашенияСКлиентами.Организация КАК Организация,
					|	СоглашенияСКлиентами.Дата КАК Дата,
					|	СоглашенияСКлиентами.Номер КАК Номер,
					|	СоглашенияСКлиентами.Валюта КАК ВалютаВзаиморасчетов,
					|	СоглашенияСКлиентами.Наименование КАК Наименование,
					|	СоглашенияСКлиентами.Типовое КАК Типовое,
					|	СоглашенияСКлиентами.ПорядокОплаты = ЗНАЧЕНИЕ(Перечисление.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях) КАК РасчетыВУсловныхЕдиницах
					|ПОМЕСТИТЬ ВТ_Соглашение
					|ИЗ
					|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
					|ГДЕ
					|	СоглашенияСКлиентами.Ссылка = &Ссылка";
					Запрос.Выполнить();
				ИначеЕсли ТипЗнч(СоглашениеСсылка) = Тип("СправочникСсылка.СоглашенияСПоставщиками") Тогда
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	СоглашенияСПоставщиками.Ссылка КАК Ссылка,
					|	СоглашенияСПоставщиками.Контрагент КАК Контрагент,
					|	СоглашенияСПоставщиками.Организация КАК Организация,
					|	СоглашенияСПоставщиками.Дата КАК Дата,
					|	СоглашенияСПоставщиками.Номер КАК Номер,
					|	СоглашенияСПоставщиками.Валюта КАК ВалютаВзаиморасчетов,
					|	СоглашенияСПоставщиками.Наименование КАК Наименование,
					|	ЛОЖЬ КАК Типовое,
					|	СоглашенияСПоставщиками.ПорядокОплаты = ЗНАЧЕНИЕ(Перечисление.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях) КАК РасчетыВУсловныхЕдиницах
					|ПОМЕСТИТЬ ВТ_Соглашение
					|ИЗ
					|	Справочник.СоглашенияСПоставщиками КАК СоглашенияСПоставщиками
					|ГДЕ
					|	СоглашенияСПоставщиками.Ссылка = &Ссылка";
					Запрос.Выполнить();
				КонецЕсли;
				
				Если Запрос.МенеджерВременныхТаблиц.Таблицы.Количество() > 0 Тогда
					
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	СоглашенияСКлиентами.Ссылка КАК Ссылка,
					|	СоглашенияСКлиентами.Контрагент КАК Контрагент,
					|	СоглашенияСКлиентами.Организация КАК Организация,
					|	СоглашенияСКлиентами.Дата КАК Дата,
					|	СоглашенияСКлиентами.Номер КАК Номер,
					|	СоглашенияСКлиентами.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
					|	СоглашенияСКлиентами.Наименование КАК Наименование,
					|	СоглашенияСКлиентами.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
					|	СоглашенияСКлиентами.Типовое КАК Типовое,
					|	КурсыВалютСрезПоследних.Курс КАК КурсВзаиморасчетов,
					|	КурсыВалютСрезПоследних.Кратность КАК КратностьВзаиморасчетов
					|ИЗ
					|	ВТ_Соглашение КАК СоглашенияСКлиентами
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДок, ) КАК КурсыВалютСрезПоследних
					|		ПО СоглашенияСКлиентами.ВалютаВзаиморасчетов = КурсыВалютСрезПоследних.Валюта";
					Запрос.УстановитьПараметр("ДатаДок", ДанныеИБ.Дата);
					
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Следующий() Тогда
						ЗаполнитьЗначенияСвойств(СтруктураДанныеДоговора, Выборка);
						
						Если Не ЗначениеЗаполнено(СтруктураДанныеДоговора.Контрагент) Тогда
							Если ЕстьРеквизитДанныхИБ(ДанныеИБ, "Контрагент") Тогда
								СтруктураДанныеДоговора.Контрагент = ДанныеИБ.Контрагент;
							Иначе
								СтруктураДанныеДоговора.Контрагент = ПараметрыПоУмолчанию.Контрагент;
							КонецЕсли;
						КонецЕсли;
						
						Если Не ЗначениеЗаполнено(СтруктураДанныеДоговора.Организация) Тогда
							Если ЗначениеЗаполнено(ДанныеИБ.Организация) Тогда
								СтруктураДанныеДоговора.Организация = ДанныеИБ.Организация;
							Иначе
								СтруктураДанныеДоговора.Организация = ПараметрыПоУмолчанию.Организация;
							КонецЕсли;
						КонецЕсли;
						
						Если ТипЗнч(СоглашениеСсылка) = Тип("СправочникСсылка.СоглашенияСКлиентами") Тогда
							Наименование = ?(Выборка.Типовое, НСтр("ru = 'Типовое';
																	|en = 'Standard'"), НСтр("ru = 'Индивидуальное';
																							|en = 'Individual'")) + "; ";
						Иначе
						    Наименование = "";
						КонецЕсли;
						
						Наименование = Наименование + Выборка.Наименование
							+ " " + ?(ЗначениеЗаполнено(Выборка.Номер), "№" + Выборка.Номер, "")
							+ " " + ?(ЗначениеЗаполнено(Выборка.Дата), НСтр("ru = 'от';
																			|en = 'dated'") + " " + Формат(Выборка.Дата, "ДЛФ=D"), "");
							
						СтруктураДанныеДоговора.Наименование = СокрЛП(Наименование);
						ДоговорЗаполнен = Истина;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ЭтоСделка И ДопАналитикаПоДоговорам(КомпонентыОбмена).СделкаВДоговор Тогда
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	СделкиСКлиентами.Ссылка,
				|	СделкиСКлиентами.Код КАК Номер,
				|	"""" КАК Контрагент,
				|	"""" КАК Организация,
				|	СделкиСКлиентами.ДатаНачала КАК Дата,
				|	КурсыВалютСрезПоследних.Валюта КАК ВалютаВзаиморасчетов,
				|	СделкиСКлиентами.Наименование КАК Наименование,
				|	КурсыВалютСрезПоследних.Курс КАК КурсВзаиморасчетов,
				|	КурсыВалютСрезПоследних.Кратность КАК КратностьВзаиморасчетов
				|ИЗ
				|	Справочник.СделкиСКлиентами КАК СделкиСКлиентами,
				|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДок, Валюта = &Валюта) КАК КурсыВалютСрезПоследних
				|ГДЕ
				|	СделкиСКлиентами.Ссылка = &Ссылка");
				Запрос.УстановитьПараметр("Ссылка",  СделкаСсылка);
				Запрос.УстановитьПараметр("ДатаДок", ДанныеИБ.Дата);
				Запрос.УстановитьПараметр("Валюта",  ПараметрыПоУмолчанию.ВалютаВзаиморасчетов);
				
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					ЗаполнитьЗначенияСвойств(СтруктураДанныеДоговора, Выборка);
					СтруктураДанныеДоговора.Организация = ДанныеИБ.Организация;
					Если ЕстьРеквизитДанныхИБ(ДанныеИБ, "Контрагент") Тогда
						СтруктураДанныеДоговора.Контрагент = ДанныеИБ.Контрагент;
					Иначе
						СтруктураДанныеДоговора.Контрагент = ПараметрыПоУмолчанию.Контрагент;
					КонецЕсли;
					Если ПараметрыПоУмолчанию.Свойство("РасчетыВУсловныхЕдиницах") Тогда
						СтруктураДанныеДоговора.РасчетыВУсловныхЕдиницах = ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах;
					КонецЕсли;
					СтруктураДанныеДоговора.Наименование = ?(ЗначениеЗаполнено(СделкаСсылка.Метаданные().ПредставлениеОбъекта),
						СделкаСсылка.Метаданные().ПредставлениеОбъекта, СделкаСсылка.Метаданные().Синоним)
							+ ?(ЗначениеЗаполнено(Выборка.Номер), " " + Выборка.Номер, "");
					ДоговорЗаполнен = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ДоговорЗаполнен Тогда
		ЗаполнитьЗначенияСвойств(СтруктураДанныеДоговора, ПараметрыПоУмолчанию, , "Дата, Номер");
		СтруктураДанныеДоговора.Наименование = НСтр("ru = 'Основной договор';
													|en = 'Main contract'");
	ИначеЕсли ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) > ВерсияФорматаЧислом("1.3") Тогда
		СтруктураДанныеДоговора.ВнешнийИдентификатор = СтруктураДанныеДоговора.Наименование;
	КонецЕсли;
	
	ДопРеквизиты = Новый ТаблицаЗначений;
	ДопРеквизиты.Колонки.Добавить("Свойство");
	ДопРеквизиты.Колонки.Добавить("ЗначениеСвойства");
	
	СтрокаДопРеквизитов = ДопРеквизиты.Добавить();
	СтрокаДопРеквизитов.Свойство = Новый Структура("Наименование", "ВиртуальныйДоговор");
	СтрокаДопРеквизитов.ЗначениеСвойства = "ВиртуальныйДоговор";
	
	СтруктураДанныеДоговора.Вставить("ДополнительныеРеквизиты", ДопРеквизиты);
	
	Договор = Новый Структура("Значение, ИмяПКО", СтруктураДанныеДоговора, "Справочник_ДоговорыКонтрагентов_ИзСтруктуры");
	
	ПравилоОбработки = КомпонентыОбмена.ПравилаОбработкиДанных.Найти("Справочник_ДоговорыКонтрагентов_Отправка", "Имя");
	Если Не ПравилоОбработки = Неопределено Тогда
		RM_ОбменДаннымиXDTOСервер.ВыгрузкаОбъектаВыборки(КомпонентыОбмена, СтруктураДанныеДоговора, ПравилоОбработки);
	КонецЕсли;
	
	Возврат Договор;
КонецФункции
