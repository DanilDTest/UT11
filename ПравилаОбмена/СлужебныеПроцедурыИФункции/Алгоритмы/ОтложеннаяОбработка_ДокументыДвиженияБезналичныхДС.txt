Процедура ОтложеннаяОбработка_ДокументыДвиженияБезналичныхДС(Объект, КомпонентыОбмена)
	// Заполнение аналитики по партнеру при необходимости.
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту Тогда
		ЗаполнениеПартнераВРасшифровкеПлатежа(Объект);
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Партнер", Объект.Метаданные()) Тогда
			ЗаполнениеПартнераВШапкеДокумента(Объект);
		КонецЕсли;
		
		ИменаПроверяемыхКолонок = "Заказ";
		Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПоступлениеБезналичныхДенежныхСредств") Тогда
			ИменаПроверяемыхКолонок = ИменаПроверяемыхКолонок + ",ОснованиеПлатежа";
		КонецЕсли;
		ОчиститьНесуществующиеСсылкиВТЧ(Объект, "РасшифровкаПлатежа", ИменаПроверяемыхКолонок);
		
		ДобавитьПервичныеДокументыТЧВОтложеннуюОбработку(Объект, КомпонентыОбмена);
		
	КонецЕсли;
	
	// Заполнение банковского счета физического лица при необходимости.
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета Тогда
	
		Если НЕ ЗначениеЗаполнено(Объект.БанковскийСчетКонтрагента) Тогда
			ЗаполнитьБанковскийСчетФизическогоЛица(Объект);
		КонецЕсли;
		
	КонецЕсли;
	
	// Заполнение кассы при необходимости.
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств Тогда
			
		РеквизитыКассы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.КассаПолучатель, "ВалютаДенежныхСредств, Владелец");
	
		Если РеквизитыКассы.ВалютаДенежныхСредств <> Объект.Валюта 
			Или РеквизитыКассы.Владелец <> Объект.Организация Тогда
			
			Подразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
			ПараметрыОтбора = Новый Структура(
				"Валюта,Организация,Подразделение",
				Объект.Валюта,
				Объект.Организация,
				Подразделение);
			
			Объект.КассаПолучатель = КассаПоУмолчанию(ПараметрыОтбора, КомпонентыОбмена);
			
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет
		И Не ЗначениеЗаполнено(Объект.ТипНалога) Тогда
		Если Не ЗначениеЗаполнено(Объект.ТипНалога) Тогда
			Объект.ТипНалога = Перечисления.ТипыНалогов.ПрочиеНалогиИСборы;
		КонецЕсли;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ПеречислениеВБюджет", Объект.Метаданные())
		И ОбщегоНазначения.ЕстьРеквизитОбъекта("ВидПеречисленияВБюджет", Объект.Метаданные())
		И Объект.ПеречислениеВБюджет
		И Не ЗначениеЗаполнено(Объект.ВидПеречисленияВБюджет) Тогда
		
		Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
			Объект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж;
		ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне Тогда
			Объект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж;
		Иначе
			Объект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ИнойПлатеж;
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнениеСтатьиДДСВДокументе(Объект);
	ЗаполнитьТаблицуСтатьиДДСИХозОперации(Объект, КомпонентыОбмена.ПараметрыКонвертации.ЗагруженныеСтатьиДДСИХозОперации);
	ЗаполнитьЗаявкуНаРасходованиеДС(Объект);
	
	СтрокаДокумента = ТаблицаСБДСПолучитьИзПараметров(КомпонентыОбмена).Найти(Объект.Ссылка, "ДокументСсылка");
	Если СтрокаДокумента <> Неопределено Тогда
		СсылкаНаКонтрагента = Справочники.Контрагенты.ПолучитьСсылку(СтрокаДокумента.ФизическоеЛицо.УникальныйИдентификатор());
		Если Не ОбщегоНазначения.СсылкаСуществует(СсылкаНаКонтрагента) Тогда
			НовыйКонтрагент = Справочники.Контрагенты.СоздатьЭлемент();
			НовыйКонтрагент.Наименование              = СтрокаДокумента.ФизическоеЛицо.Наименование;
			НовыйКонтрагент.ИНН                       = СтрокаДокумента.ФизическоеЛицо.ИНН;
			НовыйКонтрагент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
			НовыйКонтрагент.ЮрФизЛицо                 = Перечисления.ЮрФизЛицо.ФизЛицо;
			НовыйКонтрагент.НаименованиеПолное        = СтрокаДокумента.ФизическоеЛицо.Наименование;
			НовыйКонтрагент.ГоловнойКонтрагент        = СсылкаНаКонтрагента;
			
			НовыйКонтрагент.УстановитьСсылкуНового(СсылкаНаКонтрагента);
			НовыйКонтрагент.Записать();
			СсылкаНаКонтрагента = НовыйКонтрагент.Ссылка;
		КонецЕсли;
		Объект.Контрагент = СсылкаНаКонтрагента;
		
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
			|	БанковскиеСчетаКонтрагентов.Ссылка КАК СсылкаНаСчет
			|ИЗ
			|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчета
			|		ПО БанковскиеСчетаКонтрагентов.НомерСчета = БанковскиеСчета.НомерСчета
			|ГДЕ
			|	БанковскиеСчета.Ссылка = &БанковскийСчет
			|	И БанковскиеСчетаКонтрагентов.Владелец = &Владелец");
			
		Запрос.УстановитьПараметр("БанковскийСчет", СтрокаДокумента.БанковскийСчет);
		Запрос.УстановитьПараметр("Владелец",       СсылкаНаКонтрагента);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			БанковскийСчет = Выборка.СсылкаНаСчет;
		Иначе
			НовыйБанковскийСчет = Справочники.БанковскиеСчетаКонтрагентов.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(НовыйБанковскийСчет, СтрокаДокумента.БанковскийСчет,, "Владелец, Родитель, Код");
			
			НовыйБанковскийСчет.Владелец = СсылкаНаКонтрагента;
			НовыйБанковскийСчет.УстановитьНовыйКод();
			НовыйБанковскийСчет.Записать();
			БанковскийСчет = НовыйБанковскийСчет.Ссылка;
		КонецЕсли;
		Объект.БанковскийСчетКонтрагента = БанковскийСчет;
	КонецЕсли;
КонецПроцедуры
