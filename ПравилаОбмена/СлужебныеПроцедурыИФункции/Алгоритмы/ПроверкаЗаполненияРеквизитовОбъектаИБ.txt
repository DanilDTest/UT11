Процедура ПроверкаЗаполненияРеквизитовОбъектаИБ(ОбъектДанных, КомпонентыОбмена, ИспользованиеПКО, СинонимыРеквизитов = Неопределено, ДополнительноПроверяемыеРеквизиты = Неопределено)
	Возврат;
	
	Если ТипЗнч(ОбъектДанных) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если СинонимыРеквизитов = Неопределено Тогда
		СинонимыРеквизитов = Новый Соответствие;
	КонецЕсли;
	
	Если ДополнительноПроверяемыеРеквизиты = Неопределено Тогда
		ДополнительноПроверяемыеРеквизиты = Новый Структура;
	КонецЕсли;
	
	ПроверяемыеСтандартныеРеквизиты = Новый Структура;
	
	ПроверяемыеСтандартныеРеквизиты.Вставить("Справочники", Новый Массив);
	ПроверяемыеСтандартныеРеквизиты["Справочники"].Добавить("Код");
	ПроверяемыеСтандартныеРеквизиты["Справочники"].Добавить("Наименование");
	ПроверяемыеСтандартныеРеквизиты["Справочники"].Добавить("Владелец");
	
	ПроверяемыеСтандартныеРеквизиты.Вставить("Документы", Новый Массив);
	ПроверяемыеСтандартныеРеквизиты["Документы"].Добавить("Номер");
	ПроверяемыеСтандартныеРеквизиты["Документы"].Добавить("Дата");
	
	ПроверяемыеСтандартныеРеквизиты.Вставить("ПланыВидовХарактеристик", Новый Массив);
	ПроверяемыеСтандартныеРеквизиты["ПланыВидовХарактеристик"].Добавить("Код");
	ПроверяемыеСтандартныеРеквизиты["ПланыВидовХарактеристик"].Добавить("Наименование");
	
	ПроверяемыеСтандартныеРеквизиты.Вставить("РегистрыСведений", Новый Массив);
	ПроверяемыеСтандартныеРеквизиты["РегистрыСведений"].Добавить("Период");
	ПроверяемыеСтандартныеРеквизиты["РегистрыСведений"].Добавить("Регистратор");
	
	МД = ОбъектДанных.Метаданные();
	ВидОбъекта = ОбщегоНазначения.ИмяБазовогоТипаПоОбъектуМетаданных(МД);
	
	РеквизитыОбъекта            = МД.Реквизиты;
	СтандартныеРеквизитыОбъекта = МД.СтандартныеРеквизиты;
	
	ПроверяемыеСтандартныеРеквизитыОбъекта = Неопределено;
	Если Не ПроверяемыеСтандартныеРеквизиты.Свойство(ВидОбъекта, ПроверяемыеСтандартныеРеквизитыОбъекта) Тогда
		ПроверяемыеСтандартныеРеквизитыОбъекта = Новый Массив;
	КонецЕсли;
	
	Для Каждого КлючЗначение Из ИспользованиеПКО Цикл
		
		Если Не КлючЗначение.Значение Тогда
			Продолжить;
		КонецЕсли;
			
		ТекстОшибки    = "";
		ТекПКО         = RM_ОбменДаннымиXDTOСервер.ПКОПоИмени(КомпонентыОбмена, КлючЗначение.Ключ);
		ТипОбъектаXDTO = ФабрикаXDTO.Тип(КомпонентыОбмена.XMLСхема, ТекПКО.ОбъектФормата);
		
		ОбязательныеСвойстваФормата = Новый Массив;
		
		Для Каждого ТекСвойство Из ТипОбъектаXDTO.Свойства Цикл
			
			Если ТекСвойство.Имя = "КлючевыеСвойства" Или ТекСвойство.Имя = "ОбщиеДанные" Тогда
				
				Для Каждого КлючСвойство Из ТекСвойство.Тип.Свойства Цикл
					Если КлючСвойство.НижняяГраница > 0 Тогда
						ОбязательныеСвойстваФормата.Добавить(КлючСвойство.Имя);
					КонецЕсли
				КонецЦикла;
				
			ИначеЕсли ТекСвойство.НижняяГраница > 0 Тогда
				ОбязательныеСвойстваФормата.Добавить(ТекСвойство.Имя);
			КонецЕсли
			
		КонецЦикла;
		
		// Выполняем проверку свойств формата обязательных к заполнению,
		// заполняемые не с помощью алгоритма конвертации,
		// и имеющие прямое сопоставление реквизита конфигурации и свойства формата.
		// Дополнительно вызывается проверка реквизитов, которые переданы отдельно
		// в структуре ДополнительноПроверяемыеРеквизиты.
		Для Каждого ТекПКС Из ТекПКО.Свойства Цикл
			
			Если (Не ТекПКС.ИспользуетсяАлгоритмКонвертации
				И ЗначениеЗаполнено(ТекПКС.СвойствоКонфигурации)
				И СтрНайти(ТекПКС.СвойствоКонфигурации, ".") = 0
				И ОбязательныеСвойстваФормата.Найти(ТекПКС.СвойствоФормата) <> Неопределено)
				Или ДополнительноПроверяемыеРеквизиты.Свойство(ТекПКС.СвойствоКонфигурации) Тогда
				
				Если (ПроверяемыеСтандартныеРеквизитыОбъекта.Найти(ТекПКС.СвойствоКонфигурации) <> Неопределено
						Или ОбщегоНазначения.ЭтоСтандартныйРеквизит(СтандартныеРеквизитыОбъекта, ТекПКС.СвойствоКонфигурации))
					И Не ЗначениеЗаполнено(ОбъектДанных[ТекПКС.СвойствоКонфигурации]) Тогда
					
					МДРеквизиты = СтандартныеРеквизитыОбъекта;
							
				ИначеЕсли РеквизитыОбъекта.Найти(ТекПКС.СвойствоКонфигурации) <> Неопределено
					И (РеквизитыОбъекта[ТекПКС.СвойствоКонфигурации].ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку
						Или ДополнительноПроверяемыеРеквизиты.Свойство(ТекПКС.СвойствоКонфигурации))
					И Не ЗначениеЗаполнено(ОбъектДанных[ТекПКС.СвойствоКонфигурации]) Тогда
					
					МДРеквизиты = РеквизитыОбъекта;
					
				Иначе
					Продолжить;
				КонецЕсли;
				
				ПредставлениеРеквизита = МДРеквизиты[ТекПКС.СвойствоКонфигурации].Синоним;
				
				Если Не ЗначениеЗаполнено(ПредставлениеРеквизита) Тогда 
					ПредставлениеРеквизита = МДРеквизиты[ТекПКС.СвойствоКонфигурации].Имя;
				КонецЕсли;
				
				ТекстОшибки = ТекстОшибки + Символы.ПС + "- "
					+ ?(СинонимыРеквизитов[ТекПКС.СвойствоКонфигурации] <> Неопределено,
						СинонимыРеквизитов[ТекПКС.СвойствоКонфигурации], ПредставлениеРеквизита) + ",";
				
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ТекстОшибки) Тогда
			
			ТекстОшибки = Сред(ТекстОшибки, 1, СтрДлина(ТекстОшибки)-1) + ".";
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В объекте %1 не заполнены реквизиты:';
																						|en = 'Attributes are not populated in the %1 object:'"), ОбъектДанных) + ТекстОшибки;
			RM_ОбменДаннымиXDTOСервер.ЗаписьЖурналаРегистрацииОбменДанными(ТекстОшибки, КомпонентыОбмена, , ОбъектДанных.Ссылка);
			
			ИспользованиеПКО[КлючЗначение.Ключ] = Ложь;
			
			КомпонентыОбмена.ФлагОшибки = Истина;
			КомпонентыОбмена.СостояниеОбменаДанными.РезультатВыполненияОбмена = Перечисления.РезультатыВыполненияОбмена.Ошибка;
			
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
