Функция ВыгрузитьТаблицуЗадолженности(ИмяТЧ, Ссылка, ТекКонтрагент, ТекОрганизация, ОрганизацияДокумента = Неопределено, КомпонентыОбмена)
	ТекстЗапроса = "ВЫБРАТЬ
		|	Задолженность.Заказ КАК Заказ,
		|	Задолженность.ТипРасчетов КАК ВидРасчетов,
		|	Задолженность.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
		|	Задолженность.СуммаРегл КАК Сумма,
		|	Задолженность.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	ЕстьNULL(КурсыВалют.Курс, 1) КАК КурсВзаиморасчетов,
		|	ЕстьNULL(КурсыВалют.Кратность, 1) КАК КратностьВзаиморасчетов
		|ИЗ Документ.%1.%2 КАК Задолженность
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДок) КАК КурсыВалют
		|	ПО Задолженность.ВалютаВзаиморасчетов = КурсыВалют.Валюта 
		|ГДЕ
		|	Задолженность.Ссылка = &Ссылка";
	
	Запрос = Новый Запрос;
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.СписаниеЗадолженности") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Задолженность.СуммаРегл КАК",
			"ВЫРАЗИТЬ(Задолженность.Сумма * ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК ЧИСЛО(15, 2)) КАК");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Задолженность.СуммаВзаиморасчетов КАК", "Задолженность.Сумма КАК");
	КонецЕсли;
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, Ссылка.Метаданные().Имя, ИмяТЧ);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаДок", Ссылка.Дата);
	ДанныеЗадолженность = Запрос.Выполнить().Выгрузить();
	
	ДанныеЗадолженность.Колонки.Добавить("Договор");
	ДанныеЗадолженность.Колонки.Добавить("ДокументРасчетов");
	
	Для Каждого СтрокаТаблицы Из ДанныеЗадолженность Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.Заказ) Тогда
			
			ТипЗаказа = ТипЗнч(СтрокаТаблицы.Заказ);
			
			Если ТипЗаказа = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
				СтрокаТаблицы.Договор = СтрокаТаблицы.Заказ;
			Иначе
				Если СтрокаТаблицы.Заказ.Метаданные().Реквизиты.Найти("Договор") <> Неопределено Тогда
					ТекДоговор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТаблицы.Заказ, "Договор");
					Если ТипЗнч(ТекДоговор) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
						СтрокаТаблицы.Договор = ТекДоговор;
					КонецЕсли;
				КонецЕсли;
				
				ИмяПКО = ИмяПКОДляОбъектаДанных(КомпонентыОбмена, СтрокаТаблицы.Заказ, ТекКонтрагент);
				
				Если Не ПустаяСтрока(ИмяПКО) Тогда
					СтрокаТаблицы.ДокументРасчетов = Новый Структура("Значение, ИмяПКО", СтрокаТаблицы.Заказ, ИмяПКО);
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.Договор) Тогда
			Продолжить;
		КонецЕсли;
		
		ИнвертироватьПараметрыДоговора = Ложь;
		РасчетыВУсловныхЕдиницах       = Ложь;
		ВидДоговора                    = "";
		
		Если ЗначениеЗаполнено(ОрганизацияДокумента)
			И ОрганизацияДокумента <> ТекОрганизация Тогда
			ИнвертироватьПараметрыДоговора = Истина;
		КонецЕсли;
		
		ПолучитьПараметрыДоговораПоЗаказу(СтрокаТаблицы.Заказ, СтрокаТаблицы.ВидРасчетов,
			ВидДоговора, РасчетыВУсловныхЕдиницах, ИнвертироватьПараметрыДоговора);
		
		ПараметрыПоУмолчанию = Новый Структура(ДоговорФиксированнаяСтруктураКлючей());
		ПараметрыПоУмолчанию.Организация              = ТекОрганизация;
		ПараметрыПоУмолчанию.ВалютаВзаиморасчетов     = СтрокаТаблицы.ВалютаВзаиморасчетов;
		ПараметрыПоУмолчанию.РасчетыВУсловныхЕдиницах = РасчетыВУсловныхЕдиницах;
		ПараметрыПоУмолчанию.ВидДоговора              = ВидДоговора; 
		ПараметрыПоУмолчанию.Контрагент               = ТекКонтрагент;
		
		СтрокаТаблицы.Договор = ДоговорИнструкцияКонвертацииПоДаннымВзаиморасчетов(ПараметрыПоУмолчанию, КомпонентыОбмена, СтрокаТаблицы.Заказ, Ссылка);
		
	КонецЦикла;
	
	ДанныеЗадолженность.Колонки.Удалить("Заказ");
	
	Возврат ДанныеЗадолженность;
КонецФункции
