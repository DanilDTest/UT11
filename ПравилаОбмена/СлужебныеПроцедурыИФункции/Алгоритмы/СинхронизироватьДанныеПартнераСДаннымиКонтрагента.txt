Процедура СинхронизироватьДанныеПартнераСДаннымиКонтрагента(ПартнерОбъект, Контрагент, КомпонентыОбмена)
	Если ПартнерОбъект.ЭтоНовый() Тогда
		ПартнерОбъект.ДатаРегистрации = Дата('19800101');
		ПартнерОбъект.Клиент          = Истина;
		ПартнерОбъект.Поставщик       = Истина;
		ПартнерОбъект.ПрочиеОтношения = Истина;
		ПартнерОбъект.ГруппаДоступа   = ЭлементПоУмолчанию(КомпонентыОбмена, "ГруппаДоступаПартнера");
		
		ПартнерОбъект.УстановитьНовыйКод(ОбменДаннымиСервер.ПрефиксИнформационнойБазы());
	КонецЕсли;
	
	// Синхронизация свойств контрагента и партнера.
	Если ПартнерОбъект.Ссылка <> Справочники.Партнеры.НеизвестныйПартнер Тогда
		
		ПартнерОбъект.Наименование        = Контрагент.Наименование;
		ПартнерОбъект.НаименованиеПолное  = Контрагент.НаименованиеПолное;
		
		Если Контрагент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
			ПартнерОбъект.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо;
		Иначе
			ПартнерОбъект.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.Компания;
		КонецЕсли;
		
		ПартнерОбъект.КонтактнаяИнформация.Очистить();
		Для Каждого СтрокаКИКонтрагента Из Контрагент.КонтактнаяИнформация Цикл
			
			Если СтрокаКИКонтрагента.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтрагента Тогда
				ВидКиПартнера = Справочники.ВидыКонтактнойИнформации.EmailПартнера;
			ИначеЕсли СтрокаКИКонтрагента.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента Тогда
				ВидКиПартнера = Справочники.ВидыКонтактнойИнформации.ТелефонПартнера;
			ИначеЕсли СтрокаКИКонтрагента.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента Тогда
				ВидКиПартнера = Справочники.ВидыКонтактнойИнформации.АдресПартнера;
			Иначе
				Продолжить;
			КонецЕсли;
			
			СтрокаКиПартнера = ПартнерОбъект.КонтактнаяИнформация.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаКИПартнера, СтрокаКиКонтрагента);
			СтрокаКИПартнера.Вид = ВидКиПартнера;
			
		КонецЦикла;
		
		БылаПометкаУдаления = ПартнерОбъект.ПометкаУдаления;
		ПартнерОбъект.ПометкаУдаления = Ложь;
		
		ПартнерОбъект.ОбменДанными.Загрузка = Истина;
		ПартнерОбъект.Записать();
		
	//	Если БылаПометкаУдаления Тогда
	//		ДопСвойства = Новый Структура("ЭтоНовый, ПометкаУдаленияДоЗаписи");
	//		ДопСвойства.ЭтоНовый                = ПартнерОбъект.ЭтоНовый();
	//		ДопСвойства.ПометкаУдаленияДоЗаписи = БылаПометкаУдаления;
	//		
	//		ОбщегоНазначенияУТ.УстановитьПометкуУдаленияКлюча("Справочник.КлючиАналитикиУчетаПоПартнерам",
	//														ПартнерОбъект.Ссылка,
	//														ДопСвойства,
	//														Ложь,
	//														Ложь);
	//	КонецЕсли;
		
		ПартнерыИКонтрагенты.ЗаписатьИерархиюПартнера(ПартнерОбъект.Ссылка);
		
	КонецЕсли;
КонецПроцедуры
