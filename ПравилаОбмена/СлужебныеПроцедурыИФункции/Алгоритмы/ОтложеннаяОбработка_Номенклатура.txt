Процедура ОтложеннаяОбработка_Номенклатура(Объект, КомпонентыОбмена)
	Если Не ЗначениеЗаполнено(Объект.ГруппаДоступа) Тогда
		Объект.ГруппаДоступа = ЭлементПоУмолчанию(КомпонентыОбмена, "ГруппаДоступаНоменклатуры");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Качество) Тогда
		Объект.Качество = Перечисления.ГрадацииКачества.Новый;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ВариантОформленияПродажи) Тогда
		Объект.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ИспользованиеХарактеристик) Тогда
		КомпонентыОбмена.ПараметрыКонвертации.НоменклатураДляОтложеннойОбработки.Добавить(Объект.Ссылка);
	КонецЕсли;
	
	#Область ВидНоменклатуры
	Если Не ЗначениеЗаполнено(Объект.ВидНоменклатуры)
		И ЗначениеЗаполнено(Объект.ТипНоменклатуры) Тогда
		// Вид номенклатуры подбирается по типу и по признаку алкогольной продукции.
		ВидНоменклатуры = Неопределено;
		
		ПараметрыПоиска = Новый Структура("ТипНоменклатуры, АлкогольнаяПродукция");
		ЗаполнитьЗначенияСвойств(ПараметрыПоиска, Объект);
		НайдСтроки = КомпонентыОбмена.ПараметрыКонвертации.ВидыНоменклатурыПоУмолчанию.НайтиСтроки(ПараметрыПоиска);
		НайдСтрока = ?(НайдСтроки.Количество() = 0, Неопределено, НайдСтроки[0]);
	
		Если НайдСтрока = Неопределено Тогда
	
			НеобходимоСоздатьЭлемент = Ложь;
	
			Если ПараметрыПоиска.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар Тогда
				НаименованиеЭлементаДляОбменаПоУмолчанию = НСтр("ru = 'Товар';
																|en = 'Goods'", Метаданные.ОсновнойЯзык.КодЯзыка); // строка записывается в ИБ
			ИначеЕсли ПараметрыПоиска.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
				НаименованиеЭлементаДляОбменаПоУмолчанию = НСтр("ru = 'Услуга';
																|en = 'Service'", Метаданные.ОсновнойЯзык.КодЯзыка); // строка записывается в ИБ
			КонецЕсли;
			
			Если ПараметрыПоиска.АлкогольнаяПродукция Тогда
				НаименованиеЭлементаДляОбменаПоУмолчанию = НаименованиеЭлементаДляОбменаПоУмолчанию + "; Алк";
			КонецЕсли;
	
			Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 2
			|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
			|	ВЫБОР
			|		КОГДА ВидыНоменклатуры.Наименование = &НаименованиеЭлементаДляОбменаПоУмолчанию
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
			|ИЗ
			|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
			|ГДЕ
			|	НЕ ВидыНоменклатуры.ПометкаУдаления
			|	И ВидыНоменклатуры.ТипНоменклатуры = &ТипНоменклатуры
			|	И ВидыНоменклатуры.АлкогольнаяПродукция = &АлкогольнаяПродукция
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
	
			Запрос.УстановитьПараметр("ТипНоменклатуры", ПараметрыПоиска.ТипНоменклатуры);
			Запрос.УстановитьПараметр("АлкогольнаяПродукция", ПараметрыПоиска.АлкогольнаяПродукция);
			Запрос.УстановитьПараметр("НаименованиеЭлементаДляОбменаПоУмолчанию", НаименованиеЭлементаДляОбменаПоУмолчанию);
			РезультатЗапроса = Запрос.Выполнить();
	
			Выборка = РезультатЗапроса.Выбрать();
			Если Выборка.Следующий() Тогда
				Если Выборка.Количество() = 1 Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
					ВидНоменклатуры = Выборка.ВидНоменклатуры;
				Иначе
					НеобходимоСоздатьЭлемент = Истина;
				КонецЕсли;
			Иначе
				НеобходимоСоздатьЭлемент = Истина;
			КонецЕсли;
	
			// Создание элемента для обмена с заданными параметрами
			Если НеобходимоСоздатьЭлемент Тогда
				
				ВидНоменклатурыОбъект = Справочники.ВидыНоменклатуры.СоздатьЭлемент();
				
				ЗаполнитьЗначенияСвойств(ВидНоменклатурыОбъект, ПараметрыПоиска);
				
				ВидНоменклатурыОбъект.Наименование                            = НаименованиеЭлементаДляОбменаПоУмолчанию;
				ВидНоменклатурыОбъект.Описание                                = НСтр("ru = '#Создан автоматически при обмене на основе универсального формата данных';
																					|en = '#Created automatically while exchanging based on the universal data format'", Метаданные.ОсновнойЯзык.КодЯзыка); // строка записывается в ИБ
				ВидНоменклатурыОбъект.ВариантОформленияПродажи                = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
				ВидНоменклатурыОбъект.ИспользованиеХарактеристик              = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать;
				ВидНоменклатурыОбъект.НастройкаИспользованияСерий             = Перечисления.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара;
				ВидНоменклатурыОбъект.ТочностьУказанияСрокаГодностиСерии      = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоДней;
				ВидНоменклатурыОбъект.ШаблонНаименованияДляПечатиНоменклатуры = "[Наименование]";
				ВидНоменклатурыОбъект.ШаблонНаименованияДляПечатиНоменклатуры = "[Наименование]";
				ВидНоменклатурыОбъект.ИспользованиеХарактеристик              = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать;
				
				// Заполнение группы доступа
				Если Не ЗначениеЗаполнено(ВидНоменклатурыОбъект.ГруппаДоступа)
					И ПолучитьФункциональнуюОпцию("ИспользоватьГруппыДоступаНоменклатуры") Тогда
					ВидНоменклатурыОбъект.ГруппаДоступа = Объект.ГруппаДоступа;
				КонецЕсли;
				
				Попытка
					ВидНоменклатурыОбъект.Записать();
					ВидНоменклатуры = ВидНоменклатурыОбъект.Ссылка;
				Исключение
					ВидНоменклатуры = Справочники.ВидыНоменклатуры.ПустаяСсылка();
					ЗаписатьОшибкуВЖурналРегистрации(ВидНоменклатуры,
						ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), КомпонентыОбмена);
				КонецПопытки
			КонецЕсли;
			
			НоваяСтрока = КомпонентыОбмена.ПараметрыКонвертации.ВидыНоменклатурыПоУмолчанию.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ПараметрыПоиска);
			НоваяСтрока.ВидНоменклатуры = ВидНоменклатуры;
			
		Иначе
			ВидНоменклатуры = НайдСтрока.ВидНоменклатуры;
		КонецЕсли;	
		Объект.ВидНоменклатуры = ВидНоменклатуры;
	КонецЕсли;
	#КонецОбласти
КонецПроцедуры
