Процедура ЗаполнениеСоглашенияСПоставщикомВШапкеДокумента(Объект, ПараметрыКонвертации, ХозОперацияСоглашения = Неопределено)
	// Необходимые проверки перед заполнением соглашения в шапке документа.
	// Проверка на использование соглашений по функциональным опциям
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСПоставщиками") Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка на заполненность обязательных, для подбора соглашений реквизитов.
	// Если хотя бы один реквизит не заполнен, невозможно найти или создать соглашение.
	Если Не (ЗначениеЗаполнено(Объект.Партнер)
		И ОбщегоНазначения.СсылкаСуществует(Объект.Партнер)) Тогда
		Возврат;
	КонецЕсли;
	
	// Поиск подходящего соглашения.
	// 1. Проверить, заполнено ли соглашение в документе.
	//    Если соглашение в документе заполнено, тогда проверить соответствует ли реквизиты соглашения,
	//    реквизитам документа. При соответствии реквизитов соглашения реквизитам документа,
	//    изменять соглашение в документе не требуется.
	// 2. Если соглашение в документе не заполнено, или реквизиты соглашения не соответствуют
	//    реквизитам документа, осуществим подбор соглашения в документ из уже имеющихся в базе соглашений.
	// 3. Если подобрать соглашение не удалось, создаем новое соглашение.
	
	// Инициализируем ключевые свойства соглашения.
	ИспользоватьСоглашения                = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСПоставщиками");
	ИспользоватьДоговорыКонтрагентов      = ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыСПоставщиками");
	СоглашениеСодержитДоговор             = ИспользоватьДоговорыКонтрагентов И ЗначениеЗаполнено(Объект.Договор)
		И ОбщегоНазначения.СсылкаСуществует(Объект.Договор);
	ПорядокРасчетов                       = Перечисления.ПорядокРасчетов.ПоЗаказамНакладным;
	
	Если НЕ СоглашениеСодержитДоговор И ЗначениеЗаполнено(Объект.Договор) Тогда
		Объект.Договор = Неопределено;
	КонецЕсли;
	
	Если ХозОперацияСоглашения = Неопределено Тогда
		Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаКомиссию
			Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту Тогда
			ХозОперацияСоглашения = Перечисления.ХозяйственныеОперации.ПриемНаКомиссию;
		ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту Тогда
			ХозОперацияСоглашения = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту;
		ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС Тогда
			ХозОперацияСоглашения = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС;
		Иначе
			ХозОперацияСоглашения = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		КонецЕсли;
	КонецЕсли;
	
	ВалютаВзаиморасчетовСоглашения = ?(ОбщегоНазначения.ЕстьРеквизитОбъекта("ВалютаВзаиморасчетов", Объект.Метаданные()), 
		Объект.ВалютаВзаиморасчетов, Объект.Валюта);
		
	Если ВалютаВзаиморасчетовСоглашения = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях;
	ИначеЕсли ВалютаВзаиморасчетовСоглашения <> Объект.Валюта Тогда
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях;
	Иначе
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВВалюте;
	КонецЕсли;
	
	Если СоглашениеСодержитДоговор Тогда
		
		РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Договор, "ВалютаВзаиморасчетов, ПорядокОплаты, ПорядокРасчетов");
		
		Если ЗначениеЗаполнено(РеквизитыДоговора.ВалютаВзаиморасчетов) Тогда
			ВалютаВзаиморасчетовСоглашения = РеквизитыДоговора.ВалютаВзаиморасчетов;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РеквизитыДоговора.ПорядокОплаты) Тогда
			ПорядокОплаты = РеквизитыДоговора.ПорядокОплаты;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РеквизитыДоговора.ПорядокРасчетов) Тогда
			ПорядокРасчетов = РеквизитыДоговора.ПорядокРасчетов;
		КонецЕсли;
		
	КонецЕсли;
	
	// Инициализируем доп. условия для подбора соглашений.
	УсловиеПоИспользованиюДоговоровКонтрагентов    = "";
	ШаблонДополнительныхУсловий                    = "%1";
	
	Если СоглашениеСодержитДоговор Тогда
		УсловиеПоИспользованиюДоговоровКонтрагентов = "И СоглашенияСПоставщиками.ИспользуютсяДоговорыКонтрагентов";
	Иначе
		УсловиеПоИспользованиюДоговоровКонтрагентов = "И НЕ СоглашенияСПоставщиками.ИспользуютсяДоговорыКонтрагентов";
	КонецЕсли;
	
	ТекстДополнительныхУсловий = СтрШаблон(ШаблонДополнительныхУсловий, УсловиеПоИспользованиюДоговоровКонтрагентов);
	
	// Пункт 1. Проверим, является ли заполненное в объекте соглашение корректным для данного документа.
	// Если соглашение корректное, то дальнейшего подбора не требуется.
	СоглашениеЗаполненоКорректно = Ложь;
	Если ЗначениеЗаполнено(Объект.Соглашение) Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ
			|	СоглашенияСПоставщиками.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.СоглашенияСПоставщиками КАК СоглашенияСПоставщиками
			|ГДЕ
			|	СоглашенияСПоставщиками.Ссылка = &СоглашениеВОбъекте
			|	И СоглашенияСПоставщиками.Партнер = &Партнер
			|	И СоглашенияСПоставщиками.Валюта = &Валюта
			|	И СоглашенияСПоставщиками.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов
			|	И СоглашенияСПоставщиками.ХозяйственнаяОперация = &ХозОперация
			|	И СоглашенияСПоставщиками.Организация = &Организация
			|	И СоглашенияСПоставщиками.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
			|	[ДополнительныеУсловия]
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СоглашенияСПоставщиками.Ссылка
			|ИЗ
			|	Справочник.СоглашенияСПоставщиками КАК СоглашенияСПоставщиками
			|ГДЕ
			|	СоглашенияСПоставщиками.Ссылка = &СоглашениеВОбъекте
			|	И СоглашенияСПоставщиками.Партнер = &Партнер
			|	И СоглашенияСПоставщиками.Валюта = &Валюта
			|	И СоглашенияСПоставщиками.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов
			|	И СоглашенияСПоставщиками.ХозяйственнаяОперация = &ХозОперация
			|	И СоглашенияСПоставщиками.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|	И СоглашенияСПоставщиками.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
			|	[ДополнительныеУсловия]");
			
		Запрос.УстановитьПараметр("СоглашениеВОбъекте",   Объект.Соглашение);
		Запрос.УстановитьПараметр("Организация",          Объект.Организация);
		Запрос.УстановитьПараметр("Валюта",               Объект.Валюта);
		Запрос.УстановитьПараметр("ВалютаВзаиморасчетов", ВалютаВзаиморасчетовСоглашения);
		Запрос.УстановитьПараметр("Партнер",              Объект.Партнер);
		Запрос.УстановитьПараметр("ХозОперация",          ХозОперацияСоглашения);
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"[ДополнительныеУсловия]", ТекстДополнительныхУсловий);
		СоглашениеЗаполненоКорректно = Не Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Если СоглашениеЗаполненоКорректно Тогда
		Возврат;
	КонецЕсли;
	
	// Пункт 2. Попробуем подобрать подходящий элемент по умолчанию, среди уже имеющихся в базе соглашений.
	// При формировании наименования по умолчанию, платформенное представление объектов применять нельзя,
	// т.к. организация, партнер или валюта могут отсутствовать в базе,
	// и платформа сформирует представление: «Объект не найден».
	// Необходимо формировать наименование с учетом данного поведения платформы.
	// Если один из объектов формирующих наименование по умолчанию отсутствует в базе,
	// то его наименование должно быть заменено пустой строкой.
	ШаблонНаименованияСоглашенияПоУмолчанию = НСтр("ru = '%1 , %2, %3, %4 (по умолчанию)';
													|en = '%1 , %2, %3, %4 (by default)'");
	
	НаименованиеОрганизации = "";
	НаименованиеПартнера    = "";
	НаименованиеВалюты      = "";
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		НаименованиеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "Наименование");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Партнер) Тогда
		НаименованиеПартнера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Партнер, "Наименование");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВалютаВзаиморасчетовСоглашения) Тогда
		НаименованиеВалюты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВалютаВзаиморасчетовСоглашения, "Наименование");
	КонецЕсли;
	
	НаименованиеСоглашенияПоУмолчанию = СтрШаблон(ШаблонНаименованияСоглашенияПоУмолчанию,
		НаименованиеПартнера, ХозОперацияСоглашения, НаименованиеОрганизации, НаименованиеВалюты);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",             Объект.Организация);
	Запрос.УстановитьПараметр("Валюта",                  Объект.Валюта);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов",    ВалютаВзаиморасчетовСоглашения);
	Запрос.УстановитьПараметр("Партнер",                 Объект.Партнер);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",   ХозОперацияСоглашения);
	Запрос.УстановитьПараметр("НаименованиеПоУмолчанию", НаименованиеСоглашенияПоУмолчанию);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
		|	СоглашенияСПоставщиками.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА СоглашенияСПоставщиками.Наименование = &НаименованиеПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЗначениеПоУмолчанию
		|ИЗ
		|	Справочник.СоглашенияСПоставщиками КАК СоглашенияСПоставщиками
		|ГДЕ
		|	СоглашенияСПоставщиками.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСПоставщиками.Действует)
		|	И СоглашенияСПоставщиками.ХозяйственнаяОперация = &ХозяйственнаяОперация
		|	И СоглашенияСПоставщиками.Валюта = &Валюта
		|	И СоглашенияСПоставщиками.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов
		|	И СоглашенияСПоставщиками.Организация = &Организация
		|	И СоглашенияСПоставщиками.Партнер = &Партнер
		|	И НЕ СоглашенияСПоставщиками.ПометкаУдаления
		|	[ДополнительныеУсловия]
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
		|	СоглашенияСПоставщиками.Ссылка,
		|	ВЫБОР
		|		КОГДА СоглашенияСПоставщиками.Наименование = &НаименованиеПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	Справочник.СоглашенияСПоставщиками КАК СоглашенияСПоставщиками
		|ГДЕ
		|	СоглашенияСПоставщиками.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСПоставщиками.Действует)
		|	И СоглашенияСПоставщиками.ХозяйственнаяОперация = &ХозяйственнаяОперация
		|	И СоглашенияСПоставщиками.Валюта = &Валюта
		|	И СоглашенияСПоставщиками.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов
		|	И СоглашенияСПоставщиками.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	И СоглашенияСПоставщиками.Партнер = &Партнер
		|	И НЕ СоглашенияСПоставщиками.ПометкаУдаления
		|	[ДополнительныеУсловия]
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЗначениеПоУмолчанию УБЫВ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"[ДополнительныеУсловия]", ТекстДополнительныхУсловий);
	Выборка = Запрос.Выполнить().Выбрать();
	
	СоздатьСоглашение = Истина;
	
	Если Выборка.Количество() = 1 Тогда
		// Только один подходящий - его подставим.
		Выборка.Следующий();
		СоздатьСоглашение = Ложь;
		Объект.Соглашение = Выборка.Ссылка;
	Иначе
		// Поиск уже созданного ранее соглашения по умолчанию.
		Пока Выборка.Следующий() Цикл
			Если Выборка.ЭтоЗначениеПоУмолчанию Тогда
				СоздатьСоглашение = Ложь;
				Объект.Соглашение = Выборка.Ссылка;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не СоздатьСоглашение Тогда
		// Соглашение подобрано, создавать новое не требуется.
		Возврат;
	КонецЕсли;
	
	// Создадим соглашение по умолчанию.
	НовоеСоглашение = Справочники.СоглашенияСПоставщиками.СоздатьЭлемент();
	НовоеСоглашение.Наименование                     = НаименованиеСоглашенияПоУмолчанию;
	НовоеСоглашение.Статус                           = Перечисления.СтатусыСоглашенийСПоставщиками.Действует;
	НовоеСоглашение.ХозяйственнаяОперация            = ХозОперацияСоглашения;
	НовоеСоглашение.Валюта                           = Объект.Валюта;
	НовоеСоглашение.ВалютаВзаиморасчетов             = ВалютаВзаиморасчетовСоглашения;
	НовоеСоглашение.Организация                      = Объект.Организация;
	НовоеСоглашение.Согласован                       = Истина;
	НовоеСоглашение.ВариантПриемкиТоваров            = Константы.ВариантПриемкиТоваров.Получить();
	НовоеСоглашение.ИспользуютсяДоговорыКонтрагентов = СоглашениеСодержитДоговор;
	НовоеСоглашение.Партнер                          = Объект.Партнер;
	НовоеСоглашение.Контрагент                       = Объект.Контрагент;
	НовоеСоглашение.ПорядокОплаты                    = ПорядокОплаты;
	НовоеСоглашение.ПорядокРасчетов                  = ПорядокРасчетов;
	
	НовоеСоглашение.Записать();
	Объект.Соглашение = НовоеСоглашение.Ссылка;
КонецПроцедуры
