Процедура СФВыданный_ВыгрузитьДокументыОснования(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетФактура", ДанныеИБ.Ссылка);
	
	Если НЕ ДанныеИБ.Корректировочный Тогда
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДокументОснование,
			|	Неопределено КАК ИсходныйДокумент
			|ИЗ 
			|	Документ.СчетФактураВыданный.ДокументыОснования
			|ГДЕ 
			|	Ссылка = &СчетФактура";
	Иначе
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СчетФактураВыданныйДокументыОснования.ДокументОснование КАК ДокументОснование,
			|	ЕСТЬNULL(СчетФактураВыданныйТовары.ПредыдущийСчетФактура, НЕОПРЕДЕЛЕНО) КАК ИсходныйДокумент
			|ИЗ
			|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
			|		ПО СчетФактураВыданныйДокументыОснования.Ссылка = СчетФактураВыданныйТовары.Ссылка
			|ГДЕ
			|	СчетФактураВыданныйДокументыОснования.Ссылка = &СчетФактура";
	КонецЕсли;
	
	ВыборкаТЧ = Запрос.Выполнить().Выбрать();
	
	ДокументыОснования = Новый ТаблицаЗначений();
	ДокументыОснования.Колонки.Добавить("ДокументОснование");
	ДокументыОснования.Колонки.Добавить("ИсходныйДокумент");
	
	Пока ВыборкаТЧ.Следующий() Цикл
		
		ДокументОснование = ВыборкаТЧ.ДокументОснование;
	
		ИмяПКО = ИмяПКОДляОбъектаДанных(КомпонентыОбмена, ДокументОснование, ДанныеИБ.Организация);
		
		Если НЕ (ЗначениеЗаполнено(ДокументОснование) И ЗначениеЗаполнено(ИмяПКО)) Тогда
			Продолжить;
		КонецЕсли;
			
		СтрокаОснование = ДокументыОснования.Добавить();
		СтрокаОснование.ДокументОснование = Новый Структура("Значение, ИмяПКО", ДокументОснование, ИмяПКО);
		Если ЗначениеЗаполнено(ВыборкаТЧ.ИсходныйДокумент) Тогда
			СтрокаОснование.ИсходныйДокумент = ВыборкаТЧ.ИсходныйДокумент;
		КонецЕсли;
	
	КонецЦикла;
	
	ДанныеXDTO.Вставить("ДокументыОснования", ДокументыОснования);
КонецПроцедуры
