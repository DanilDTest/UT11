Процедура ЗаполнениеСоглашенияСКлиентомВШапкеДокумента(Объект, ХозОперацияСоглашения = Неопределено, ТиповоеСоглашение = Ложь, ИспользоватьДоговораКонтрагентов = Неопределено)
	// Необходимые проверки перед заполнением соглашения в шапке документа.
	// Проверка на использование соглашений по функциональным опциям
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами") Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка на заполненность обязательных, для подбора соглашений реквизитов.
	// Если хотя бы один реквизит не заполнен, невозможно найти или создать соглашение.
	Если Не (ЗначениеЗаполнено(Объект.Партнер)
		И ОбщегоНазначения.СсылкаСуществует(Объект.Партнер)) Тогда
		Возврат;
	КонецЕсли;
	
	// Поиск подходящего соглашения.
	// 1. Проверить, заполнено ли соглашение в документе.
	//    Если соглашение в документе заполнено, тогда проверить соответствует ли реквизиты соглашения,
	//    реквизитам документа. При соответствии реквизитов соглашения реквизитам документа,
	//    изменять соглашение в документе не требуется.
	// 2. Если соглашение в документе не заполнено, или реквизиты соглашения не соответствуют
	//    реквизитам документа, осуществим подбор соглашения в документ из уже имеющихся в базе соглашений.
	// 3. Если подобрать соглашение не удалось, создаем новое соглашение.
	
	// Инициализируем ключевые свойства соглашения.
	ИспользоватьТиповыеСоглашения                  = ?(ТиповоеСоглашение, Истина, ПолучитьФункциональнуюОпцию("ИспользоватьТиповыеСоглашенияСКлиентами"));
	ИспользоватьИндивидуальныеСоглашения           = ?(ТиповоеСоглашение, Ложь,ПолучитьФункциональнуюОпцию("ИспользоватьИндивидуальныеСоглашенияСКлиентами"));
	ИспользоватьДоговорыКонтрагентов               = ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыСКлиентами");
	ОтгрузкаБезПереходаПраваСобственности          = Ложь;
	СоглашениеСодержитДоговор                      = ИспользоватьДоговорыКонтрагентов И ЗначениеЗаполнено(Объект.Договор)
		И ОбщегоНазначения.СсылкаСуществует(Объект.Договор);
	ПорядокРасчетов                                = Перечисления.ПорядокРасчетов.ПоЗаказамНакладным;
	
	Если НЕ СоглашениеСодержитДоговор И ЗначениеЗаполнено(Объект.Договор) Тогда
		Объект.Договор = Неопределено;
	КонецЕсли;
	
	Если ХозОперацияСоглашения = Неопределено Тогда
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ХозяйственнаяОперация", Объект.Метаданные())
			И (Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию
			Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера) Тогда
			ХозОперацияСоглашения = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию;
		Иначе
			ХозОперацияСоглашения                 = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
			ОтгрузкаБезПереходаПраваСобственности = Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности;
		КонецЕсли;
	КонецЕсли;
	
	ВалютаВзаиморасчетовСоглашения = ?(ОбщегоНазначения.ЕстьРеквизитОбъекта("ВалютаВзаиморасчетов", Объект.Метаданные()), 
		Объект.ВалютаВзаиморасчетов, Объект.Валюта);
		
	Если ВалютаВзаиморасчетовСоглашения = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях;
	ИначеЕсли ВалютаВзаиморасчетовСоглашения <> Объект.Валюта Тогда
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях;
	Иначе
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВВалюте;
	КонецЕсли;
	
	Если СоглашениеСодержитДоговор Тогда
		
		РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Договор, "ВалютаВзаиморасчетов, ПорядокОплаты, ПорядокРасчетов");
		
		Если ЗначениеЗаполнено(РеквизитыДоговора.ВалютаВзаиморасчетов) Тогда
			ВалютаВзаиморасчетовСоглашения = РеквизитыДоговора.ВалютаВзаиморасчетов;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РеквизитыДоговора.ПорядокОплаты) Тогда
			ПорядокОплаты = РеквизитыДоговора.ПорядокОплаты;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РеквизитыДоговора.ПорядокРасчетов) Тогда
			ПорядокРасчетов = РеквизитыДоговора.ПорядокРасчетов;
		КонецЕсли;
		
	КонецЕсли;
	
	// Инициализируем доп. условия для подбора соглашений.
	УсловиеПоОтгрузкеБезПереходаПраваСобственности = "Истина";
	УсловиеПоИспользованиюДоговоровКонтрагентов    = "Истина";
	ШаблонДополнительныхУсловий                    = "%1 И %2";
	
	Если ОтгрузкаБезПереходаПраваСобственности Тогда
		УсловиеПоОтгрузкеБезПереходаПраваСобственности = "СоглашенияСКлиентами.ВозможнаРеализацияБезПереходаПраваСобственности";
	КонецЕсли;
	
	Если СоглашениеСодержитДоговор Тогда
		УсловиеПоИспользованиюДоговоровКонтрагентов = "СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов";
	Иначе
		УсловиеПоИспользованиюДоговоровКонтрагентов = "НЕ СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов";
	КонецЕсли; 
	
		
		 
	ТекстДополнительныхУсловий = СтрШаблон(ШаблонДополнительныхУсловий,
		УсловиеПоОтгрузкеБезПереходаПраваСобственности, УсловиеПоИспользованиюДоговоровКонтрагентов);
	
	// Пункт 1. Проверим, является ли заполненное в объекте соглашение корректным для данного документа.
	// Если соглашение корректное, то дальнейшего подбора не требуется.
	СоглашениеЗаполненоКорректно = Ложь;
	Если ЗначениеЗаполнено(Объект.Соглашение) Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	СоглашенияСКлиентами.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
			|ГДЕ
			|	СоглашенияСКлиентами.Ссылка = &СоглашениеВОбъекте
			|	И СоглашенияСКлиентами.Партнер = &Партнер
			|	И СоглашенияСКлиентами.Валюта = &Валюта
			|	И (СоглашенияСКлиентами.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов
			|			ИЛИ СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов)
			|	И СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозОперация
			|	И (СоглашенияСКлиентами.Организация = &Организация
			|			ИЛИ СоглашенияСКлиентами.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
			|	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
			|	И &ДополнительныеУсловия");
			
		Запрос.УстановитьПараметр("СоглашениеВОбъекте",   Объект.Соглашение);
		Запрос.УстановитьПараметр("Организация",          Объект.Организация);
		Запрос.УстановитьПараметр("Валюта",               Объект.Валюта);
		Запрос.УстановитьПараметр("ВалютаВзаиморасчетов", ВалютаВзаиморасчетовСоглашения);
		Запрос.УстановитьПараметр("Партнер",              Объект.Партнер);
		Запрос.УстановитьПараметр("ХозОперация",          ХозОперацияСоглашения);
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДополнительныеУсловия", ТекстДополнительныхУсловий);
		СоглашениеЗаполненоКорректно = Не Запрос.Выполнить().Пустой();
		
	КонецЕсли;
	
	Если СоглашениеЗаполненоКорректно Тогда
		Возврат;
	КонецЕсли;
	
	// Пункт 2. Попробуем подобрать подходящий элемент по умолчанию, среди уже имеющихся в базе соглашений.
	// При формировании наименования по умолчанию, платформенное представление объектов применять нельзя,
	// т.к. организация, партнер или валюта могут отсутствовать в базе,
	// и платформа сформирует представление: «Объект не найден».
	// Необходимо формировать наименование с учетом данного поведения платформы.
	// Если один из объектов формирующих наименование по умолчанию отсутствует в базе,
	// то его наименование должно быть заменено пустой строкой.
	ШаблонНаименованияСоглашенияПоУмолчанию = НСтр("ru = '%1 , %2, %3, %4 (по умолчанию)';
													|en = '%1 , %2, %3, %4 (by default)'");
	
	НаименованиеОрганизации = "";
	НаименованиеПартнера    = "";
	НаименованиеВалюты      = "";
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		НаименованиеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "Наименование");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Партнер) И ИспользоватьИндивидуальныеСоглашения Тогда
		НаименованиеПартнера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Партнер, "Наименование");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВалютаВзаиморасчетовСоглашения) Тогда
		НаименованиеВалюты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВалютаВзаиморасчетовСоглашения, "Наименование");
	КонецЕсли;
	
	НаименованиеСоглашенияПоУмолчанию = СтрШаблон(ШаблонНаименованияСоглашенияПоУмолчанию,
		НаименованиеПартнера, ХозОперацияСоглашения, НаименованиеОрганизации, НаименованиеВалюты);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",             Объект.Организация);
	Запрос.УстановитьПараметр("Валюта",                  Объект.Валюта);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов",    ВалютаВзаиморасчетовСоглашения);
	Запрос.УстановитьПараметр("Партнер",                 Объект.Партнер);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",   ХозОперацияСоглашения);
	Запрос.УстановитьПараметр("ТолькоТиповые",           ИспользоватьТиповыеСоглашения И Не ИспользоватьИндивидуальныеСоглашения);
	Запрос.УстановитьПараметр("ТолькоИндивидуальные",    Не ИспользоватьТиповыеСоглашения И ИспользоватьИндивидуальныеСоглашения);
	Запрос.УстановитьПараметр("НаименованиеПоУмолчанию", НаименованиеСоглашенияПоУмолчанию);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
		|	СоглашенияСКлиентами.Ссылка КАК Ссылка,
		|	СоглашенияСКлиентами.Наименование КАК Наименование,
		|	ВЫБОР
		|		КОГДА СоглашенияСКлиентами.Наименование = &НаименованиеПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЗначениеПоУмолчанию
		|ИЗ
		|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
		|ГДЕ
		|	СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
		|	И СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
		|	И СоглашенияСКлиентами.Валюта = &Валюта
		|	И (СоглашенияСКлиентами.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов
		|		ИЛИ СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов)
		|	И (СоглашенияСКлиентами.Организация = &Организация
		|		ИЛИ СоглашенияСКлиентами.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
		|	И НЕ СоглашенияСКлиентами.ПометкаУдаления
		|	И ВЫБОР
		|			КОГДА &ТолькоТиповые = ИСТИНА
		|					И &ТолькоИндивидуальные = ЛОЖЬ
		|					И (СоглашенияСКлиентами.Типовое
		|						И (СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
		|							ИЛИ СоглашенияСКлиентами.СегментПартнеров В
		|								(ВЫБРАТЬ
		|									ПартнерыСегмента.Сегмент
		|								ИЗ
		|									РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
		|								ГДЕ
		|									ПартнерыСегмента.Партнер = &Партнер)))
		|				ТОГДА ИСТИНА
		|			КОГДА &ТолькоИндивидуальные = ИСТИНА
		|					И НЕ &ТолькоТиповые = ИСТИНА
		|					И (НЕ СоглашенияСКлиентами.Типовое
		|						И (СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
		|							ИЛИ СоглашенияСКлиентами.СегментПартнеров В
		|								(ВЫБРАТЬ
		|									ПартнерыСегмента.Сегмент
		|								ИЗ
		|									РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
		|								ГДЕ
		|									ПартнерыСегмента.Партнер = &Партнер)))
		|					И (&Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|						ИЛИ СоглашенияСКлиентами.Партнер = &Партнер)
		|				ТОГДА ИСТИНА
		|			КОГДА &ТолькоТиповые = ЛОЖЬ
		|					И &ТолькоИндивидуальные = ЛОЖЬ
		|					И (СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
		|						ИЛИ СоглашенияСКлиентами.СегментПартнеров В
		|							(ВЫБРАТЬ
		|								ПартнерыСегмента.Сегмент
		|							ИЗ
		|								РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
		|							ГДЕ
		|								ПартнерыСегмента.Партнер = &Партнер))
		|					И (&Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|						ИЛИ СоглашенияСКлиентами.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|						ИЛИ СоглашенияСКлиентами.Партнер = &Партнер)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|	И &ДополнительныеУсловия
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЗначениеПоУмолчанию УБЫВ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДополнительныеУсловия", ТекстДополнительныхУсловий);
	Выборка = Запрос.Выполнить().Выбрать();
	
	СоздатьСоглашение = Истина;
	
	Если Выборка.Количество() = 1 Тогда
		// Только один подходящий - его подставим.
		Выборка.Следующий();
		СоздатьСоглашение = Ложь;
		Объект.Соглашение = Выборка.Ссылка;
	Иначе
		// Поиск уже созданного ранее соглашения по умолчанию.
		Пока Выборка.Следующий() Цикл
			Если Выборка.ЭтоЗначениеПоУмолчанию Тогда
				СоздатьСоглашение = Ложь;
				Объект.Соглашение = Выборка.Ссылка;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не СоздатьСоглашение Тогда
		// Соглашение подобрано, создавать новое не требуется.
		Возврат;
	КонецЕсли;
	
	// Создадим соглашение по умолчанию.
	НовоеСоглашение = Справочники.СоглашенияСКлиентами.СоздатьЭлемент();
	НовоеСоглашение.Наименование                                    = НаименованиеСоглашенияПоУмолчанию;
	НовоеСоглашение.Статус                                          = Перечисления.СтатусыСоглашенийСКлиентами.Действует;
	НовоеСоглашение.ХозяйственнаяОперация                           = ХозОперацияСоглашения;
	НовоеСоглашение.Валюта                                          = Объект.Валюта;
	НовоеСоглашение.ВалютаВзаиморасчетов                            = ВалютаВзаиморасчетовСоглашения;
	НовоеСоглашение.Организация                                     = Объект.Организация;
	НовоеСоглашение.Согласован                                      = Истина;
	НовоеСоглашение.ИспользуютсяДоговорыКонтрагентов                = СоглашениеСодержитДоговор;
	НовоеСоглашение.ВозможнаРеализацияБезПереходаПраваСобственности = ОтгрузкаБезПереходаПраваСобственности;
	НовоеСоглашение.ПорядокОплаты                                   = ПорядокОплаты;
	НовоеСоглашение.ПорядокРасчетов                                 = ПорядокРасчетов;
	
	Если ИспользоватьТиповыеСоглашения И Не ИспользоватьИндивидуальныеСоглашения Тогда
		
		НовоеСоглашение.Типовое = Истина;
		
		// Определим сегмент партнера
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПартнерыСегмента.Сегмент
			|ИЗ
			|	РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
			|ГДЕ
			|	ПартнерыСегмента.Партнер = &Партнер";
			
		Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			НовоеСоглашение.СегментПартнеров = Выборка.Сегмент;
		КонецЕсли;
		
	Иначе 
		НовоеСоглашение.Типовое    = Ложь;
		НовоеСоглашение.Партнер    = Объект.Партнер;
		НовоеСоглашение.Контрагент = Объект.Контрагент;
	КонецЕсли;
	
	НовоеСоглашение.Записать();
	Объект.Соглашение = НовоеСоглашение.Ссылка;
КонецПроцедуры
