Процедура Мержевание_ПБДС(ПолученныеДанные, ДанныеИБ, КонвертацияСвойств, КомпонентыОбмена)
	Если ДанныеИБ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеИБ_КонтрагентДоИзменения = ДанныеИБ.Контрагент;
	
	#Область Шапка
	
	// Заполнение контрагента, если он не заполнен.
	Если Не ЗначениеЗаполнено(ПолученныеДанные.Контрагент) Тогда
		Если ЗначениеЗаполнено(ДанныеИБ.Контрагент) Тогда
			ПолученныеДанные.Контрагент = ДанныеИБ.Контрагент;
		Иначе
			ЗаполнитьКонтрагентаНашеПредприятие(ПолученныеДанные, КомпонентыОбмена.ПараметрыКонвертации);
		КонецЕсли;
	КонецЕсли;
	
	// При операциях "интеркампани", некоторые реквизиты объекта ИБ имеют больший приоритет.
	Если ДанныеИБ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации Тогда
		ЗаполнитьЗначенияСвойств(ПолученныеДанные, ДанныеИБ,
			"Контрагент,БанковскийСчетКонтрагента,ХозяйственнаяОперация");
	КонецЕсли;
	
	// Заменяем свойства, которые получили из XDTO.
	ЗаполнитьСвойстваШапкиОбъекта(КонвертацияСвойств, ПолученныеДанные, ДанныеИБ);
	
	#КонецОбласти
	
	#Область РасшифровкаПлатежа
	
	// Мержевание расшифровки платежа.
	РасшифровкаПлатежаИсточник = ПолученныеДанные.РасшифровкаПлатежа;
	РасшифровкаПлатежаПриемник = ДанныеИБ.РасшифровкаПлатежа;
	
	Если РасшифровкаПлатежаИсточник.Количество() = РасшифровкаПлатежаПриемник.Количество() Тогда
		
		Для ИндексСтроки = 0 По РасшифровкаПлатежаИсточник.Количество() - 1 Цикл
			
			СтрокаИсточник = РасшифровкаПлатежаИсточник[ИндексСтроки];
			СтрокаПриемник = РасшифровкаПлатежаПриемник[ИндексСтроки];
			
			ЗаполнитьЗначенияСвойств(СтрокаПриемник, СтрокаИсточник,
				"Сумма,
				|СуммаВзаиморасчетов,
				|ВалютаВзаиморасчетов");
			
			Если ЗначениеЗаполнено(СтрокаИсточник.ОснованиеПлатежа) Тогда
				СтрокаПриемник.ОснованиеПлатежа = СтрокаИсточник.ОснованиеПлатежа;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаИсточник.Заказ) Тогда
				СтрокаПриемник.Заказ = СтрокаИсточник.Заказ;
			КонецЕсли;
		
			Если ЗначениеЗаполнено(СтрокаИсточник.СтатьяДоходов) Тогда
				СтрокаПриемник.СтатьяДоходов = СтрокаИсточник.СтатьяДоходов;
			КонецЕсли;
					
			Если ЗначениеЗаполнено(СтрокаИсточник.СтатьяДвиженияДенежныхСредств) Тогда
				СтрокаПриемник.СтатьяДвиженияДенежныхСредств = СтрокаИсточник.СтатьяДвиженияДенежныхСредств;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаИсточник.Подразделение) Тогда
				СтрокаПриемник.Подразделение = СтрокаИсточник.Подразделение;
			КонецЕсли;
				
			// Изменение контрагента обновляет зависимую от него аналитику.
			Если ДанныеИБ.Контрагент <> ДанныеИБ_КонтрагентДоИзменения Тогда
				ЗаполнитьЗначенияСвойств(СтрокаПриемник, СтрокаИсточник,
					"Партнер, ОснованиеПлатежа, Заказ");
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		ДанныеИБ.РасшифровкаПлатежа.Загрузить(ПолученныеДанные.РасшифровкаПлатежа.Выгрузить());
	КонецЕсли;
	
	#КонецОбласти
КонецПроцедуры
