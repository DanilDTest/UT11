Процедура ОтложеннаяОбработка_ЗаказыПоставщикуКлиента(Объект, КомпонентыОбмена)
	ЭтоЗаказПоставщику = (Объект.Метаданные().Реквизиты.Найти("ЗакупкаПодДеятельность") <> Неопределено);
	
	Если ЭтоЗаказПоставщику И Не ЗначениеЗаполнено(Объект.ЗакупкаПодДеятельность) Тогда
		ЗаполнитьВидДеятельностиПоУмолчанию(Объект, "ЗакупкаПодДеятельность");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Приоритет) Тогда
		Объект.Приоритет = Справочники.Приоритеты.ПолучитьПриоритетПоУмолчанию(Неопределено);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Партнер) Тогда
		Объект.Партнер = ДенежныеСредстваСервер.ПолучитьПартнераПоКонтрагенту(Объект.Контрагент);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Соглашение) Тогда
		Если ЭтоЗаказПоставщику Тогда
			ЗаполнениеСоглашенияСПоставщикомВШапкеДокумента(Объект, КомпонентыОбмена.ПараметрыКонвертации);
		Иначе
			ЗаполнениеСоглашенияСКлиентомВШапкеДокумента(Объект);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ПорядокРасчетов) Тогда
		Объект.ПорядокРасчетов = ВзаиморасчетыСервер.ПорядокРасчетовПоУмолчанию(Объект);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.АдресДоставкиЗначенияПолей)
		И ЗначениеЗаполнено(Объект.АдресДоставки) Тогда
		ОбщегоНазначенияУТВызовСервера.ЗаполнитьЗначенияПолейКИПоПредставлению(Объект.АдресДоставки, Объект.АдресДоставкиЗначенияПолей);
	КонецЕсли;
	
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) < ВерсияФорматаЧислом("1.8")
		Или Объект.ЭтапыГрафикаОплаты.Количество() = 0 Тогда
			
		Объект.ЗаполнитьЭтапыГрафикаОплаты();
	КонецЕсли;
		
	Если ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) < ВерсияФорматаЧислом("1.8")
		Или Не ЗначениеЗаполнено(Объект.НалогообложениеНДС) Тогда
	
		ЗаполнитьТипНалогообложенияПоУмолчанию(Объект);
	КонецЕсли;
	
	Если ЭтоЗаказПоставщику Тогда
		Для Каждого Стр Из Объект.Товары Цикл
			Если Не ЗначениеЗаполнено(Стр.Склад) Тогда
				Стр.Склад = Объект.Склад;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ ЗначениеЗаполнено(Объект.ВариантПриемкиТоваров) Тогда
			Объект.ВариантПриемкиТоваров = ЗакупкиСервер.ПолучитьВариантПриемкиТоваров(Неопределено, Объект.Договор);
		КонецЕсли;
		
		//Даты поступления
		Если (Объект.Статус = Перечисления.СтатусыЗаказовПоставщикам.Подтвержден
			ИЛИ Объект.Статус = Перечисления.СтатусыЗаказовПоставщикам.Закрыт)
			И ВерсияФорматаЧислом(КомпонентыОбмена.ВерсияФорматаОбмена) < ВерсияФорматаЧислом("1.8") Тогда
				
			Если ЗначениеЗаполнено(Объект.ЖелаемаяДатаПоступления) И Объект.ЖелаемаяДатаПоступления >= Объект.Дата Тогда
				ДатаПоступления = Объект.ЖелаемаяДатаПоступления;
			Иначе
				ДатаПоступления = Объект.Дата;
			КонецЕсли;
			
			Если НЕ Объект.ПоступлениеОднойДатой Тогда
				Для Каждого СтрокаТЧ Из Объект.Товары Цикл
					Если Не ЗначениеЗаполнено(СтрокаТЧ.ДатаПоступления) Тогда
						СтрокаТЧ.ДатаПоступления = ДатаПоступления;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Если НЕ ЗначениеЗаполнено(Объект.ДатаПоступления) Тогда
					Объект.ДатаПоступления = ДатаПоступления;
				КонецЕсли;
				Для Каждого СтрокаТЧ Из Объект.Товары Цикл
					СтрокаТЧ.ДатаПоступления = Объект.ДатаПоступления;
				КонецЦикла;	
			КонецЕсли;	
		КонецЕсли;
		
		// Номенклатура поставщиков.
		ОбработатьНоменклатуруКонтрагентаВТЧ(Объект, "Товары", КомпонентыОбмена);
			
	Иначе
		//Заказ клиента
		СтруктураДействий = Новый Структура;
		ВариантыОбеспечения = ПродажиСервер.ВариантыОбеспеченияПоУмолчанию(Объект.Соглашение, Объект.Статус);
		
		ПараметрыДействия = ОбеспечениеКлиентСервер.ПараметрыДействияПроверитьЗаполнитьОбеспечение(ВариантыОбеспечения,
			Объект.ЖелаемаяДатаОтгрузки);
		СтруктураДействий.Вставить("ПроверитьЗаполнитьОбеспечениеВДокументеПродажи", ПараметрыДействия);
		
		ФОЗаказыКлиентов = ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента");
		Для Каждого Стр Из Объект.Товары Цикл
			Если Не ЗначениеЗаполнено(Стр.ВариантОбеспечения) Тогда
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Стр, СтруктураДействий, Неопределено);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Стр.Склад) Тогда
				Стр.Склад = Объект.Склад;
			КонецЕсли;
		КонецЦикла;
			                                      
	КонецЕсли;
	
	// Установим владельца для контактного лица.
	Если ЗначениеЗаполнено(Объект.КонтактноеЛицо) И ЗначениеЗаполнено(Объект.Партнер) Тогда
		ВладелецКонтактногоЛица = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.КонтактноеЛицо, "Владелец");
		Если ВладелецКонтактногоЛица = Справочники.Партнеры.НеизвестныйПартнер Тогда
			КонтактноеЛицоОбъект = Объект.КонтактноеЛицо.ПолучитьОбъект();
			КонтактноеЛицоОбъект.Владелец = Объект.Партнер;
			
			КонтактноеЛицоОбъект.ОбменДанными.Загрузка = Истина;
			
			Попытка
				КонтактноеЛицоОбъект.Записать();
			Исключение
				ЗаписатьОшибкуВЖурналРегистрации(Объект.КонтактноеЛицо,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), КомпонентыОбмена);
			КонецПопытки;
		ИначеЕсли НЕ ВладелецКонтактногоЛица = Объект.Партнер Тогда
			Объект.КонтактноеЛицо = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Автор) Тогда
		Если ЗначениеЗаполнено(Объект.Менеджер) Тогда
			Объект.Автор = Объект.Менеджер;	
		Иначе
		    Объект.Автор = Пользователи.ТекущийПользователь();
		КонецЕсли;    
	КонецЕсли;
КонецПроцедуры
