Функция ЭлементПоУмолчанию(КомпонентыОбмена, ВидЭлемента, ДопПараметры = Неопределено)
	ПараметрыКонвертации = КомпонентыОбмена.ПараметрыКонвертации;
		
	Если Не ЗначениеЗаполнено(ПараметрыКонвертации.ЭлементыПоУмолчанию) Тогда
		ПараметрыКонвертации.ЭлементыПоУмолчанию = Новый Структура;
	КонецЕсли;
	
	ЗначениеЭлемента = Неопределено;
	Если ДопПараметры = Неопределено И ПараметрыКонвертации.ЭлементыПоУмолчанию.Свойство(ВидЭлемента, ЗначениеЭлемента) Тогда
		Возврат ЗначениеЭлемента;
	КонецЕсли;
	
	Если ВидЭлемента = "ГруппаДоступаНоменклатуры" Тогда
	
		НеобходимоСоздатьЭлемент = Ложь;
		
		НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Группа доступа по умолчанию';
												|en = 'Default access group'");
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	ГруппыДоступаНоменклатуры.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ГруппыДоступаНоменклатуры.Наименование = &НаименованиеЭлементаПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
		|ИЗ
		|	Справочник.ГруппыДоступаНоменклатуры КАК ГруппыДоступаНоменклатуры
		|ГДЕ
		|	НЕ ГруппыДоступаНоменклатуры.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
		Запрос.УстановитьПараметр("НаименованиеЭлементаПоУмолчанию", НаименованиеЭлементаПоУмолчанию);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Количество() = 1
				Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
				ЗначениеЭлемента = Выборка.Ссылка;
			Иначе
				НеобходимоСоздатьЭлемент = Истина;
			КонецЕсли;
		Иначе
			НеобходимоСоздатьЭлемент = Истина;
		КонецЕсли;
		
		Если НеобходимоСоздатьЭлемент Тогда
			ГруппаДоступаОбъект = Справочники.ГруппыДоступаНоменклатуры.СоздатьЭлемент();
			ГруппаДоступаОбъект.Наименование = НаименованиеЭлементаПоУмолчанию;
			
			ГруппаДоступаОбъект.ОбменДанными.Загрузка = Истина;
			
			Попытка
				ГруппаДоступаОбъект.Записать();
				ЗначениеЭлемента = ГруппаДоступаОбъект.Ссылка;
			Исключение
				ЗначениеЭлемента = Справочники.ГруппыДоступаНоменклатуры.ПустаяСсылка();
				ЗаписатьОшибкуВЖурналРегистрации(ЗначениеЭлемента,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), КомпонентыОбмена);
			КонецПопытки;
		КонецЕсли;
		
	ИначеЕсли ВидЭлемента = "ГруппаДоступаФизЛица" Тогда
			
		НеобходимоСоздатьЭлемент = Ложь;
		
		НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Группа доступа по умолчанию';
												|en = 'Default access group'");
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	ГруппыДоступаФизЛиц.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ГруппыДоступаФизЛиц.Наименование = &НаименованиеЭлементаПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
		|ИЗ
		|	Справочник.ГруппыДоступаФизическихЛиц КАК ГруппыДоступаФизЛиц
		|ГДЕ
		|	НЕ ГруппыДоступаФизЛиц.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
		Запрос.УстановитьПараметр("НаименованиеЭлементаПоУмолчанию", НаименованиеЭлементаПоУмолчанию);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Количество() = 1
			Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
				ЗначениеЭлемента = Выборка.Ссылка;
			Иначе
				НеобходимоСоздатьЭлемент = Истина;
			КонецЕсли;
		Иначе
			НеобходимоСоздатьЭлемент = Истина;
		КонецЕсли;
		
		Если НеобходимоСоздатьЭлемент Тогда
			ГруппаДоступаОбъект = Справочники.ГруппыДоступаФизическихЛиц.СоздатьЭлемент();
			ГруппаДоступаОбъект.Наименование = НаименованиеЭлементаПоУмолчанию;
			
			ГруппаДоступаОбъект.ОбменДанными.Загрузка = Истина;
			
			Попытка
				ГруппаДоступаОбъект.Записать();
				ЗначениеЭлемента = ГруппаДоступаОбъект.Ссылка;
			Исключение
				ЗначениеЭлемента = Справочники.ГруппыДоступаФизическихЛиц.ПустаяСсылка();
				ЗаписатьОшибкуВЖурналРегистрации(ЗначениеЭлемента,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), КомпонентыОбмена);
			КонецПопытки;
		КонецЕсли;
		
	ИначеЕсли ВидЭлемента = "ГруппаДоступаПартнера" Тогда
			
		НеобходимоСоздатьЭлемент = Ложь;
		
		НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Группа доступа по умолчанию';
												|en = 'Default access group'");
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	ГруппыДоступаПартнеров.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ГруппыДоступаПартнеров.Наименование = &НаименованиеЭлементаПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
		|ИЗ
		|	Справочник.ГруппыДоступаПартнеров КАК ГруппыДоступаПартнеров
		|ГДЕ
		|	НЕ ГруппыДоступаПартнеров.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
		Запрос.УстановитьПараметр("НаименованиеЭлементаПоУмолчанию", НаименованиеЭлементаПоУмолчанию);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Количество() = 1
				Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
				ЗначениеЭлемента = Выборка.Ссылка;
			Иначе
				НеобходимоСоздатьЭлемент = Истина;
			КонецЕсли;
		Иначе
			НеобходимоСоздатьЭлемент = Истина;
		КонецЕсли;
		
		Если НеобходимоСоздатьЭлемент Тогда
			ГруппаДоступаОбъект = Справочники.ГруппыДоступаПартнеров.СоздатьЭлемент();
			ГруппаДоступаОбъект.Наименование = НаименованиеЭлементаПоУмолчанию;
			
			ГруппаДоступаОбъект.ОбменДанными.Загрузка = Истина;
			
			Попытка
				ГруппаДоступаОбъект.Записать();
				ЗначениеЭлемента = ГруппаДоступаОбъект.Ссылка;
			Исключение
				ЗначениеЭлемента = Справочники.ГруппыДоступаПартнеров.ПустаяСсылка();
				ЗаписатьОшибкуВЖурналРегистрации(ЗначениеЭлемента,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), КомпонентыОбмена);
			КонецПопытки;
		КонецЕсли;
		
	ИначеЕсли ВидЭлемента = "НоменклатураУслуга" Тогда
	
		НеобходимоСоздатьЭлемент = Ложь;
		
		НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Услуга';
												|en = 'Service'");
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	Номенклатура.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА Номенклатура.Наименование = &НаименованиеЭлементаПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
		Запрос.УстановитьПараметр("НаименованиеЭлементаПоУмолчанию", НаименованиеЭлементаПоУмолчанию);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Количество() = 1
				Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
				ЗначениеЭлемента = Выборка.Ссылка;
			Иначе
				НеобходимоСоздатьЭлемент = Истина;
			КонецЕсли;
		Иначе
			НеобходимоСоздатьЭлемент = Истина;
		КонецЕсли;
		
		Если НеобходимоСоздатьЭлемент Тогда
			ЭлементПоУмолчаниюОбъект = Справочники.Номенклатура.СоздатьЭлемент();
			ЭлементПоУмолчаниюОбъект.Наименование       = НаименованиеЭлементаПоУмолчанию;
			ЭлементПоУмолчаниюОбъект.НаименованиеПолное = НаименованиеЭлементаПоУмолчанию;
			
			ЭлементПоУмолчаниюОбъект.ТипНоменклатуры   = Перечисления.ТипыНоменклатуры.Услуга;
			ЭлементПоУмолчаниюОбъект.СтавкаНДС         = Перечисления.СтавкиНДС.НДС20;
			ЭлементПоУмолчаниюОбъект.ЕдиницаИзмерения  = ЭлементПоУмолчанию(КомпонентыОбмена, "ЕдиницаИзмерения");
			ЭлементПоУмолчаниюОбъект.ЕдиницаДляОтчетов = ЭлементПоУмолчанию(КомпонентыОбмена, "ЕдиницаИзмерения");
			
			ЭлементПоУмолчаниюОбъект.КоэффициентЕдиницыДляОтчетов  = 1;
			ЭлементПоУмолчаниюОбъект.ЕдиницаИзмеренияСрокаГодности = Перечисления.ЕдиницыИзмеренияВремени.Сутки;
			
			ЭлементПоУмолчаниюОбъект.ОбменДанными.Загрузка = Истина;
			
			ОтложеннаяОбработка_Номенклатура(ЭлементПоУмолчаниюОбъект, КомпонентыОбмена);
			
			Попытка
				ЭлементПоУмолчаниюОбъект.Записать();
				ЗначениеЭлемента = ЭлементПоУмолчаниюОбъект.Ссылка;
			Исключение
				ЗначениеЭлемента = Справочники.Номенклатура.ПустаяСсылка();
				ЗаписатьОшибкуВЖурналРегистрации(ЗначениеЭлемента,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), КомпонентыОбмена);
			КонецПопытки;
		КонецЕсли;
		
	ИначеЕсли ВидЭлемента = "ЕдиницаИзмерения" Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка,
		|	1 КАК Приоритет
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.Владелец = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)
		|	И УпаковкиЕдиницыИзмерения.Код = ""796""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УпаковкиЕдиницыИзмерения.Ссылка,
		|	0
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.Владелец = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)
		|	И УпаковкиЕдиницыИзмерения.Наименование = ""шт""
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет УБЫВ");
	
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗначениеЭлемента = Выборка.Ссылка;
		КонецЕсли;
		
	ИначеЕсли ВидЭлемента = "СтатьяРасходовСписаниеТоваров"
		Или ВидЭлемента = "СтатьяРасходовАвансовыйОтчет"
		Или ВидЭлемента = "СтатьяРасходовПоступлениеУслуг"
		Или ВидЭлемента = "СтатьяРасходовПоступлениеУслугДопРасходы"
		Или ВидЭлемента = "СтатьяРасходовТаможенныйСбор"
		Или ВидЭлемента = "СтатьяРасходовТаможенныйШтраф"
		Или ВидЭлемента = "СтатьяРасходовКредиты" 
		Или ВидЭлемента = "СтатьяРасходовСписаниеЗадолженности" Тогда
	
		НеобходимоСоздатьЭлемент = Ложь;
		
		Если ВидЭлемента = "СтатьяРасходовСписаниеТоваров" Тогда
			НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Статья расходов по умолчанию';
													|en = 'Default expense item'");
		ИначеЕсли ВидЭлемента = "СтатьяРасходовАвансовыйОтчет" Тогда
			НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Статья расходов авансовый отчет по умолчанию';
													|en = 'Expense item default expense report'");
		ИначеЕсли ВидЭлемента = "СтатьяРасходовПоступлениеУслуг" Тогда
			НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Статья расходов поступление услуг по умолчанию';
													|en = 'Expense item default receipt of services'");
		ИначеЕсли ВидЭлемента = "СтатьяРасходовПоступлениеУслугДопРасходы" Тогда
				НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Статья расходов поступление услуг (доп.расходы) по умолчанию';
														|en = 'Expense item receipt of services (add. expenses) by default'");
		ИначеЕсли ВидЭлемента = "СтатьяРасходовТаможенныйСбор" Тогда
			НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Статья расходов таможенный сбор по умолчанию';
													|en = 'Expense item default customs fee'");
		ИначеЕсли ВидЭлемента = "СтатьяРасходовТаможенныйШтраф" Тогда
			НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Статья расходов таможенный штраф по умолчанию';
													|en = 'Expense item default customs penalty'");
		ИначеЕсли ВидЭлемента = "СтатьяРасходовКредиты" Тогда
			НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Статья расходов кредиты по умолчанию';
													|en = 'Expense item credits by default'");
		ИначеЕсли ВидЭлемента = "СтатьяРасходовСписаниеЗадолженности" Тогда
			НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Статья расходов списание задолженности по умолчанию';
													|en = 'Expense item debt relief by default'");
		КонецЕсли;
	
		Запрос = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 2
			|	СтатьиРасходов.Ссылка КАК Ссылка,
			|	ВЫБОР
			|		КОГДА СтатьиРасходов.Наименование = &НаименованиеЭлементаПоУмолчанию
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
			|ИЗ
			|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
			|ГДЕ
			|	НЕ СтатьиРасходов.ПометкаУдаления
			|	И ВЫБОР
			|			КОГДА &ДоговорыКредитовИДепозитов
			|				ТОГДА СтатьиРасходов.ДоговорыКредитовИДепозитов
			|			КОГДА &ДопРасходы ТОГДА
			|				СтатьиРасходов.ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ЗакупкаТоваров)
			|				И СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
		Запрос.УстановитьПараметр("НаименованиеЭлементаПоУмолчанию", НаименованиеЭлементаПоУмолчанию);
		ДоговорыКредитовИДепозитов = ВидЭлемента = "СтатьяРасходовКредиты";
		Запрос.УстановитьПараметр("ДоговорыКредитовИДепозитов", ДоговорыКредитовИДепозитов);
		Запрос.УстановитьПараметр("ДопРасходы", (ВидЭлемента = "СтатьяРасходовПоступлениеУслугДопРасходы"));
	
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Количество() = 1
				Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
				ЗначениеЭлемента = Выборка.Ссылка;
			Иначе
				НеобходимоСоздатьЭлемент = Истина;
			КонецЕсли;
		Иначе
			НеобходимоСоздатьЭлемент = Истина;
		КонецЕсли;
	
		Если НеобходимоСоздатьЭлемент Тогда
			СтатьяРасходовОбъект = ПланыВидовХарактеристик.СтатьиРасходов.СоздатьЭлемент();
			СтатьяРасходовОбъект.Наименование = НаименованиеЭлементаПоУмолчанию;
			Если ВидЭлемента = "СтатьяРасходовСписаниеТоваров" 
				Или ВидЭлемента = "СтатьяРасходовПоступлениеУслугДопРасходы" Тогда
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров;
			Иначе
				СтатьяРасходовОбъект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
			КонецЕсли;
			Если ВидЭлемента = "СтатьяРасходовПоступлениеУслугДопРасходы" Тогда
				СтатьяРасходовОбъект.ТипРасходов = Перечисления.ТипыРасходов.ЗакупкаТоваров;
			КонецЕсли;
	
			Попытка
				СтатьяРасходовОбъект.Записать();
				ЗначениеЭлемента = СтатьяРасходовОбъект.Ссылка;
			Исключение
				ЗначениеЭлемента = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
				ЗаписатьОшибкуВЖурналРегистрации(ЗначениеЭлемента,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), КомпонентыОбмена);
			КонецПопытки
		КонецЕсли;
		
	ИначеЕсли ВидЭлемента = "СтатьяДоходовКредитыДепозиты"
		ИЛИ ВидЭлемента = "СтатьяДоходовСписаниеЗадолженности" Тогда
		
		НеобходимоСоздатьЭлемент = Ложь;
		Если ВидЭлемента = "СтатьяДоходовКредитыДепозиты" Тогда
			НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Статья доходов кредиты и депозиты по умолчанию';
													|en = 'Income item credits and deposits by default'");
		ИначеЕсли ВидЭлемента = "СтатьяДоходовСписаниеЗадолженности" Тогда
			НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Статья доходов списание задолженности по умолчанию';
													|en = 'Income item debt relief by default'");
		КонецЕсли;	
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	СтатьиДоходов.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА СтатьиДоходов.Наименование = &НаименованиеЭлементаПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
		|ГДЕ
		|	НЕ СтатьиДоходов.ПометкаУдаления
		|	И (&КредитыДепозиты = Ложь Или СтатьиДоходов.ДоговорыКредитовИДепозитов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
		Запрос.УстановитьПараметр("НаименованиеЭлементаПоУмолчанию", НаименованиеЭлементаПоУмолчанию);
		Запрос.УстановитьПараметр("КредитыДепозиты", (ВидЭлемента = "СтатьяДоходовКредитыДепозиты"));
	
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Количество() = 1
				Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
				ЗначениеЭлемента = Выборка.Ссылка;
			Иначе
				НеобходимоСоздатьЭлемент = Истина;
			КонецЕсли;
		Иначе
			НеобходимоСоздатьЭлемент = Истина;
		КонецЕсли;
	
		Если НеобходимоСоздатьЭлемент Тогда
			СтатьяДоходовОбъект = ПланыВидовХарактеристик.СтатьиДоходов.СоздатьЭлемент();
			СтатьяДоходовОбъект.Наименование = НаименованиеЭлементаПоУмолчанию;
			Попытка
				СтатьяДоходовОбъект.Записать();
				ЗначениеЭлемента = СтатьяДоходовОбъект.Ссылка;
			Исключение
				ЗначениеЭлемента = ПланыВидовХарактеристик.СтатьиДоходов.ПустаяСсылка();
				ЗаписатьОшибкуВЖурналРегистрации(ЗначениеЭлемента,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), КомпонентыОбмена);
			КонецПопытки
		КонецЕсли;
	
	
	ИначеЕсли ВидЭлемента = "КладоваяЦеха" Тогда
		
		НеобходимоСоздатьЭлемент = Ложь;
		
		НаименованиеПодразделения = Лев(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДопПараметры.Подразделение, "Наименование"), 18);
		
		НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Кладовая цеха (по умолчанию): ""%1""';
												|en = 'Shop storeroom (default): ""%1""'");
		НаименованиеЭлементаПоУмолчанию = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	                     НаименованиеЭлементаПоУмолчанию, НаименованиеПодразделения);
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	Склады.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА Склады.Наименование = &НаименованиеЭлементаПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	НЕ Склады.ПометкаУдаления
		|	И Склады.ЦеховаяКладовая
		|	И Склады.Подразделение = &Подразделение
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
		
		Запрос.УстановитьПараметр("НаименованиеЭлементаПоУмолчанию", НаименованиеЭлементаПоУмолчанию);
		Запрос.УстановитьПараметр("Подразделение", ДопПараметры.Подразделение);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Количество() = 1
				Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
				ЗначениеЭлемента = Выборка.Ссылка;
			Иначе
				НеобходимоСоздатьЭлемент = Истина;
			КонецЕсли;
		Иначе
			НеобходимоСоздатьЭлемент = Истина;
		КонецЕсли;
		
		Если НеобходимоСоздатьЭлемент Тогда
			СкладОбъект = Справочники.Склады.СоздатьЭлемент();
			СкладОбъект.Наименование = НаименованиеЭлементаПоУмолчанию;
			СкладОбъект.ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад;
			СкладОбъект.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен;
			СкладОбъект.ЦеховаяКладовая = Истина;
			СкладОбъект.Подразделение = ДопПараметры.Подразделение;
			
			
			СкладОбъект.ОбменДанными.Загрузка = Истина;
			
			Попытка
				СкладОбъект.Записать();
				ЗначениеЭлемента = СкладОбъект.Ссылка;
			Исключение
				ЗначениеЭлемента = Справочники.Склады.ПустаяСсылка();
				ЗаписатьОшибкуВЖурналРегистрации(ЗначениеЭлемента,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), КомпонентыОбмена);
			КонецПопытки;
		КонецЕсли;
	
		
	ИначеЕсли ВидЭлемента = "Подразделение" Тогда
		
		НеобходимоСоздатьЭлемент = Ложь;
		
		НаименованиеЭлементаПоУмолчанию = НСтр("ru = '<Подразделение по умолчанию>';
												|en = '<Default department>'");
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	СтруктураПредприятия.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА СтруктураПредприятия.Наименование = &НаименованиеЭлементаПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	НЕ СтруктураПредприятия.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
		Запрос.УстановитьПараметр("НаименованиеЭлементаПоУмолчанию", НаименованиеЭлементаПоУмолчанию);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Количество() = 1
				Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
				ЗначениеЭлемента = Выборка.Ссылка;
			Иначе
				НеобходимоСоздатьЭлемент = Истина;
			КонецЕсли;
		Иначе
			НеобходимоСоздатьЭлемент = Истина;
		КонецЕсли;
		
		Если НеобходимоСоздатьЭлемент Тогда
			ПодразделениеОбъект = Справочники.СтруктураПредприятия.СоздатьЭлемент();
			ПодразделениеОбъект.Наименование = НаименованиеЭлементаПоУмолчанию;
			ПодразделениеОбъект.ВариантОбособленногоУчетаТоваров = Перечисления.ВариантыОбособленногоУчетаТоваров.НеВедется;
			
			ПодразделениеОбъект.ОбменДанными.Загрузка = Истина;
			
			Попытка
				ПодразделениеОбъект.Записать();
				ЗначениеЭлемента = ПодразделениеОбъект.Ссылка;
			Исключение
				ЗначениеЭлемента = Справочники.СтруктураПредприятия.ПустаяСсылка();
				ЗаписатьОшибкуВЖурналРегистрации(ЗначениеЭлемента,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), КомпонентыОбмена);
			КонецПопытки;
		КонецЕсли;
		
	ИначеЕсли ВидЭлемента = "ВидКартЛояльности" Тогда
		
		НеобходимоСоздатьЭлемент = Ложь;
		
		НаименованиеЭлементаПоУмолчанию = НСтр("ru = 'Вид карт лояльности (по умолчанию)';
												|en = 'Loyalty cards type (default)'");
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	ВидыКартЛояльности.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ВидыКартЛояльности.Наименование = &НаименованиеЭлементаПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
		|ИЗ
		|	Справочник.ВидыКартЛояльности КАК ВидыКартЛояльности
		|ГДЕ
		|	НЕ ВидыКартЛояльности.ПометкаУдаления
		|	И ВидыКартЛояльности.БонуснаяПрограммаЛояльности = ЗНАЧЕНИЕ(Справочник.БонусныеПрограммыЛояльности.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
		Запрос.УстановитьПараметр("НаименованиеЭлементаПоУмолчанию", НаименованиеЭлементаПоУмолчанию);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Количество() = 1
				Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
				ЗначениеЭлемента = Выборка.Ссылка;
			Иначе
				НеобходимоСоздатьЭлемент = Истина;
			КонецЕсли;
		Иначе
			НеобходимоСоздатьЭлемент = Истина;
		КонецЕсли;
		
		Если НеобходимоСоздатьЭлемент Тогда
			ВидКартЛояльностиОбъект = Справочники.ВидыКартЛояльности.СоздатьЭлемент();
			ВидКартЛояльностиОбъект.Наименование = НаименованиеЭлементаПоУмолчанию;
			ВидКартЛояльностиОбъект.Персонализирована = Истина;
			ВидКартЛояльностиОбъект.Статус = Перечисления.СтатусыВидовКартЛояльности.Действует;
			ВидКартЛояльностиОбъект.ТипКарты = Перечисления.ТипыКарт.Смешанная;;
			
			
			ВидКартЛояльностиОбъект.ОбменДанными.Загрузка = Истина;
			
			Попытка
				ВидКартЛояльностиОбъект.Записать();
				ЗначениеЭлемента = ВидКартЛояльностиОбъект.Ссылка;
			Исключение
				ЗначениеЭлемента = Справочники.ВидыКартЛояльности.ПустаяСсылка();
				ЗаписатьОшибкуВЖурналРегистрации(ЗначениеЭлемента,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), КомпонентыОбмена);
			КонецПопытки;
		КонецЕсли;
	
	ИначеЕсли ВидЭлемента = "ФизическоеЛицо" Тогда
		
		НеобходимоСоздатьЭлемент = Ложь;
		
		НаименованиеЭлементаПоУмолчанию = НСтр("ru = '<Физическое лицо по умолчанию>';
												|en = '<Individual by default>'");
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	ФизическиеЛица.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ФизическиеЛица.Наименование = &НаименованиеЭлементаПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	НЕ ФизическиеЛица.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
		Запрос.УстановитьПараметр("НаименованиеЭлементаПоУмолчанию", НаименованиеЭлементаПоУмолчанию);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Количество() = 1
				Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
				ЗначениеЭлемента = Выборка.Ссылка;
			Иначе
				НеобходимоСоздатьЭлемент = Истина;
			КонецЕсли;
		Иначе
			НеобходимоСоздатьЭлемент = Истина;
		КонецЕсли;
		
		Если НеобходимоСоздатьЭлемент Тогда
			ФизЛицоОбъект = Справочники.ФизическиеЛица.СоздатьЭлемент();
			ФизЛицоОбъект.Наименование = НаименованиеЭлементаПоУмолчанию;
			
			ФизЛицоОбъект.ОбменДанными.Загрузка = Истина;
			
			Попытка
				ФизЛицоОбъект.Записать();
				ЗначениеЭлемента = ФизЛицоОбъект.Ссылка;
			Исключение
				ЗначениеЭлемента = Справочники.ФизическиеЛица.ПустаяСсылка();
				ЗаписатьОшибкуВЖурналРегистрации(ЗначениеЭлемента,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), КомпонентыОбмена);
			КонецПопытки;
		КонецЕсли;
		
	ИначеЕсли ВидЭлемента = "ЭквайринговыйТерминал" Тогда
			
		НеобходимоСоздатьЭлемент = Ложь;
		
		НаименованиеЭлементаПоУмолчанию = НСтр("ru = '<эквайринговый терминал по умолчанию>';
												|en = '<эквайринговый терминал по умолчанию>'");
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	ЭквайринговыеТерминалы.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ЭквайринговыеТерминалы.Наименование = &НаименованиеЭлементаПоУмолчанию
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЭлементПоУмолчаниюДляОбмена
		|ИЗ
		|	Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
		|ГДЕ
		|	НЕ ЭквайринговыеТерминалы.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоЭлементПоУмолчаниюДляОбмена УБЫВ");
		Запрос.УстановитьПараметр("НаименованиеЭлементаПоУмолчанию", НаименованиеЭлементаПоУмолчанию);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Количество() = 1
				Или Выборка.ЭтоЭлементПоУмолчаниюДляОбмена Тогда
				ЗначениеЭлемента = Выборка.Ссылка;
			Иначе
				НеобходимоСоздатьЭлемент = Истина;
			КонецЕсли;
		Иначе
			НеобходимоСоздатьЭлемент = Истина;
		КонецЕсли;
		
		Если НеобходимоСоздатьЭлемент Тогда
			ЭквайринговыйТерминалОбъект = Справочники.ЭквайринговыеТерминалы.СоздатьЭлемент();
			ЭквайринговыйТерминалОбъект.Наименование = НаименованиеЭлементаПоУмолчанию;
			
			ЭквайринговыйТерминалОбъект.ОбменДанными.Загрузка = Истина;
			
			Попытка
				ЭквайринговыйТерминалОбъект.Записать();
				ЗначениеЭлемента = ЭквайринговыйТерминалОбъект.Ссылка;
			Исключение
				ЗначениеЭлемента = Справочники.ЭквайринговыеТерминалы.ПустаяСсылка();
				ЗаписатьОшибкуВЖурналРегистрации(ЗначениеЭлемента,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), КомпонентыОбмена);
			КонецПопытки;
		КонецЕсли;	
	КонецЕсли;
	
	ПараметрыКонвертации.ЭлементыПоУмолчанию.Вставить(ВидЭлемента, ЗначениеЭлемента);
	
	Возврат ЗначениеЭлемента;
КонецФункции
