Процедура ОтложеннаяОбработка_ТаможеннаяДекларацияУП(Объект, КомпонентыОбмена, ОбъектМодифицирован)
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ТекПартнер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "Партнер");
		Объект.Партнер = ТекПартнер;
	КонецЕсли;
	
	// Если партнера не удалось заполнить по данным документа поступления
	ЗаполнениеПартнераВШапкеДокумента(Объект);
	
	ЗаполнитьСтатусыУказанияСерий(Объект, КомпонентыОбмена);
	
	// Заполним поле "НомерДляСФ" в ТЧ.
	Для Каждого Строка Из Объект.Товары Цикл
		Строка.НомерДляСФ = СокрЛП(Объект.НомерДекларации) + "/" + Строка["НомерСтроки"];
	КонецЦикла;
	
	// заполнение поставщика и склада из документа поступления
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка КАК ДокументПоступления,
	|	ПоступлениеТоваровУслуг.Склад,
	|	ПоступлениеТоваровУслуг.Партнер,
	|	ПоступлениеТоваровУслуг.Контрагент
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&ДокументыПоступления)");
	Запрос.УстановитьПараметр("ДокументыПоступления", Объект.Товары.ВыгрузитьКолонку("ДокументПоступления"));
	
	РеквизитыПоступлений = Запрос.Выполнить().Выгрузить();
	РеквизитыПоступлений.Индексы.Добавить("ДокументПоступления");
	
	ТекПоставщик = Неопределено;
	ТекКонтрагентПоставщика = Неопределено;
	Для Каждого Строка Из Объект.Товары Цикл
		Если Не ЗначениеЗаполнено(Строка.ДокументПоступления) Тогда
			Продолжить;
		КонецЕсли;
		
		РеквизитыПоступления = РеквизитыПоступлений.Найти(Строка.ДокументПоступления, "ДокументПоступления");
		
		Если Не РеквизитыПоступления = Неопределено Тогда
			ТекПоставщик = РеквизитыПоступления.Партнер;
			ТекКонтрагентПоставщика = РеквизитыПоступления.Контрагент;
			Строка.Склад = РеквизитыПоступления.Склад;
		КонецЕсли;
	КонецЦикла;
	
	Объект.Поставщик = ТекПоставщик;
	Объект.КонтрагентПоставщика = ТекКонтрагентПоставщика;
	
	Если ЗначениеЗаполнено(Объект.КонтрагентПоставщика)
		И НЕ ЗначениеЗаполнено(Объект.Поставщик) Тогда
		Поставщик = ДенежныеСредстваСервер.ПолучитьПартнераПоКонтрагенту(Объект.КонтрагентПоставщика);	
		Если Не ЗначениеЗаполнено(Поставщик) Тогда
			Поставщик = Справочники.Партнеры.НеизвестныйПартнер;
		КонецЕсли;
	
		Объект.Поставщик = Поставщик;	
	КонецЕсли;
	
	Если Объект.ТаможенныйСбор <> 0 И Не ЗначениеЗаполнено(Объект.СтатьяРасходовСбор) Тогда
		Объект.СтатьяРасходовСбор = ЭлементПоУмолчанию(КомпонентыОбмена, "СтатьяРасходовТаможенныйСбор");
	КонецЕсли;
	Если Объект.ТаможенныйШтраф <> 0 И Не ЗначениеЗаполнено(Объект.СтатьяРасходовШтраф) Тогда
		Объект.СтатьяРасходовШтраф = ЭлементПоУмолчанию(КомпонентыОбмена, "СтатьяРасходовТаможенныйШтраф");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ПорядокОплаты) Тогда
		ВалютаОплаты = ДенежныеСредстваСервер.ПолучитьВалютуОплаты(Объект.ФормаОплаты, Объект.БанковскийСчетОрганизации);
			
		Объект.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.ПолучитьПорядокОплатыПоУмолчанию(Объект.ВалютаВзаиморасчетов,
			ВалютаОплаты);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ПорядокРасчетов) Тогда
		Объект.ПорядокРасчетов = ВзаиморасчетыСервер.ПорядокРасчетовПоУмолчанию(Объект);
	КонецЕсли;
КонецПроцедуры
