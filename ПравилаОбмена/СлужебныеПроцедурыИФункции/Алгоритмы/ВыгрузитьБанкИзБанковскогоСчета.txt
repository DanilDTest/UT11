Процедура ВыгрузитьБанкИзБанковскогоСчета(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	СтруктураБанк = Новый Структура("БИК, КоррСчет, Наименование, СвифтБИК, Страна, Город, Адрес, ИностранныйБанк");
		
	Если (ДанныеИБ.РучноеИзменениеРеквизитовБанка Или ДанныеИБ.ИностранныйБанк)
		И (ЗначениеЗаполнено(ДанныеИБ.БИКБанка) Или ЗначениеЗаполнено(ДанныеИБ.СВИФТБанка)) Тогда
		
		Банк = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураБанк);
		Банк.БИК          = ДанныеИБ.БИКБанка;
		Банк.СвифтБИК     = ДанныеИБ.СВИФТБанка;
		
		Если ДанныеИБ.ИностранныйБанк Тогда
			Банк.Наименование = ДанныеИБ.НаименованиеБанкаМеждународное;
			Банк.КоррСчет     = ДанныеИБ.СчетВБанкеДляРасчетов;
			Банк.Город        = ДанныеИБ.ГородБанка;
		Иначе
			Банк.Наименование = ДанныеИБ.НаименованиеБанка;
			Банк.КоррСчет     = ДанныеИБ.КоррСчетБанка;
			Банк.Город        = ДанныеИБ.ГородБанкаМеждународный;
		КонецЕсли;
		
		Банк.Адрес           = ДанныеИБ.АдресБанкаМеждународный;
		Банк.ИностранныйБанк = ДанныеИБ.ИностранныйБанк;
		Банк.Страна          = ДанныеИБ.СтранаБанка;
		
		Инструкция = Новый Структура("ИмяПКО, Значение", "Справочник_Банки_ИзСтруктуры", Банк);
		
		Если СтекВыгрузки.Количество() = 1 Тогда
			ДанныеXDTO.КлючевыеСвойства.Вставить("Банк", Инструкция);
		Иначе
			ДанныеXDTO.Вставить("Банк", Инструкция);
		КонецЕсли;
		
		ПравилоОбработки = КомпонентыОбмена.ПравилаОбработкиДанных.Найти("Справочник_Банки_Отправка", "Имя");
		Если Не ПравилоОбработки = Неопределено Тогда
			RM_ОбменДаннымиXDTOСервер.ВыгрузкаОбъектаВыборки(КомпонентыОбмена, Банк, ПравилоОбработки);
		КонецЕсли;
	
	КонецЕсли;
	
	Если ДанныеИБ.РучноеИзменениеРеквизитовБанкаДляРасчетов И (ЗначениеЗаполнено(ДанныеИБ.БИКБанкаДляРасчетов)
		Или ЗначениеЗаполнено(ДанныеИБ.СВИФТБанкаДляРасчетов)) Тогда
	
		БанкДляРасчетов = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураБанк);
		Если ДанныеИБ.ВалютаДенежныхСредств = ВалютаРегламентированногоУчета(КомпонентыОбмена) Тогда
		    БанкДляРасчетов.Наименование = ДанныеИБ.НаименованиеБанкаДляРасчетов;
		    БанкДляРасчетов.Город        = ДанныеИБ.ГородБанкаДляРасчетов;
		Иначе
			БанкДляРасчетов.Наименование = ДанныеИБ.НаименованиеБанкаДляРасчетовМеждународное;
			БанкДляРасчетов.Город        = ДанныеИБ.ГородБанкаДляРасчетовМеждународный;
		КонецЕсли;
		БанкДляРасчетов.БИК          = ДанныеИБ.БИКБанкаДляРасчетов;
		БанкДляРасчетов.СвифтБИК     = ДанныеИБ.СВИФТБанкаДляРасчетов;
		БанкДляРасчетов.КоррСчет     = ДанныеИБ.КоррСчетБанкаДляРасчетов;
		
		
		БанкДляРасчетов.Адрес           = ДанныеИБ.АдресБанкаДляРасчетовМеждународный;
		БанкДляРасчетов.ИностранныйБанк = ДанныеИБ.ИностранныйБанк;
		БанкДляРасчетов.Страна          = ДанныеИБ.СтранаБанкаДляРасчетов;
		
		Инструкция = Новый Структура("ИмяПКО, Значение", "Справочник_Банки_ИзСтруктуры", БанкДляРасчетов);
		
		Если СтекВыгрузки.Количество() = 1 Тогда
			ДанныеXDTO.КлючевыеСвойства.Вставить("БанкДляРасчетов", Инструкция);
		Иначе
			ДанныеXDTO.Вставить("БанкДляРасчетов", Инструкция);
		КонецЕсли;
		
		ПравилоОбработки = КомпонентыОбмена.ПравилаОбработкиДанных.Найти("Справочник_Банки_Отправка", "Имя");
		Если Не ПравилоОбработки = Неопределено Тогда
			RM_ОбменДаннымиXDTOСервер.ВыгрузкаОбъектаВыборки(КомпонентыОбмена, БанкДляРасчетов, ПравилоОбработки);
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры
