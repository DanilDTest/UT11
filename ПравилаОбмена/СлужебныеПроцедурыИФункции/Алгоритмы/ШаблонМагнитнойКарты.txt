Функция ШаблонМагнитнойКарты(ПараметрыШаблона, СоздатьЭлемент)
	Если ТипЗнч(ПараметрыШаблона) = Тип("Структура") Тогда
		СтруктураШаблонов = Новый Структура("Дорожка1, Дорожка2, Дорожка3");
		СтруктураДорожки = Новый Структура("ДоступностьДорожки, Префикс, Суффикс, ДлинаКода, РазделительБлоков, ПоляДорожки");
		СтруктураПолейДорожки = Новый Структура("Поле, НомерБлока, НомерПервогоСимволаПоля, ДлинаПоля");
		Для Каждого КлючИЗначение Из СтруктураШаблонов Цикл
			Если ПараметрыШаблона.Свойство(КлючИЗначение.Ключ)
				И ТипЗнч(ПараметрыШаблона[КлючИЗначение.Ключ]) = Тип("Структура") Тогда // ДорожкаN
				Для Каждого КлючИЗначение1 Из СтруктураДорожки Цикл
					Если ПараметрыШаблона[КлючИЗначение.Ключ].Свойство(КлючИЗначение1.Ключ) Тогда
						Если КлючИЗначение1.Ключ = "ПоляДорожки" Тогда
							Если ТипЗнч(ПараметрыШаблона[КлючИЗначение.Ключ][КлючИЗначение1.Ключ]) = Тип("Массив") Тогда
								Для Каждого ПолеДорожки Из ПараметрыШаблона[КлючИЗначение.Ключ][КлючИЗначение1.Ключ] Цикл
									Если ТипЗнч(ПолеДорожки) = Тип("Структура") Тогда
										Для Каждого КлючИЗначение2 Из СтруктураПолейДорожки Цикл
											Если НЕ ПолеДорожки.Свойство(КлючИЗначение2.Ключ) Тогда
												Возврат Неопределено;
											КонецЕсли;
										КонецЦикла;
									Иначе
										Возврат Неопределено;
									КонецЕсли;
								КонецЦикла;
							Иначе
								Возврат Неопределено;
							КонецЕсли;
						КонецЕсли;
					Иначе
						Возврат Неопределено;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Возврат Неопределено;
			КонецЕсли;
		КонецЦикла;
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ШаблоныМагнитныхКарт.Ссылка
			|ИЗ
			|	Справочник.ШаблоныМагнитныхКарт КАК ШаблоныМагнитныхКарт
			|ГДЕ
			|	ШаблоныМагнитныхКарт.ДоступностьДорожки1 = &ДоступностьДорожки1
			|	И ШаблоныМагнитныхКарт.ДоступностьДорожки2 = &ДоступностьДорожки2
			|	И ШаблоныМагнитныхКарт.ДоступностьДорожки3 = &ДоступностьДорожки3
			|	И ШаблоныМагнитныхКарт.ДлинаКода1 = &ДлинаКода1
			|	И ШаблоныМагнитныхКарт.ДлинаКода2 = &ДлинаКода2
			|	И ШаблоныМагнитныхКарт.ДлинаКода3 = &ДлинаКода3
			|	И ШаблоныМагнитныхКарт.Префикс1 ПОДОБНО &Префикс1
			|	И ШаблоныМагнитныхКарт.Префикс2 ПОДОБНО &Префикс2
			|	И ШаблоныМагнитныхКарт.Префикс3 ПОДОБНО &Префикс3
			|	И ШаблоныМагнитныхКарт.Суффикс1 ПОДОБНО &Суффикс1
			|	И ШаблоныМагнитныхКарт.Суффикс2 ПОДОБНО &Суффикс2
			|	И ШаблоныМагнитныхКарт.Суффикс3 ПОДОБНО &Суффикс3
			|	И ШаблоныМагнитныхКарт.РазделительБлоков1 = &РазделительБлоков1
			|	И ШаблоныМагнитныхКарт.РазделительБлоков2 = &РазделительБлоков2
			|	И ШаблоныМагнитныхКарт.РазделительБлоков3 = &РазделительБлоков3");
		Запрос.УстановитьПараметр("ДлинаКода1", Число(ПараметрыШаблона.Дорожка1.ДлинаКода));
		Запрос.УстановитьПараметр("ДлинаКода2", Число(ПараметрыШаблона.Дорожка2.ДлинаКода));
		Запрос.УстановитьПараметр("ДлинаКода3", Число(ПараметрыШаблона.Дорожка3.ДлинаКода));
		Запрос.УстановитьПараметр("ДоступностьДорожки1", ПараметрыШаблона.Дорожка1.ДоступностьДорожки);
		Запрос.УстановитьПараметр("ДоступностьДорожки2", ПараметрыШаблона.Дорожка2.ДоступностьДорожки);
		Запрос.УстановитьПараметр("ДоступностьДорожки3", ПараметрыШаблона.Дорожка3.ДоступностьДорожки);
		Запрос.УстановитьПараметр("Префикс1", ПараметрыШаблона.Дорожка1.Префикс + "%");
		Запрос.УстановитьПараметр("Префикс2", ПараметрыШаблона.Дорожка2.Префикс + "%");
		Запрос.УстановитьПараметр("Префикс3", ПараметрыШаблона.Дорожка3.Префикс + "%");
		Запрос.УстановитьПараметр("Суффикс1", ПараметрыШаблона.Дорожка1.Суффикс + "%");
		Запрос.УстановитьПараметр("Суффикс2", ПараметрыШаблона.Дорожка2.Суффикс + "%");
		Запрос.УстановитьПараметр("Суффикс3", ПараметрыШаблона.Дорожка3.Суффикс + "%");
		Запрос.УстановитьПараметр("РазделительБлоков1", ПараметрыШаблона.Дорожка1.РазделительБлоков);
		Запрос.УстановитьПараметр("РазделительБлоков2", ПараметрыШаблона.Дорожка2.РазделительБлоков);
		Запрос.УстановитьПараметр("РазделительБлоков3", ПараметрыШаблона.Дорожка3.РазделительБлоков);
		Выборка = Запрос.Выполнить().Выбрать();
		
		СписокШаблонов = Новый Массив;
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		ИначеЕсли СоздатьЭлемент Тогда
			ШаблонКарты = Справочники.ШаблоныМагнитныхКарт.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(ШаблонКарты, Запрос.Параметры);
			Для Сч = 1 По 3 Цикл
				ПоляДорожки = ПараметрыШаблона["Дорожка" + Сч]["ПоляДорожки"];
				Для Каждого ПолеДорожки Из ПоляДорожки Цикл
					СтрокаПоля = ШаблонКарты["ПоляДорожки" + Сч].Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаПоля, ПолеДорожки);
				КонецЦикла;
			КонецЦикла;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ШаблонКарты);
			Возврат ШаблонКарты.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции
