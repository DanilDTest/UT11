Процедура ОтложеннаяОбработка_РеализацияТоваровУслуг(Объект, КомпонентыОбмена, ОбъектМодифицирован)
	ЗаполнениеПартнераВШапкеДокумента(Объект);
	ЗаполнениеСоглашенияСКлиентомВШапкеДокумента(Объект,, Истина);
	ЗаполнитьПараметрыДоставки(Объект);
	ЗаполнитьТипНалогообложенияПоУмолчанию(Объект);   
	
	ДанныеКурса = ПолучитьКурсКратностьВалюты(Объект.Валюта, Объект.Дата);
	Объект.Курс = ДанныеКурса.Курс;
	Объект.Кратность = ДанныеКурса.Кратность;  
	Объект.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг; 
	Объект.ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоЗаказамНакладным;
	Объект.Согласован = Истина;
	Объект.СкидкиРассчитаны = Истина; 
	Объект.ФормаОплаты = Перечисления.ФормыОплаты.Безналичная;   
	  
	Объект.Грузоотправитель = Константы.RM_КонтрагентКазахстана.Получить();   
	ЗаполнитьБанковскийСчетОрганизации(Объект, Объект.Организация, Объект.Валюта, "БанковскийСчетОрганизации");   
	ЗаполнитьБанковскийСчетКонтрагента(Объект, Объект.Грузоотправитель, Объект.Валюта, "БанковскийСчетГрузоотправителя"); 
	ЗаполнитьБанковскийСчетКонтрагента(Объект, Объект.Грузополучатель, Объект.Валюта, "БанковскийСчетГрузополучателя");   
	Объект.БанковскийСчетКонтрагента = Объект.БанковскийСчетГрузополучателя;
	
	
	Если ЗначениеЗаполнено(Объект.ЗаказКлиента) Тогда    
		Объект.Основание = Строка(Объект.ЗаказКлиента);  
		Объект.РеализацияПоЗаказам = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ПорядокОплаты) Тогда
		Если ЗначениеЗаполнено(Объект.Соглашение)
			И (ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами")) Тогда
			
			УсловияПродаж = ПродажиСервер.ПолучитьУсловияПродаж(Объект.Соглашение, Истина, Истина);
			
			Если Не ЗначениеЗаполнено(УсловияПродаж.ИспользуютсяДоговорыКонтрагентов) 
				Или Не УсловияПродаж.ИспользуютсяДоговорыКонтрагентов Тогда
				Объект.ПорядокОплаты = УсловияПродаж.ПорядокОплаты;
			Иначе
				Объект.ПорядокОплаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор, "ПорядокОплаты");
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(Объект.Договор)
			И (ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыСКлиентами")) Тогда
			Объект.ПорядокОплаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Договор, "ПорядокОплаты");
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ПорядокОплаты) Тогда
		ВалютаОплаты = ДенежныеСредстваСервер.ПолучитьВалютуОплаты(Объект.ФормаОплаты, Объект.БанковскийСчетОрганизации, Объект.Касса);
		
		Объект.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.ПолучитьПорядокОплатыПоУмолчанию(Объект.ВалютаВзаиморасчетов,
			Объект.НалогообложениеНДС,
			ВалютаОплаты);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ПорядокРасчетов) Тогда
		Объект.ПорядокРасчетов = ВзаиморасчетыСервер.ПорядокРасчетовПоУмолчанию(Объект);
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьКодТНВЭД", Объект.НалогообложениеНДС);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.Товары, СтруктураДействий, Неопределено);
	
	Объект.ЗаполнитьЭтапыГрафикаОплаты();
	
	ЗаполнитьСтатусыУказанияСерий(Объект, КомпонентыОбмена);  
	
	Если НЕ КомпонентыОбмена.ПараметрыКонвертации.ЭтоОбменБП Тогда
		Объект.ДополнительныеСвойства.Вставить("ТребуетсяГенерацияРОНТПоОснованиюДокумента", Истина);
	КонецЕсли;
КонецПроцедуры
