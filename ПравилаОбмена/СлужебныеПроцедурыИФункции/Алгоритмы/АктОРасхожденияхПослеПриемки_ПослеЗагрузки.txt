Процедура АктОРасхожденияхПослеПриемки_ПослеЗагрузки(Объект) Экспорт
	ДокументОснование = Неопределено;
	Если Объект.Товары.Количество() > 0 Тогда
		ДокументОснование = Объект.Товары[0].ДокументОснование;
	КонецЕсли;  
	
	
	
	
	Если НЕ ДокументОснование = Неопределено 
			И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда 
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ПеремещениеТоваровТовары.ЗаказНаПеремещение) КАК СсылкаЗаказа
		|ПОМЕСТИТЬ Заказы
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
		|ГДЕ
		|	ПеремещениеТоваровТовары.Ссылка = &СсылкаПеремещение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АктОРасхожденияхПослеПеремещенияТовары.Номенклатура КАК Номенклатура,
		|	АктОРасхожденияхПослеПеремещенияТовары.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.АктОРасхожденияхПослеПеремещения.Товары КАК АктОРасхожденияхПослеПеремещенияТовары
		|ГДЕ
		|	АктОРасхожденияхПослеПеремещенияТовары.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказыНаПеремещениеОбороты.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
		|	ЗаказыНаПеремещениеОбороты.Номенклатура КАК Номенклатура,
		|	ЗаказыНаПеремещениеОбороты.Характеристика КАК Характеристика,
		|	ЗаказыНаПеремещениеОбороты.КодСтроки КАК КодСтроки,
		|	ЗаказыНаПеремещениеОбороты.ЗаказаноОборот КАК КОформлениюОстаток
		|ПОМЕСТИТЬ ЗаказыНаПеремещениеБезНазначений
		|ИЗ
		|	РегистрНакопления.ЗаказыНаПеремещение.Обороты(
		|			,
		|			,
		|			Регистратор,
		|			ЗаказНаПеремещение В
		|				(ВЫБРАТЬ
		|					Заказы.СсылкаЗаказа КАК СсылкаЗаказа
		|				ИЗ
		|					Заказы КАК Заказы)) КАК ЗаказыНаПеремещениеОбороты
		|ГДЕ
		|	ЗаказыНаПеремещениеОбороты.Регистратор ССЫЛКА Документ.ЗаказНаПеремещение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаЗаказы.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
		|	ТаблицаЗаказы.Номенклатура КАК Номенклатура,
		|	ТаблицаЗаказы.Характеристика КАК Характеристика,
		|	ТаблицаЗаказы.КодСтроки КАК КодСтроки,
		|	ТаблицаТовары.НачалоОтгрузки КАК НачалоОтгрузки,
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаЗаказы.КОформлениюОстаток КАК КОформлениюОстаток,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|							ИЛИ ТаблицаТовары.Ссылка.ОбосабливатьПоНазначениюЗаказа
		|								И ТаблицаТовары.Назначение.ТипНазначения = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.Собственное)
		|						ТОГДА ТаблицаТовары.Ссылка.Назначение
		|					ИНАЧЕ ТаблицаТовары.Назначение
		|				КОНЕЦ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	КОНЕЦ КАК НазначениеОтправителя,
		|	ТаблицаТовары.Назначение КАК Назначение
		|ПОМЕСТИТЬ ЗаказыНаПеремещение
		|ИЗ
		|	ЗаказыНаПеремещениеБезНазначений КАК ТаблицаЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.Товары КАК ТаблицаТовары
		|		ПО (ТаблицаТовары.Ссылка = ТаблицаЗаказы.ЗаказНаПеремещение)
		|			И (ТаблицаТовары.КодСтроки = ТаблицаЗаказы.КодСтроки)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(*) КАК КоличествоДублей,
		|	ЗаказыНаПеремещение.Номенклатура КАК Номенклатура,
		|	ЗаказыНаПеремещение.Характеристика КАК Характеристика,
		|	ЗаказыНаПеремещение.НазначениеОтправителя КАК НазначениеОтправителя,
		|	ЗаказыНаПеремещение.Назначение КАК Назначение
		|ПОМЕСТИТЬ ДублиТоваров
		|ИЗ
		|	ЗаказыНаПеремещение КАК ЗаказыНаПеремещение
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыНаПеремещение.Номенклатура,
		|	ЗаказыНаПеремещение.Характеристика,
		|	ЗаказыНаПеремещение.НазначениеОтправителя,
		|	ЗаказыНаПеремещение.Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Заказы.ЗаказНаПеремещение КАК ЗаказНаПеремещение,
		|	Заказы.Номенклатура КАК Номенклатура,
		|	Заказы.Характеристика КАК Характеристика,
		|	Заказы.КодСтроки КАК КодСтроки,
		|	Заказы.НазначениеОтправителя КАК НазначениеОтправителя,
		|	Заказы.Назначение КАК Назначение,
		|	Заказы.КОформлениюОстаток КАК КОформлениюОстаток,
		|	0 КАК Распределено,
		|	ДублиТоваров.КоличествоДублей КАК КоличествоДублей
		|ИЗ
		|	ЗаказыНаПеремещение КАК Заказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДублиТоваров КАК ДублиТоваров
		|		ПО Заказы.Номенклатура = ДублиТоваров.Номенклатура
		|			И Заказы.Характеристика = ДублиТоваров.Характеристика
		|			И Заказы.НазначениеОтправителя = ДублиТоваров.НазначениеОтправителя
		|			И Заказы.Назначение = ДублиТоваров.Назначение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Назначение,
		|	НазначениеОтправителя,
		|	Заказы.НачалоОтгрузки,
		|	ЗаказНаПеремещение,
		|	Заказы.НомерСтроки";
	
	Запрос.УстановитьПараметр("СсылкаПеремещение", ДокументОснование);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ТаблицаНераспределенныхТоваров = Новый ТаблицаЗначений();
	ТаблицаНераспределенныхТоваров.Колонки.Добавить("Номенклатура");
	ТаблицаНераспределенныхТоваров.Колонки.Добавить("Характеристика");
	ТаблицаНераспределенныхТоваров.Колонки.Добавить("ЗаказНаПеремещение");
	ТаблицаНераспределенныхТоваров.Колонки.Добавить("Назначение");
	ТаблицаНераспределенныхТоваров.Колонки.Добавить("НазначениеОтправителя");
	ТаблицаНераспределенныхТоваров.Колонки.Добавить("КодСтроки");
	ТаблицаНераспределенныхТоваров.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	 
	Пока Выборка.Следующий() Цикл
				
		СтруктураПоиска = Новый Структура();
		СтруктураПоиска.Вставить("Номенклатура",          Выборка.Номенклатура);
		СтруктураПоиска.Вставить("Характеристика",        Выборка.Характеристика);
		СтруктураПоиска.Вставить("НазначениеОтправителя", Выборка.НазначениеОтправителя);
		СтруктураПоиска.Вставить("Назначение",            Выборка.Назначение);  
		СтруктураПоиска.Вставить("ЗаполненоПоОснованию",  Истина);
		СтруктураПоиска.Вставить("КодСтроки",      0);        
		
		
		НайденныеСтроки = Объект.Товары.НайтиСтроки(СтруктураПоиска);
		НераспределенноеКоличество = Выборка.КОформлениюОстаток;
		
		// Если дублей нет, распределяем строку заказа по строкам накладной
		Если Выборка.КоличествоДублей < 2 Тогда      
	
			Для Каждого ТекСтрока Из НайденныеСтроки Цикл
				
				Если ТекСтрока.КоличествоПоДокументу > НераспределенноеКоличество Тогда
					
					НоваяСтрока = Объект.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
									
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(ТекСтрока, Выборка, "КодСтроки,Назначение,НазначениеОтправителя");
				НераспределенноеКоличество = НераспределенноеКоличество - ТекСтрока.КоличествоПоДокументу;
				
				Если НераспределенноеКоличество <= 0 Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			// Если дубли есть, распределяем строки заказов по строкам накладной с учетом количества.
		Иначе
			
			// На первом проходе заполним только если количество в строке заказа и накладной совпадают.
	
			НайденаПодходящаяСтрока = Ложь;
			
			Для Каждого ТекСтрока Из НайденныеСтроки Цикл
				
				Если ТекСтрока.КоличествоПоДокументу = Выборка.КОформлениюОстаток Тогда
					
					НайденаПодходящаяСтрока = Истина;
					ЗаполнитьЗначенияСвойств(ТекСтрока, Выборка, "КодСтроки,Назначение,НазначениеОтправителя");
					
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если Не НайденаПодходящаяСтрока Тогда
				
				НоваяСтрока = ТаблицаНераспределенныхТоваров.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				//НоваяСтрока.Количество = НераспределенноеКоличество;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Распределим дубли товаров, нераспределенные на первом проходе
	Если ТаблицаНераспределенныхТоваров.Количество() > 0 Тогда
		
		СтруктураПоиска = Новый Структура();
		СтруктураПоиска.Вставить("КодСтроки", 0); 
		СтруктураПоиска.Вставить("ЗаполненоПоОснованию",  Истина);
		//СтруктураПоиска.Вставить("ЗаказНаПеремещение", Документы.ЗаказНаПеремещение.ПустаяСсылка());
		
		СтрокиТовары = Объект.Товары.НайтиСтроки(СтруктураПоиска);
		ВсегоСтрокДляОбработки = СтрокиТовары.Количество();
		
		Индекс = 0;
		Пока Индекс < ВсегоСтрокДляОбработки Цикл
			
			СтрокаТовары = СтрокиТовары[Индекс];
			
			// Найдем нужные строки в таблице нераспределенных товаров
			СтруктураПоиска = Новый Структура();
			СтруктураПоиска.Вставить("Номенклатура",          СтрокаТовары.Номенклатура);
			СтруктураПоиска.Вставить("Характеристика",        СтрокаТовары.Характеристика);
			СтруктураПоиска.Вставить("НазначениеОтправителя", СтрокаТовары.НазначениеОтправителя);
			СтруктураПоиска.Вставить("Назначение",            СтрокаТовары.Назначение);
			
			НайденныеСтроки = ТаблицаНераспределенныхТоваров.НайтиСтроки(СтруктураПоиска);
			
			Для Каждого ТекСтрока Из НайденныеСтроки Цикл
				Если ТекСтрока.Номенклатура = СтрокаТовары.Номенклатура
					И ТекСтрока.Характеристика = СтрокаТовары.Характеристика
					И ТекСтрока.Количество > 0 Тогда
					
					КоличествоЗаполнить = Мин(ТекСтрока.Количество, СтрокаТовары.КоличествоПоДокументу);
					Если КоличествоЗаполнить < СтрокаТовары.КоличествоПоДокументу Тогда
						
						НоваяСтрока = Объект.Товары.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовары);
						//НоваяСтрока.Количество = СтрокаТовары.Количество - КоличествоЗаполнить;
						СтрокиТовары.Добавить(НоваяСтрока);
						ВсегоСтрокДляОбработки = ВсегоСтрокДляОбработки + 1;
						
					КонецЕсли;
					//СтрокаТовары.Количество = КоличествоЗаполнить;
					
					ЗаполнитьЗначенияСвойств(СтрокаТовары, ТекСтрока, "КодСтроки,Назначение,НазначениеОтправителя");
					
					// Уменьшим нераспределенное количество в таблице
					ТекСтрока.Количество = ТекСтрока.Количество - СтрокаТовары.КоличествоПоДокументу;
					
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЕсли;   
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл     
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура",          Выборка.Номенклатура);
		СтруктураПоиска.Вставить("Характеристика",        Выборка.Характеристика);
		СтруктураПоиска.Вставить("НазначениеОтправителя", Выборка.НазначениеОтправителя);
		СтруктураПоиска.Вставить("Назначение",            Выборка.Назначение);  
		
		НайденныеСтроки = Объект.Товары.НайтиСтроки(СтруктураПоиска);
	 
		
		Для Каждого ТекСтрока Из НайденныеСтроки Цикл      
			ТекСтрока.Заказ = Выборка.ЗаказНаПеремещение;
		КонецЦикла;
		
	КонецЦикла;
	
	//Объект.Записать();
	КонецЕсли;
КонецПроцедуры
